(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    118161,       2352]
NotebookOptionsPosition[    116351,       2289]
NotebookOutlinePosition[    116709,       2305]
CellTagsIndexPosition[    116666,       2302]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"segsegintersection", "[", "lines_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"md", "=", 
        RowBox[{"Subtract", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Plus", "@@", "#"}], "&"}], "/@", "lines"}], ")"}]}]}], 
       ",", 
       RowBox[{"sub", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Subtract", "@@", "#"}], "&"}], "/@", "lines"}]}], ",", 
       "det"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"INPUTS", ":", " ", 
        RowBox[{"a", " ", "list", " ", "of", " ", "lines", "   ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "line1", "}"}], ",", " ", 
           RowBox[{"{", "line2", "}"}]}], "}"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"where", " ", "line"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "y1"}], "}"}]}], "}"}], "\[IndentingNewLine]", 
         "returns", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], " ", "intersection", " ", "point", 
         " ", "if"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"det", "=", 
       RowBox[{"-", 
        RowBox[{"Det", "[", "sub", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "\[LessEqual]", "1"}], "&"}], "/@",
              "#"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Plus", "@@", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "-", 
               RowBox[{
                RowBox[{"Subtract", "@@", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], " ", 
                RowBox[{"Last", "@", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}]}], ")"}], "/", "2"}], "&"}], 
           "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "@", "lines"}], ",", "#"}], "}"}]}], ",", 
          "False"}], "]"}], "&"}], "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Det", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "md"}], "}"}], "]"}], "/", "det"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"Reverse", "@", "#"}]}], "}"}], "&"}], "@", "sub"}], 
          ")"}]}], ")"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindIntersectionOfsegmentWithWalls", "[", 
     RowBox[{"seg_", ",", "walls_"}], "]"}], ":=", 
    RowBox[{"First", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"segsegintersection", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"seg", ",", "edge"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"edge", ",", "walls"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"#", "=!=", "False"}], "&"}]}], "]"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"moveParticleInWalls", "[", 
   RowBox[{"pos_", ",", "move_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{
       "pos", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"y", " ", "=", " ", 
       RowBox[{
       "pos", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"moveApplied", "=", " ", 
       RowBox[{"pos", "+", "move"}]}], ",", "newPos", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"walls", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]",
          " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"move", ":", "  ", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]x", ",", " ", "\[CapitalDelta]y"}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"walls", " ", "=", " ", 
       RowBox[{
        RowBox[{
        "list", " ", "of", " ", "line", " ", "segments", 
         "\[IndentingNewLine]", "pos"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}], " ", "position"}]}]}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", "  ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "x", "]"}], "\[NotEqual]", " ", "1"}], " ", "&&",
         " ", 
        RowBox[{
         RowBox[{"Abs", "[", "y", "]"}], "\[NotEqual]", " ", "1"}]}], " ", 
       ")"}], 
      RowBox[{"(*", 
       RowBox[{"not", " ", "touching", " ", "wall"}], "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "true", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
            "moveApplied", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "]"}], "<", " ", "1"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
            "moveApplied", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], "]"}], "<", " ", "1"}]}], " ", ")"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"apply", " ", "move"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"newPos", " ", "=", " ", 
         RowBox[{"pos", "+", "move"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"stop", " ", "movement"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"newPos", " ", "=", 
         RowBox[{"FindIntersectionOfsegmentWithWalls", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pos", ",", "moveApplied"}], "}"}], ",", "walls"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"we", " ", "are", " ", "touching", " ", "the", " ", 
        RowBox[{"walls", ".", "  ", "Which"}], " ", 
        RowBox[{"wall", "?"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]Des", " ", "=", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
             "move", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "move", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
             "]"}]}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"moveOK", " ", "=", " ", "True"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", " ", "\[Equal]", " ", 
             RowBox[{"-", "1"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], ">", 
             FractionBox["\[Pi]", "2"]}]}], ",", " ", 
           RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], "<", 
             FractionBox["\[Pi]", "2"]}]}], ",", " ", 
           RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
            RowBox[{"\[Alpha]Des", ">", "0"}]}], ",", " ", 
           RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", " ", "\[Equal]", " ", 
             RowBox[{"-", "1"}]}], " ", "&&", " ", 
            RowBox[{"\[Alpha]Des", "<", "0"}]}], ",", " ", 
           RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"newPos", " ", "=", 
          RowBox[{"If", "[", 
           RowBox[{"moveOK", ",", 
            RowBox[{"pos", "+", "move"}], ",", "pos"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]"}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.6436330620151863`*^9, 3.643633142555245*^9}, {
  3.643634635387471*^9, 3.643634635773616*^9}, {3.64363493510086*^9, 
  3.64363493534129*^9}, {3.643635816124959*^9, 3.6436358204569397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"moveParticleInWalls", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643634786109346*^9, 3.6436348077701683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["2", "3"]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.643634808568386*^9, 3.643634833459009*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "e2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"l", "[", 
  RowBox[{"[", 
   RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6436336651977367`*^9, 3.643633837276424*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "c2", ",", "d2", ",", "e2", ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "h"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6436337957736998`*^9, 3.643633828392552*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"g", ",", "h"}], "}"}]], "Input",
 CellChangeTimes->{{3.6436337921485*^9, 3.643633793351616*^9}}],

Cell[BoxData[
 RowBox[{"segsegintersection", "[", "walls", "]"}]], "Input",
 CellChangeTimes->{3.64363419390368*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindIntersectionOfsegmentWithWalls", "[", 
    RowBox[{"seg_", ",", "walls_"}], "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"segsegintersection", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"seg", ",", "edge"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"edge", ",", "walls"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"#", "=!=", "False"}], "&"}]}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.64363431346393*^9, 3.643634382170238*^9}, {
  3.643634620179369*^9, 3.643634623186872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"walls", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", "edge"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"edge", ",", "walls"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.643634444230335*^9, 3.643634448415419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"seg", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"seg", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"seg", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.643634445341906*^9, 3.64363444878786*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "i", "]"}], ";", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "3", ",", "6", ",", "23"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6436344757746887`*^9, 3.64363451805254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", "1"}]], "Print",
 CellChangeTimes->{{3.643634485373148*^9, 3.6436345186027403`*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.643634485373148*^9, 3.6436345186063337`*^9}}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{{3.643634485373148*^9, 3.643634518611393*^9}}],

Cell[BoxData["23"], "Print",
 CellChangeTimes->{{3.643634485373148*^9, 3.643634518613235*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "3", ",", "6", ",", "23"}], "}"}]], "Output",
 CellChangeTimes->{{3.64363448539867*^9, 3.643634518615137*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"seg", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"segsegintersection", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"seg", ",", "edge"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"edge", ",", "walls"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FindIntersectionOfsegmentWithWalls", "[", 
  RowBox[{"seg", ",", "walls"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643634552852124*^9, 3.6436345663419323`*^9}, {
  3.643634599203614*^9, 3.643634602874159*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643634569016214*^9, {3.643634603346386*^9, 3.643634625790579*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "3"], ",", "1"}], "}"}], ",", "False", ",", "False"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.643634569016214*^9, {3.643634603346386*^9, 3.643634625795103*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.643634569016214*^9, {3.643634603346386*^9, 3.643634625798175*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]Des", " ", "=", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"move", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{
       "move", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"moveOK", " ", "=", " ", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", "\[Equal]", " ", 
        RowBox[{"-", "1"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], ">", 
        FractionBox["\[Pi]", "2"]}]}], ",", " ", 
      RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], "<", 
        FractionBox["\[Pi]", "2"]}]}], ",", " ", 
      RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
       RowBox[{"\[Alpha]Des", ">", "0"}]}], ",", " ", 
      RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"y", " ", "\[Equal]", " ", 
        RowBox[{"-", "1"}]}], " ", "&&", " ", 
       RowBox[{"\[Alpha]Des", "<", "0"}]}], ",", " ", 
      RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.6436350183801394`*^9, 3.6436351380395613`*^9}, {
  3.643635223825429*^9, 3.643635276967046*^9}, {3.6436353523985558`*^9, 
  3.6436354350875397`*^9}, {3.643635481246706*^9, 3.643635573758751*^9}, {
  3.643635680252645*^9, 3.643635683476873*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(move \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643635242372673*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(move \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643635242412163*^9}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{
   RowBox[{"move", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"move", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.643635242414895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ArcTan", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6436353184088306`*^9, 3.643635340309278*^9}, {
  3.643635664719482*^9, 3.643635669356599*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
sM7gtK5hncHHi3UN6wxO6xrWGZzWNawzuKozOK1rWGdwWtewzuC0rmGdOR5J
rGtYZ/BDYl3DOoMLP8lH1hncQaxrWGfEQbQUfg/WGZz8G6wzx8kIPwbrzPHI
wl/BOoPXF34JDTqDnxf+B9YZnPwMrLN1PIzUGZz8BqwzOPkHWGdw8gOwzuAi
7iWedQZPe2xZ17PO4HZi/c46g5cT63TWGf63b3u319vSRuoMTv4lXfEj6eRH
0hV/kU7+Il3xC+nkF9IU/49O/h9N8fPo5Odhna3jXqTO4OTP0RT/jE7+GU3x
w+jkh9EUf4tO/hZN8avo5FfRFP+JTv4T1hNX+P+hpxf5m/t7xsXGFJF+ueal
s9YLqVLAOJ2ld8/UHtL/hn3XXh3GFOo1U/rZ9l/P6uf/uYAxMtbriL+X9Kc9
I3/435laPnIuIP1mjj2zea7aLf1m0LPSH/xjqL/q70L9F9ReFFfvlPRrof6L
hk7uuvqx9F+h/nsm5T2zsFwC2+eo/+4CJTOfXBLH9jnqX2Bx1ov7cn1mOzxx
YK4WhZp6GyHTe1XftEL6kXDlc1jwb6zPXSjEP69RrkPx8KpO0o+UgfbVNzv8
a57hLv1IFftnTmuSPZ9hWr2u9TEn6UfqS35lU6Fd7RbeknquTM08tNDtfL/5
G81/8B8mUP1VPxI9t+H3Jq1i0gfpR0L9S5/3XNzirvQjZaT6Z/zZ8fUKJ+nf
q0T1dw0ssWuPu/Tjof69lw/3+mttFK93UP+6TQpsCJsk/XUuu00xTVblNLx9
XjSdOUD6kQbQ/sP4rk/2vz4u/Ui4WsdfmQwfilO4MGjfx7BgqfM0R48t/sM9
jU5rg4o+2C91fkn++JPfyw2+fET666pWyTlueEie3/x1a/7gr3Om+qt+pP5U
/9v5pnyZf1P6kdgOGlRFKz40nnXOR/WvZIkr/sw6T6f6n6/tvnazQxTrjPqL
/dwPrDPq37n38A7TF0h/XV5LP3Iznnwp07J6T+lHmkr7M+Pdr2d55i/9SGKf
xGQ0uVHaN/d76a/DFfqz/VDPrVaIv7vhf/aYT72l0l8XT/sYhaMmbb/5U/rr
Wo7N7r6q0O/+uoPkB1PbszfVX/UjTaH6n+9Xbc3NXAmsM+r/bmhIvYFpMaxz
Fao/zslC59VUf0fbjw0Gl49knVH/LkVHbi324R3rjPpH7c45ckgO6a8bZHnv
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
63wsv+ujxpVZ5z+R5f8PcpneOw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
amx2znF13RzX6bMaj4r3NDY0Ro4Jjv2kcWk91TtrnHdRDFF4bHfLvkI+Qz6m
X/YzGkcz87xqkMetfJrsSXkM18/zVP5wap5fteEDC+sU6krpGuJvs52Q6+vl
+7Vn1BotXU/tMjizbrqE9zuK99q/tL+T3zs0uJ+ll9XM76h3/aTiuaI5I996
SH439aW0yP80G57XQ31C+ZL6HbB7Z+6en/lFHp8aK/rMCXmOaK+kuGha8f+/
W9+h9UBjRGNXscfc4DVBWqniCK0rZb5/Un4ftYPaSDrO6PzZSv4dU/JvUdtM
zO15d9Xt/WPhvZmeq/GpZ4tXq52D177X+K1HFl5rNA4u5b4Z/O0A2vCeqv3Y
T4VjucNz347N77k6f6/6Uvv5b4PX3OVZn+yS26dlbhNpgK3ye8v3Hk2ZUXiM
zs++/SzF64VjL82fYzIrzpA9JtefGbw2SgOWj5+d319attb60/kd06mbk5+v
75meWc/Rd2id0Jqs9Ui/U21wan7OuNyX0i43zff8ntfxU/L9PwTHEufm+P34
3HcN83P0fvvkMSY/KF2rDZ+5DXtDsiayv+Kawn2g7/0+ON54PXpcj859rWfo
WfIRY3K9/JFi3RPU7qX3EYrd/sxx7Jg8xq4N1sS6JetjmlvSDk8L/m3zsNcE
6ydT8zvVgy/L7T0vt7l8lFhxiGLv47CjStedlu9Re8/N7ay1WNeKD3uU1pFn
5D2R/JvWGe3/pQNofVwUrPX1gO8K1j2kf9wJN1bsQf05XPeFX+YzbwfHbIOo
fys4JtxV+5pkraQ39pbg39IdPom6zvCjfPbxYN2yF/Ur4T3hPZLzJNJnpNPc
Lx+teU/9Y/Lj8I7wQ8naUE/sh9TvqvgBfjRY/9wJXhqs50jX+SA4Ht5de8bg
9x8IfxIc9w6FXw3WVwfA3yZrfNrTdaSNrqp4j9wpWkvRnnQh92+t9qFuWbBm
25/6e4J1nuOpvzu/g9rws2RNU3vD5cF6uGLnl4M13n7UfxQcqw+GPw6O54do
zCTngXbBXl11W31AGz4T3J59qH9FfQzvnLwfvQPeEvtssN7bl/rGWWORDtQo
ay/7aa+WtZp94c/gJ+EV2HWiY/6x1K8VHbuOgVN0XDoarhG9XxgHfxrtY/RZ
6bPSaVsEa0Ha20gjUo5EOZF94HeD80pnUfcL998Gt8JG6pfAXeG/KHfD22D/
pNwFt8v6jDScttjvKNfDTbCrKQu0tmBXUW6HW2Nr8MylGkuKM4P1uhOyhtOf
63eTtWZpzq21tkbradJY2kZrbtJeWmYNWRpbu2g9TZqTdCHtB7Wf21p71Ip1
GOkBGj+bYltk7UhajTSlnfmed7DPReewpI+tDt6DDE/eMys+vxL+jfpJ1I+C
vwzWBIapr4M1gb3gX4P3IyM1foP3Ynsm572019sbXhO8PxoBLw7WMGfyPXcE
a6THwvcF65yz9DuC8xST1R7BmvAU+cbo3M08nnNZnuPyW5cEa8UH8vcLgzXe
SfCE6PzLXO6/NFhDnkrd+Ohc1RzqLwjOg0yUPhCt3Ul36h6t70n/6RGt+0l7
+Tm5v6Wx9IzWBqXb7BCtAUrL2i8633QaPBR+uGI9ak3yOJPesj31N1asiY2D
X4Rnw8OiNUDlLhSD9Myxh3KIYmkKikd65Pq1k/f3I0rnMbU/Ujx0eNV+bFHh
vKf2YlrjpRdoDZFWMSJ6bzuLZ4yJzq0oxyLd6D31neZ9tBYqDW2vaK1SGtoV
wbr9wdSNjNYHpPvtE51DPBkeHZ1bPAUeFZ1PPEnjKjlPI21K+1qtBdrbdo7W
kKWV9o72J9IPHwrWrk+kbkmwTn6S2jVY6z4Zfi14/y7/9npwjvIM9Vuwnj9d
fQ4PhE+H3wjOtZ2ptg/OL58G3x6cEzla/ROs/x8JPxissWuNWBCcQzmG+tuC
9f8Z8HV5/dJ6qjyW8hGHahwF5wWOgm8Izh0cAV8fnFM4PFq30zjphn0hOM8+
j/onst/WmrJLtK4rLXTXaC1Xa2ufaA1T2unu0Xtz7dEHRWvC0kgHwvdWrJ1K
89N46y+dJlpDlnb6fHCufy51faO1a2mklwfnUw7S/IC3VztojQrOxRwi/x2c
Hz9VYyH4/MAcja/gcwKz4Z2j/af86JXBeZlpqkvO8WyH3aJ0vkFrxHvB+f35
3DOl9F7lMuqvTc5LySdcn5yL0ry+JjkXJb/xDfdO5rPnql+Sc1fyD19nn3aO
xldyTlT9uzA5/6Q+uis5h6Q+vSo5Hyb/cHVynky+5e7k3JXGyT3JeSaNhxeT
z0nonZcl798aY59KzsGoT19IPlehNWhRcq5L4/O55HMVGpPPJOdyNFbvTc57
yU/qXEFTtR3t8WzyuQSN86eTc0gaw68kn43Qb78xOeekvrs9Oe+r8fZncr5W
MdIvyevcQ9T/lLyGPQj/nZzrVWz2Q/Kadz/1a5XW+BQ/rFNay1MMs3ZpTVAx
SVlaE1RssCp5TV3CZ1cna0YPR58PWVFx7kZnUZSDl/52c3J+TmPjpuT8nPzM
rcm5Q82pW5JzjRp7C5Jze5pTr8KPwZfJJ8BL4SvgX5PX40fgv5Lz1ootf0/O
NytOXk55HL5csUNpfVAxzEvJZ1DO1jhPzrdpjuwdrSPJVw+PzlPr+dIK5Vd3
VzxV+tyD1oLdSp+H0Po1qPQ5Bq1NA0ufdZD/H1A6Zy+fuWvpcw9ap8ZGn4uQ
fx4gv1Bxe/aPjjHUd/3y2qH5tZ3GZcX91Ss6tlGf7hSt1z2A7RYd59yHjdFa
0KXYLnmeyg9vGx0j3Y3tGh0LLcZ2iI557sW2j4557sFuk9dBxScvJ5/j0Vxr
I99H/V3y29S1x+fvy2+5Lzm3qtj1nORzPfVLa7jaV+pc0eLk/K7i3vuT86+K
ox5MzrkqZtA5n5UVn8FYmpwrlf95IDmPq3hjfvL5pk14/sPJ+W+tI48n51Pl
o85OPrtUj3u2jI7x7sTWKp0X0b5jSPQZA43hmqVzJNqDDI5eQ+V7a5TWphXz
P5qcD5bPXJKcM9Za9lhyjlY+85Hk3LzWstbR2vvC6JhbsXcjnhlL6+CKvZfy
t08rzmnuEKwFj8/ru2IDaSA6CyR9WP5C9+sZQ0rHDNI11sE2DtZCpDfrDJj2
xrODz0i1yX2kfaP2j9JCpR1LUzso+GyMYu09SseTimH3gh/l/q+4v5naMfpM
wo3YLaI15EXYtaPPQmiuSY+VNiCdVudYpPdoz6zYXnNoJM9ct/Q+RPsR5TkU
++g81dTgvLDep0uwZqAchWJixcbSNsvocybyCTrjpZhjQvC5Hel+yt9J45Le
pf2txqH2+NrrKwenvbi0WWnF2+R2Vj7ofxr2Es2T/ExpKdIJpAdLm5ImIz1Y
mupE7PjS+s+ReQ8uTWNG1kCUi1VOth62den8uvZHOgPzP91auqty9nqWfKV8
ps4USf+R9nQKfHKwjiyWBivdVXqBxr/0H+lAGufSHKQ9SNPuwD37B+s/h+Ux
II1x18Lr10fRba62Xzf6zIn86nqUOfBV2De478mq+W342arPrTWJPtNyG7Zp
9NmV27Fvcs/TVZ+Fewt+puqzcN8l55/kZz5OPqOjz36YfN7lFs2L5PM0N8Mf
JZ+nuRV+P/lc0U3w5tF7Je09/00+h6R9fbX02SbpAMo7Sg9RXKHDLTr/pP3+
18nnbOTTitJnpLTH/zF53yj/+V7yOSSN7dfhJxTXwN8n50vkV3VOT/OgqXLL
yed75Eu/ST6jI//5SfK5IrWJ8p7qh7Glz0lqLmtOq52UH5T225D7Lqz49yo/
qJyK9pMaoxqryjE1iD7jpPapGX3WSO/2X16y4jxh/ejzRWqrTaPPR6ltJ5We
V8q/6EyIcg/aN6o/dVZEmv/nyeeTNJe/SD5TJT/5ZfJZK/n5ZtFnkBZE961y
ncodrEw+qyT/9mny+ao71Hea6xWvs62i9wLa8zaPPvuke1Ykn6/SMyeWzh9o
rzqstC87PY/V2tm//ZOsAUm3Wb90bk9aRyitK0kv6lf6DKL2JpuVzjtqr9qq
9HiWzlC7dO5Qek6L0nGFdAnlzeXrftbvLR17SGdoUNofSSccU3rNUw7oj+S9
mWLdhqXzbdojNy8de0jfWK90LlP60g/R813nYfqXPjepvdUGpfOa0mr6lj7T
qX2c8uvKSetcgfLryivrHILy6Mo361zHhqXzo9KgNi+dc9Uev1HpfKF0gI1L
5xq13x+XfbpiA51tVW46Ud+y9JiXVlOndH5XetpGpfOa0gHqls6PSitoUjqf
J//WuHTeV7rB6NI+VLmn/wPPMF5m
          "]], Polygon3DBox[CompressedData["
1:eJwtmwf8j9UfxZ9xnx+aFFKZ2WRmJKRsJRWhYaehoSEpLTRUkqSFpEVDQ9ql
NM1SCu1oilIoof7qf96d+3p1+91z77O+z3Pv53POuVeNYRf0HpklSXJQniRB
fy8qkuRx/a2jxlYlSTJT7WWEzxSeq77ZwnsLnyP8uPB9wnsJjxB+THi0ynzh
RsJH6PyH1L+f8PnCT6jvWUqaJPXVNk99D6vsrzoP8aT65giXF75A+Cnh5yg6
voHanlDfSOFHVK+p/sN0/QXCC9RfT22Pq/9q4UWqt1N/J/VfKfya8BHCRwtf
Jfy6cFvhjsKXCj8v3Ey4rfA1wm8ItxfuLHynrqn/ksHC96tvjMoLws2F26l/
rPDLwi2FOwjXEe6j58koqtfWS52t/k/V34B+4fuFPxNuKDxNF+f9D9L/Zuv4
u+J3GCL8gPBalUL1mzhHHfeoX6clw9T2kPqmC5cSPl34YeHPVEqrfovapql+
vspc1Q9RW3OdeK+O30P4LOFH1HeByqPCtYRbqH+NcK76DWrbS/e7W8erKRmq
tgdV+USlRPWb1fa5+i8Ufkz12mprqfNn6fg9hc8WflR9f6h0UP0ttXXX8a2E
b9C7qaxSkXenslD1w9T/fO7fWEp4cebfzj1KCy/JfO9X+J7CLXT8Czp+HuNB
uIrwraq3UJkgfJDKXqqfx7hUvbr6H8g9pp4Qrpl4rG0MfpYrVK9R4jH6uHCN
xGN3sfDHwj2EVwi/K/yRcHfh5Zyvcpbq83Wfijq/tvrrqX8Y71T1Deo/Q/Wn
1F9e/T8KDxd+Unh/vof+fqbjT1DbR+pbpnO+EO4tvFp4Ke9A+EThj4XfEV4l
3E14mfAS4dXCxwi/J/w841m4IffIPUfn8L4Tz13m6EPCByeeu5cJv6j6YXqO
9nqe5sJXqv8CtVVWvZnK5cIjhQ9Q/SWVV4WbCz+n8y8Rflr1Q3V+G50/X/gp
9ddW2yPqv1LtLws3FV4g/ALzR/hQ3onwi3xT4WbCzwq3FL6O51Mpp/oorqe+
hrrO4bp+NX2v6cKrhOuXeMzfzVhKPBcY07OFD0w81hmDDzAeEo/NKswh1T/U
+fV0/hn6O1P9M1TmFI5B81Q/JHFsIubNEq6UOBY+zTHCtYTnCjcVvlT4fOH9
eFe8I9Vb6LpH6voNhAerf7vaftG96woPEL5QuAa/VW3tVH9XbYuEGzMnVd+i
cobOvzp4bvDOefdXBb973hnvroWeoQvvU2UAgUpth6s+QvVhxLPgucIcY65N
ED5C+G3h14SvFW4r/I7w6zyPzjtf9XP5HvoNp+Z+9qPUNkb101R2CncUvlz1
scFjjRhNrP5A5TfVz1bbJvWfo9JGOKgcxfdQOUB9F+vaz+jYy4JzATGcWH5p
8NjhHfOux6m8K3y0ju+i3zNG/XUSjzHG2ujgb8GcZm5fHpwryDHkmg9VjtA9
/1HbFvWNU2mZOIYQSxqpnM144R2qPl5lMb9P9+uq+10nvEy4i3AP4XG5v119
HT9e9QnqXyLcSf3d1H9WcL6bnDqeX6uyVLiz+rur/4LguceYZGxeGDw3mZPM
zfHCbYTfEl5IrFR5T7iHzj9W5/fXPWupb09iAPMvOJYxZhm7x+u4OqrvT/xj
fuV+X+PV/qr6b+adCB8nfLyuNyp4rBPziH03qqwUPlb9x6l/m/o3Ci8SHiJ8
E99YuKdwL+GJwu8LHyPcU7gJc1bX2qpypvD7wt+pfoqO+ULPckXw3CdGEauO
U1tZ4oXKPyodc8f/6ip/qZzOM+n4EOfrR/pbIXMMIBZ0hp8wX1X+p/KNjj+A
Oc38Uv+ZwrepvnfMt+cVzr9VhJsJ19X5Pwvvq3N3qyzPfCznrNf5XwRff6na
PtW561Uqqj5D/dXVV094kPovEs7JFSqp+q8TLq3+j0iewtfqT4nw8MK5vIjx
i2uWUn1S4nutEv5X15vAbxb+XLiM+icL36F6p9z5sIbK3ypHk5/1t5rKLmKG
zlmvYw/M/X0XCX8r3Fj4BOFC19ibfCF8uvAp6l+deKycKnyD/l6k/vOY07pv
qcJzd5vKcMY38VZ9+6vvUOEVwt+orz/8ROe+J/yt8Mnwg9zXu1h4h/D1uePL
SOE/hK8lP+j+jRLnBHLDsWr7SfhI4VGqr1Tbr6lzLLn27MLxu7zu30j3H6K2
DcLtyFmqf6v+Suq7F86ja59bmH9VVltTHb9OeD/V71TbweofUXgsMaYaq/9r
4XKq36G2g9T/lXBZ4Wm8U+EvhfcVvl24EuNDeB/hqeRH3qVwJny98B7CbzF/
9WydiPG8c5XmqWMosZSYS+wlJi8U3iRcV+fPE26m809X+Zpr556PQ7gnv1/4
GOFhPKNwxdzzr5H+bhHeptJE9aE8M78vd/z4GX4CF1db8+BvBLeZk/nbMUfh
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
djpzSH8vzO3b4QGU6PnKxXiPB4E3/2fw7yVHkq/xEI7PrUHwFsrCWdTXkBya
+3nRlOsTexWn6PjRuWNUaR37U3As5Bz8X+Ybayl4LHgteEqX5Y5heE3kp8NS
PwPPwhhnrKOx/46//0wd34L7B+dL5lJL4d2q3xXcx/fZEeczuQCPFq/23eBc
k6d+H8RIYuUZqf3ChirnJPYQ8RLPih7d1eSDwusLcIduqdc7KhSu87yMFfwm
PDA4E9yJOchcZA2JtSTiM94knjDe8Aj1N4s5lPH7ic7pq7728fsQ31n7GBXf
D8/Hs45TOaywB83zk/P/Un1xsL+3D/NF9YtVfhX+TWUF+i7YSyyv8n3w/fFt
mDMfButnvJ+H9Dv2LrGnhLd0jdrujuMBb4lrfMd4UCmX2rP6NNijHhHnAHPh
G7Xtl9oTxH9j/F2kspdwKvw43yyxh0M8mhfjWcWYj56I8fGAmI8ejfyzbIxP
cyP/2yfyUzyxxnEOMBeejnqjauSHtYSnCH8i/L3wU8L3Jc755OcnIx+sFPPx
Y5GvlYvxjvlYJbeG+0F/X8/sM+I3ko+3B88NOAB8j/lwiY4bp+O/DP7N/HZy
Dv4iHAwuBke8szDngntVj+MdzgZ3qxa/78PBXjHfowLagJyfenyW511HfofH
if/I/MK7xf+boevPUdumxM9TUfU+6q+Vu22p8N0hjvU4n/qqv05uT3WZ8D3B
94aj/cP1Veqm9pSIV3iK2yKnu0f3+zp4LG6M/Gl68L3xLP8NXhNhbYT1iek6
/jThK3PH2NbCW3N783C6t4ntKg1S50D4+QAdf3XuGHy4cPvcvKBezJ943PjQ
cDi43GyViYnXRFkbZXG2Seqcz/oNMZ3YAadkfQzO0C7qS7gEnliXqJfRX+gx
9PMK4cHBnIi1aDQiXAmPDq8fToN3h2fG2gKeDF4aHlbnqOfxtvDAWBvBY8Ib
wyNj7QLPBO8MTsTaN5oRroT+bRz1G/wcTcraHRoZrYpnw1o2Gh2/AE8Rbx8O
h9d4AJ5Qao4+pbBHxFoXngLeEX4DfhOaFm2L58VaOZ4KXhias1H0A9CieFSs
veOh4F3h8bAWiUeD94MH1z7qCfwB/AL0xVuJ9TEamLVBPB+0MZocbxhPF61+
sPAhuWM4sfwQ4Zq5xxexD02INmQNj7U8PKSDM3vGeEuVeJ7cnABugEZukNlz
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

          "]], Polygon3DBox[CompressedData["
1:eJwt13m8z1Uex/HfvffnWqISRVRGSKHFNrLvspWpaOyF9oUWeyMVYiL7vu+U
JSZbyVIhj2SbQjO2FqGUlrHVmJrnp+/94+2c9+u8z/n+7vd7NiW79rine2Yq
ldpKuWhUOpVaAHySkUo15w9mpVLLsH1YXhqJleJH00L+U7kW2CG52gZ4HluH
3YqtwJ7FzmI3UTmqlp1K1cL6q6+Vu0VupVwd7GVsE7aR1vN30SLsGN9B7ojc
Bs/NUlbD38Xu5n/ly8n0UfamKfrtTid9om9FbA8/hz7UryH/N21X8D+o95EZ
rqxKY/Rdgn8il5tGyJXkx9I/+K9k22OnZIfLllCOpv74j8q/YmvlzvDPyZ3B
ZmIDlbXod+wnY31JW9TrybbCv+J30X+wb/QtiW3h2+q7TuYs1lPbWXwIVkh5
B96UmnunNbBn1afKTaNf+Va0GPua76jvYX3uw1Zg32MPYyfjb/acldiXWDvs
W6y63BPYYqwENhdrj72Dncd6Y+exdtjb2DmsF3YOKxrzQDmK+sX75zvQerkL
8Z3kLmj7C/Y6dhzrhB3NmQcvYW9iK+g3Po/fl5s6q78fc1PZjfaoF6JJ+l6n
PR/lpfu1fRBzUzmb36bewNjPyxXk36Ez2I20DGvAPyi7ly9Mk7Fr08m3i2+4
BrtefYTMXHw734gfoK0Qv4qOYUVpBlYpnfBobyzXhMbpm43lok7q78n+U/km
f1D9Mhonf2PMNbxaPC9nbsYcXY1/LXM1zZSrzG+kS7TVxT7A2vIr6BB/OY3H
bop5S0f4K2giVj6+Nx3mC9IErBz/dsw/viwtxerzE/2WJz3jKbrVb0lhj2PH
ZYpRcbrV/FuHf69ekhaI1eDTsVapo/xmfK+yNS1XP2WsB+WOGzdT5tJYL7Ff
0ORcyXx+LjOZAzEXVsacorT22/HqVM9z1+h7Sr0EzTPe7fy7dJG/jVZhzfj1
9N/4rfQW1pS/23hv8CeM3xn73Nht4ptg32EPYSew5bL7sXw0CivN15Trya+U
K4u9LndP7B3YSex+7Assf3wjekDbFm37lHfSPPXP5e6T+0xurcx32J9oPlad
n41fGt9GWZ5G6teFtsqkaVj0lWuBzeGPGK81tl+2ZcxV7CjWBjuA3Ystw77F
umFfY81jjWCHsUP0Ef+WMb/CitB0uYp8Q3wMv0tmJ33AN6HJ8TfxLeV2G28Y
ViT2ihgT66rvK9iVWFvsIPYA9hINiW+hbzlsvfbH4j1hozOSs2gS9ks6mXc9
1LvTpNhzaUDsZTlr8Dp+sNwwfdfI3oxtjH0Sew1bj1XGtmCDsKHYaqwCtiFn
Py0cezd+X+xR/N+pKNYh3qtct/g7aGScO/pWiTNT+6l0sqfXVH+BZsQ5FtmY
e3Lltb2LD8Wviv0SP4R1kRlOk/itcrWwnfH+sPHY+1h17KOs5GB+VHlbVnI+
ZPC96X+ZyfkR50gL/fpiv8deR9uwlvH300z+Y+M1wvbFniL3G1Y/Mzn3m8sM
xPLGvMF2Y23iPdEofoO+VbFt2i/GXOT7KfvSVP1GyM2Q24E3lPsUz4tfFvNC
vSfliXcqNyH2KryG3A78dJzf6g+qP0QT5MZjG+S65TzrLP8k/g1WIc4G+arY
uFjrfNec8/8M/5zceaxG/G65hjn71Ymc+0fcQ77je9Ev6rXizhH7dOxfxnnG
OEOUleL8ijVOF2Rq0ka5RnJPYCf58rQcq4Kdjr9T36HKynEnkHmMvpApHeeo
3C1yj2BH4zyhhdjN2KPY53wpWoRVwAZjBY3TGvsM64Q9g/3MV6W3sbrp5H51
Lmc/jH3xZ/5VulrfjrH+493GM+Jc5Edm/LGFpyZqX5BO9rPY18rw2/nC9AJ2
B9+UxhtrEF0e+4fcAW0dZV7ECsQZHucs1i7WNHYpdnfsCVh77GnsJ74KrcPq
YC/H3Ij9EtuPdcB6YD/ylWktVht7CjvNV4z1itXCumM/8JVirce6izVJ8+M8
9bc1w/4dc0nuAHYJ5Y9vn53sYaMzk/tl3DOzsHoxL2O98LX13azvG8bbjWXR
UOyadHL25MpK7ltx7zrHN6Dh6tv1rSv3Xqz/dHJHKZOd3EXiThK/5bOcszLO
zGP8w/Qv9Wtolr5l5KbFvdgYVbKSNXESqx/fU+ZDz6iDbYq7a9wllM1iXWP3
yE1PJ3eK0tnJXSnuTH2pV4yvbzG5Jfq8Gmd67BlYTezjnDNgVmayr8f+ns8Y
i+V2Yhk0RK4Y31huHL9Hpgm2Pd4HNjXmBXYXtifupdiU+LbYndiu+K3YtJjL
WCtsL9YIGxv7DdYY+xDb5DnFlAexe+N78LPSydlZ1u8qEHcFWkQfYykarLia
f5128Zn0ClacX0g7+N+NNwgryteNOY1txv6MrYs7ejq5M96QnZzXcW73pz7Y
PLlr5JbFfRbrjc3BimNL43tg/WLtYtdhb2I9Ys1hs7H82Mw4v2L9YzOxS7AZ
ca/CHo5zNt47Nh17GnsMm4sVwGbFc+NAVDaMuaB6Z+x1sUb4UXKFsPnae8Va
wsZhV2ILsRdjvcZehd2ArY27cMwPbAF2LbYcGxjnALYMKxP33tgPY//E5mck
d5G4kzyCdcZGZPzxk1IT/PM41gUbi3mFqcnYt9hvcZeJd0TT4y6JdZObKJdH
29Q4j2JvwyZhRbDFca5jA7AlWClsFTYxnZz3F7FH4izil9KncnnoNW3Xx/5M
XfnxcrmxKbL9PTsj5lysV+yuWG/p5F5aKju5l8f9fIBc7lgTsR7k7sV6xr7D
jzFeYWyB9t6xt2ETsKuwRXH+x96JLcVKY6uDxf9flC3wXVhrmf8D+kbzEQ==

          "]], 
         Polygon3DBox[{{1217, 796, 476, 477, 797, 1218}, {1178, 703, 803, 
          1421, 1027, 1028}, {1378, 713, 524, 523, 808, 1225}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LVWEcB/DHl8yXtCtINsiVFh1CFzfRP0BuoPnuvU53ULRQRx3UNgVD
RMQUJCLSNQJdQ9BNRNRS0+tVwU2iLZCWPgeH7/n8fofnjfOcF+nR9pGcEMKc
vFFEddrjN5fyQojxM6v5jfXcZjMP+IpZpniYH8Jfjpk/zIZHIbxTF8ik/DNu
wvtydczYWXWcH1jHDTZxiwnu8pYVxk/JsX6INdKaG8IPfRt/8jVP2M5TdvCM
nfzFLp6zmz1yoe5lhn28ZJJZpnjFfl5Hazr3M3tOy41+mLUy4GxH0TrcYQs3
2ch1vuQyqzjDMpbKuPremkO8Y5IZJrjPJn5nHb8yzj3z/vCtfZ9ykM9lQ8r0
X1ga3RWf8BNL+JHFXGMRV7kiheplPo7uObojLtKVhQXaLszT9uE9c6NvqqnM
efhP/gOoz0Gu
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{916, 1226, 605, 915, 1439, 1127, 917, 1440, 1128, 918, 1441, 
       1129, 919, 1442, 1130, 920, 1443, 1131, 921, 1444, 1132, 922, 1445, 
       613, 923, 1446, 1133, 924, 1447, 1134, 925, 1448, 1135, 926, 1449, 
       1136, 927, 1450, 1137, 928, 1422, 1451, 1138, 1227}], 
      Line3DBox[{930, 1337, 1529, 929, 620, 931, 1452, 1139, 932, 1453, 1140, 
       933, 1454, 1141, 934, 1455, 1142, 935, 1456, 1143, 936, 1457, 1338, 
       1530, 937, 1339, 1531, 938, 1458, 1144, 939, 1459, 1145, 940, 1460, 
       1146, 941, 1461, 1147, 942, 1462, 1148, 943}], 
      Line3DBox[{945, 1340, 1532, 944, 1341, 1533, 946, 636, 947, 1463, 1149, 
       948, 1464, 1150, 949, 1465, 1151, 950, 1466, 1152, 951, 1467, 1342, 
       1534, 952, 1343, 1535, 953, 644, 954, 1468, 1153, 955, 1469, 1154, 956,
        1470, 1155, 957, 1471, 1156, 958}], 
      Line3DBox[{960, 1344, 1536, 959, 1345, 1537, 961, 1346, 1538, 962, 652, 
       963, 1472, 1157, 964, 1473, 1158, 965, 1474, 1159, 966, 1475, 1347, 
       1539, 967, 1348, 1540, 968, 1349, 1541, 969, 1476, 1160, 970, 1477, 
       1161, 971, 1478, 1162, 972, 1479, 1163, 973}], 
      Line3DBox[{975, 1350, 1542, 974, 1351, 1543, 976, 1352, 1544, 977, 1353,
        1545, 978, 668, 979, 1480, 1164, 980, 1481, 1165, 981, 1482, 1354, 
       1546, 982, 1355, 1547, 983, 1356, 1548, 984, 1357, 1549, 985, 1483, 
       1166, 986, 1484, 1167, 987, 1485, 1168, 988}], 
      Line3DBox[{990, 1358, 1550, 989, 1359, 1551, 991, 1360, 1552, 992, 1361,
        1553, 993, 1362, 1554, 994, 812, 1228, 995, 1616, 1215, 1216, 996, 
       1618, 1217, 1218, 1617, 997, 1363, 1555, 998, 1364, 1556, 999, 1365, 
       1557, 1000, 1366, 1558, 1001, 1486, 1169, 1002, 1487, 1170, 1003}], 
      Line3DBox[{1017, 1568, 1371, 1016, 1567, 1370, 1015, 1566, 1369, 1014, 
       1565, 1368, 1013, 1564, 1367, 1012, 1420, 1563, 1221, 1011, 1623, 1220,
        1230, 1281, 1280, 1634, 1010, 1316, 1317, 1267, 829, 1009, 1219, 1229,
        1622, 1419, 1008, 1237, 1562, 1426, 1007, 1425, 1561, 1236, 1006, 
       1424, 1560, 1235, 1005, 1423, 1559, 1234, 1004, 1641, 1232, 1231, 
       1233}], Line3DBox[CompressedData["
1:eJwV0DlSQlEQBdBWgfpaFgaYaCBlGelajMwIRMWATBaDOPvdiakpDmQOG3AA
C1FA0ENw6nbfftFbrdS2DqYiYpPhTMR6NmKD10zEgO1cRF12yesXeDMPKbsd
yi8K+kXezQ2549Yw91iyL/Nh3tP/yiO+WdEXadK2jzjmhzVd1ftUduxjTuhP
3uj23bLyyf7HKY+U9Il+lhf79XTEs7zhk133M5nh1ptzmePOfCET7s2Xco4H
cyrnaZmvJn/BP8i8Lnc=
       "]], Line3DBox[CompressedData["
1:eJwV0FkuQ3EYhvGvTocYmiAxJEgcQysx02IdvawaIoi4KBtxK6VsxxLYgXEH
YujvXDx5nq//N+ei6clVo52LiCbK+YhqMeK4EDGoK/pI9+tFfahLekEf6IKe
1y2d6Buecz/pPnTcp+4Sv7iLfJ1E5HSil5DHc7bnCi7sbzn8lnI1+ya+3I/c
8r7Hs/j3rWnewgw+bR5432aXp/BnM8GbmETq7cNuXO9gDL82o7yBS+9dfrcZ
4TqG8WNzz+fe17mMN5shrmX/F75t7vjMZo0H8GqzwqtYxjZ6bc0gNw==
       "]], 
      Line3DBox[{1040, 1240, 1377, 1624, 1039, 1241, 1494, 1184, 1041, 1242, 
       1495, 1185, 1042, 1243, 1496, 1186, 1043, 1427, 1497, 1187, 1044, 1428,
        1498, 1188, 1045, 1619, 1224, 1189, 1046, 1621, 1225, 1378, 1620, 
       1249, 1248, 714, 1047, 1499, 1190, 1048, 1500, 1191, 1049, 1501, 1192, 
       1050, 1502, 1193, 1051, 1503, 1194, 1052}], 
      Line3DBox[{1054, 1379, 1576, 1053, 1380, 1577, 1055, 722, 1056, 1504, 
       1195, 1057, 1505, 1196, 1058, 1506, 1197, 1059, 1507, 1198, 1060, 1508,
        1381, 1578, 1061, 1382, 1579, 1062, 730, 1063, 1509, 1199, 1064, 1510,
        1200, 1065, 1511, 1201, 1066, 1512, 1202, 1067}], 
      Line3DBox[{1069, 1383, 1580, 1068, 1384, 1581, 1070, 1385, 1582, 1071, 
       738, 1072, 1513, 1203, 1073, 1514, 1204, 1074, 1515, 1205, 1075, 1516, 
       1386, 1583, 1076, 1387, 1584, 1077, 1388, 1585, 1078, 746, 1079, 1517, 
       1206, 1080, 1518, 1207, 1081, 1519, 1208, 1082}], 
      Line3DBox[{1084, 1389, 1586, 1083, 1390, 1587, 1085, 1391, 1588, 1086, 
       1392, 1589, 1087, 1393, 1590, 1088, 1520, 1209, 1089, 1521, 1210, 1090,
        1522, 1394, 1591, 1091, 1395, 1592, 1092, 1396, 1593, 1093, 1397, 
       1594, 1094, 762, 1095, 1523, 1211, 1096, 1524, 1212, 1097}], 
      Line3DBox[{1099, 1398, 1595, 1098, 1399, 1596, 1100, 1400, 1597, 1101, 
       1401, 1598, 1102, 1402, 1599, 1103, 770, 1104, 1525, 1213, 1105, 1526, 
       1403, 1600, 1106, 1404, 1601, 1107, 1405, 1602, 1108, 1406, 1603, 1109,
        1407, 1604, 1110, 778, 1111, 1527, 1214, 1112}], 
      Line3DBox[{1126, 1253, 848, 1125, 1615, 1418, 1124, 1614, 1417, 1123, 
       1613, 1416, 1122, 1612, 1415, 1121, 1611, 1414, 1120, 1610, 1413, 1528,
        1119, 786, 1118, 1609, 1412, 1117, 1608, 1411, 1116, 1607, 1410, 1115,
        1606, 1409, 1114, 1605, 1408, 1113, 1626, 1251, 1250, 1252}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{396, 606, 1439, 397, 620, 425, 1533, 635, 440, 1537, 650, 
       455, 1543, 665, 470, 1551, 680, 485, 1559, 818, 901, 902, 692, 497, 
       1638, 888, 889, 859, 867, 701, 1630, 506, 834, 710, 1494, 517, 1577, 
       721, 532, 1581, 736, 547, 1587, 751, 562, 1596, 766, 577, 1605, 781, 
       592}], Line3DBox[{398, 607, 1440, 399, 621, 1452, 426, 636, 441, 1538, 
       651, 456, 1544, 666, 471, 1552, 681, 486, 1560, 819, 903, 904, 905, 
       906, 1642, 890, 820, 860, 868, 869, 1631, 507, 835, 711, 1495, 518, 
       722, 533, 1582, 737, 548, 1588, 752, 563, 1597, 767, 578, 1606, 782, 
       593}], 
      Line3DBox[{400, 608, 1441, 401, 622, 1453, 427, 637, 1463, 442, 652, 
       457, 1545, 667, 472, 1553, 682, 487, 1561, 821, 907, 909, 910, 911, 
       891, 1569, 822, 861, 870, 1633, 871, 508, 836, 712, 1496, 519, 723, 
       1504, 534, 738, 549, 1589, 753, 564, 1598, 768, 579, 1607, 783, 594}], 
      Line3DBox[{402, 609, 1442, 403, 623, 1454, 428, 638, 1464, 443, 653, 
       1472, 458, 668, 473, 1554, 683, 488, 1562, 823, 908, 824, 913, 852, 
       1627, 892, 825, 862, 826, 1488, 893, 854, 837, 838, 1497, 520, 724, 
       1505, 535, 739, 1513, 550, 1590, 754, 565, 1599, 769, 580, 1608, 784, 
       595}], Line3DBox[{404, 610, 1443, 405, 624, 1455, 429, 639, 1465, 444, 
       654, 1473, 459, 669, 1480, 474, 812, 813, 815, 1622, 799, 912, 800, 
       914, 853, 1628, 894, 827, 863, 828, 895, 1639, 855, 839, 840, 1498, 
       521, 725, 1506, 536, 740, 1514, 551, 755, 1520, 566, 770, 581, 1609, 
       785, 596}], 
      Line3DBox[{406, 611, 1444, 407, 625, 1456, 430, 640, 1466, 445, 655, 
       1474, 460, 670, 1481, 475, 794, 1616, 814, 795, 856, 829, 857, 897, 
       896, 898, 1640, 876, 877, 864, 879, 878, 1635, 842, 804, 1619, 805, 
       522, 726, 1507, 537, 741, 1515, 552, 756, 1521, 567, 771, 1525, 582, 
       786, 597}], 
      Line3DBox[{408, 612, 1445, 410, 626, 1457, 431, 641, 1467, 446, 656, 
       1475, 461, 671, 1482, 476, 796, 1618, 798, 816, 872, 1634, 873, 830, 
       875, 874, 832, 880, 881, 841, 885, 1625, 884, 844, 806, 1621, 808, 523,
        727, 1508, 538, 742, 1516, 553, 757, 1522, 568, 772, 1526, 583, 787, 
       1528, 598}], 
      Line3DBox[{412, 614, 1446, 413, 1531, 628, 433, 1535, 643, 448, 1540, 
       658, 463, 1547, 673, 478, 1555, 685, 490, 1563, 802, 694, 499, 1570, 
       803, 703, 1632, 510, 845, 714, 525, 1579, 729, 540, 1584, 744, 555, 
       1592, 759, 570, 1601, 774, 585, 1611, 789, 600}], 
      Line3DBox[{414, 615, 1447, 415, 629, 1458, 434, 644, 449, 1541, 659, 
       464, 1548, 674, 479, 1556, 686, 491, 1564, 695, 500, 1571, 704, 1489, 
       511, 715, 1499, 526, 730, 541, 1585, 745, 556, 1593, 760, 571, 1602, 
       775, 586, 1612, 790, 601}], 
      Line3DBox[{416, 616, 1448, 417, 630, 1459, 435, 645, 1468, 450, 660, 
       1476, 465, 1549, 675, 480, 1557, 687, 492, 1565, 696, 501, 1572, 705, 
       1490, 512, 716, 1500, 527, 731, 1509, 542, 746, 557, 1594, 761, 572, 
       1603, 776, 587, 1613, 791, 602}], 
      Line3DBox[{418, 617, 1449, 419, 631, 1460, 436, 646, 1469, 451, 661, 
       1477, 466, 676, 1483, 481, 1558, 688, 493, 1566, 697, 502, 1573, 706, 
       1491, 513, 717, 1501, 528, 732, 1510, 543, 747, 1517, 558, 762, 573, 
       1604, 777, 588, 1614, 792, 603}], 
      Line3DBox[{420, 618, 1450, 421, 632, 1461, 437, 647, 1470, 452, 662, 
       1478, 467, 677, 1484, 482, 689, 1486, 494, 1567, 698, 503, 1574, 707, 
       1492, 514, 718, 1502, 529, 733, 1511, 544, 748, 1518, 559, 763, 1523, 
       574, 778, 589, 1615, 793, 604}], 
      Line3DBox[{422, 810, 811, 1451, 423, 633, 1462, 438, 648, 1471, 453, 
       663, 1479, 468, 678, 1485, 483, 690, 1487, 495, 1568, 699, 504, 1575, 
       708, 1493, 515, 719, 1503, 530, 734, 1512, 545, 749, 1519, 560, 764, 
       1524, 575, 779, 1527, 590, 848, 849, 850}], 
      Line3DBox[{591, 780, 1626, 847, 576, 765, 1595, 561, 750, 1586, 546, 
       735, 1580, 531, 720, 1576, 516, 709, 1624, 833, 505, 1629, 700, 866, 
       858, 887, 886, 1637, 496, 691, 900, 899, 1641, 817, 484, 679, 1550, 
       469, 664, 1542, 454, 649, 1536, 439, 634, 1532, 424, 619, 1529, 395, 
       605, 809, 851}], 
      Line3DBox[{599, 788, 1610, 584, 773, 1600, 569, 758, 1591, 554, 743, 
       1583, 539, 728, 1578, 524, 713, 1620, 846, 807, 509, 702, 843, 883, 
       882, 1636, 498, 693, 865, 831, 1623, 801, 489, 684, 1617, 797, 477, 
       672, 1546, 462, 657, 1539, 447, 642, 1534, 432, 627, 1530, 411, 613, 
       409}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
RWmjmsczpCZ0ZPY3yj6TReZFO2Y/R92nSi+by8RCRfKFoWuU/LP7jrzOQrGI
foLUvO3eJ6j5V5aIdlovT0CyBWv7daj9mXw/X+8lFR+vnjwVUHIsGS3IY5yv
NImCpLUfpddUUPUmM2pojXYaujAysqtxSjgk3nDQNXnFhOPT3DL3eDJQ5aGU
3YsLgiBzUEr9OHWubdx/+TfEZaCL4yzMD1B+wOe2nME9Ko5Y0P3DerqPxPYD
eRsyLZKLs9Ckbu/hi5S/Pd1/0n0oidLnpv6MTulMtGqWUqNp8VNU1e5/ZgQx
4fSRnZRHTkNnxlYfXqgegXLOpsu7UXHf7ujaRV2ZSSigt2DIbEsUupfDrF1K
+dWwmOaDXDfj0aU9P9CLa9Hok+L3aEvKzqemRyDx1zHo+aVgbvnUaPRx2ipv
B8qepSrE3/TwRqEkxyxmg0o0Wue36/V5CmdPmfdv+CdGosPJp81i5iVA2jy9
LhkKz2fCD8fsiY1B8n5q5pXRCfCmLcgz7TUTXMTFtaW8ExD9hHfLD/M1UP7t
94VawXF8qajrxvaFfAfjgXfSFHuxbMo/aLUuagvOQIIfGInLLsTA3iMr5tRT
dUq9oQrsi8lCD5JP3DP1DoPJwvKX1WKpvJ2vscoyLhsJVqWd+UTFtY3TRw7N
fMGEDXS/zoruI7HjGkSdOa1rlIe0ltl36VP5Q8nS2dI/7jJB6F2Pwo0b2ah7
V0BVzY8oFB7IbLrwlKofjR7pxm/KQGPDhrpCO2KR1DXuCElqX9wj51rslUlB
PIPXPZy/xaGyGYL+cXlMqBlasi5EKAGVOela3RoTj4zO3V3HQ9nPw4RwT/Gy
GPRJubhExiUOeb013FtJnUfF/HmRxoeeo8u6d86VU/GuT9jaOozCPyJ/xr3z
18PQpU/lQjekk0FlMGGHH2Wfq5JeaXMbRyMDxYH5S/JTQG+8ylweyg4/OxQM
Hn8TjyYLJD+1bE2FzS364zdlMOGaYKZc0btURD/BRrV6eMxzJhyZcDE20D4L
eX3a8v7mxWQYsIyzG7zPhEdNCr+E6nKRwrnn+76Hx8LCavuaZe6U/7y/f7/+
m3zkKGd/57BUMFzz4cpmODFhiO7XsftI7Dztw3ylbz/SilDnsoKPHVQ+7Kd8
0L10BxOshMVd3M7mIZ90jSeM9iQ0FOhWmGxJ5VfS9rZxCQi1X3o22YOyi76S
T4u2+FFxUyskPqUuBQnkzE3DT8nENtfzcUwIDbyadKUwHsXuPxh+KDEZPUyY
G7WGwl9MTlPLkTsGZWhpOsLGJPTs49uaIQr/zttPzS01IlDVyfjsDfEJqMHT
dsceyk8e3nIvxaPlMWpzl6hun5EGX0xmxx2n5OVy5ypY7QtHJtfDnGb2MEDm
rbvLJiqfEeX3PXLtcwyCTcVSfoMILjw3P/0mignjY0xXa6xJQdl+R74Pb86G
UylumYp3qPOldUlwsV42op+gig4lBRlSeYhrrf7r0peIJ3le29VPDIi64yJS
t4Gy27I+GZPtJWhvmu3dwLBoSC33emq+hAmf6H7dKbqPxK47ulfM6iwuqUDC
Ja1mNV8yUKKB466joX3Q6c/bXd9SgJwVlDc2Oecgt/bsXRriTLhRbFVvNCsL
uX4N3Zmcn43ml/XeFjWlzu+N7UUi95PR7y9195wVspC8Xbd3PpU/nwocbsF2
b807/yg+B+HzpxH7T6/Pcn/DReV5tfqR49XT0MmpGjl7KD+2KVdPcYFNKFKA
VK2NGclI6ceKBflvqPpx1dQVb2S9kPg8l6XpsgyYdUdpugsVL06uyle4r/8Q
yamVog/iWVAi97VqVToTdtmLveheHYok8gx378vIgcdbPlUPPaLiYHrFRLWA
WKQ55mJs8u98uNmorO5uTu3LUE5SaFEGGtM/3frUzSIYK+IvsXchE9aZ3zrx
UfUtyu/L279hRSUy/TCPm4pAwH07bGOPeT565P05fefEMrR57v2glU/7YPYR
1aoc1XQ0VfPqh3m+hWj9kNdwvRwTHKYcuvCTEYfWJc3oOH0zD0mLjFlqfpkJ
GZue1QwqRaIfr0qrLlhnI1VH7m8Pwqj88Frga+yveR+kjMX+myFVQ/z2mIHO
AQGbICStOu5VxOU0dK8mOiONqn+NdA/89t1jgs7Jcbts12pFbRseBvfXtcMZ
+n3xOvp98Vz6ffH2CT2SOmPS0fNTz5tkdJuR0lTR5bqbO0HpYvEe47Mx6Gv+
q1fzu6vR5mij9qdlvWD3Z+3D/UnPkLzR6vXR/OUovTzk+wYuJpz37dM97PQY
3Q7R3iu8shAtzHqyK4Wyz/Oq1Xu7f/sh/TE66wJCc9GBgevicgGUve2XdQiw
80KrhH48UnHOQuULulxaqDp0M/PdIpwHvD3Bk4/zgt05gSQfkK58rHRR9w4U
NCc0j7VlwDNz5WpBatzpf/CgdI1UepU21YDZsRkD1BMdfu7kfNSyG2qNi4MD
C7LgVvflF/ub3qCafT/Mv37uhcrjJwt/9YRAJFdqZPiKClT2oX6laV8fPAlQ
4esv8QJ/u2uRUp8LUULdjA1CVN298tzcbY72V2FmrXjMFek8VP3FyvsL5feG
YyZOMAMLWP5+sU9wdxZ68eeX1zgK5wmNfI3X3Y6Af+tLJalZGeiw3jvPb1T8
4nL9fC7vSBAoRP8weeWRBjHFJ889pvbRT+PSatGLTyFBZP6D10czYfwSNHKT
2ndfTYXZjV4RICG0RlAgNRt8mg9u6Q+h6lCa57mMg+dpvn/3abeRKjga2Jtz
djAL7ZAqs5ba0ge/0cGwLTOLoH1vQBT1RK+mNCw1Q33Am/o4krJ/EBDycKbs
H+3/tIrYf8tUlSnUeYGlqWueUucF5YSUk/NivDD6PnW+YFfG6gPU+UIm27zJ
+VpVpDWNOo9gJl9TRp1HpCJwjZzHKKPi1dT5hV0p09dT5xd5TRqZhs/vjIM1
26nzDmav3x6hzjvkH+Ul533cJX4vyj+ASrjDC8o/gKPeeuIfJFY2D1D+BNwN
uQ9R/gQmNo8h/kThZnkp5X+gSfz+Fcr/wLkkEx/sf660ZzVS/goaRzbvoPwV
rEtuJ/5q0Y0ZTMq/gdXPA+sp/wZjx4cQ/3Zn3zHsD6GEd4oa5Q9hhcyE3dgf
Hqb7Yzfovg27P6bM8rdgzvK3KIX2t1HqP/Uo/wzzfnq+p/wzup72nvjnhnNy
/NiPL7a+Tfy6Z6QD8efVJ50WUf4fGrYr/aT8P6pOCSD+f1ZErRYVL8BIes8y
Kl6gb4fDSLzQWGS9koovsMEn2JqKL6hgbAqJL0xf3mdUPALQ3dNNxSM0Ul0b
i+PRYP4cWyp+waCday4Vv0DxrSmJX/y2Z3WpeAcRcS8sqXgHL7Y3k3h3oiwo
nYqPcGWOOo6PcGg2H4mPOqd0Uqg4CmqvNkbh55w9XG44np4Xanem4i8YvH8z
dJ0vFQ5YTxLH8bdBQgbHa5B+Pf8BFa9B6eMjEq/95LVwfIfjyjp5VHyHLhFT
Et8/0v0xdt+GHaeaWPkD3GXlD8iFzh9iFx0aK1yXC/11DjjfQM1mK0m+0RP/
MJzKT2ChlNQHKj9Ban4/SH6yiakthfMYj8flJK+Z2N9F8pncXdNaqfwH1sq7
R1H5D4JTp0n+o3z/yF4qX4JDW6xEqHwJ1Unoknxp970HrlR+BeW5cTOo/Ao1
nK4k+ZULyk+l8jGQd7h3ksrHYOSeM8nHLL76eVH5G9QftCyi8jfQu3+W5G91
4iHSVL4HAhp1hlS+B4//MEi+51W91p7KD+HnYRucH4LYhe9+OD/MqF5E7L77
eWEjPgd1E5YT+2fE8ytT+Sc4z6kvpfJPaC6IJPmnyxsLnK+CBpdUDZWvAu9v
MZKv9tP9MRW6b8POu06y8mGQZOXDiJ0Pq7+cLUflz+DyaqcLlT8jeHmN5M9z
etsWUvk2+N0g+TYq5V9N8u2Jy45MpPJz2JDOmE/l52hGnTLJz2+6T9yH8/jm
tytJXr98ryHJ5++4Tv2pHhsDdau/21P5P9rp4UXy/yuSP19R9QJM9vUwp+oF
dKZUn9QLzYbT6qj6At7cOtVD1RdgpL6T1BdTX7WlUfUIuOTv65JLjQZFbzVS
jxw734rrF9jR/5RB1S/gYfKL1C+HliWLUvUO8Ei6t1H1Dtx8OqUO1zvRDZYD
VH0EtjNTcH0EVwUfkvpouemFCVQ8Bknv3eVUfIbjj8pJXK7Vysb1F7QNujVQ
9RekvzAm9Rf7/tp+um/DriMcJ53Lpuo76C9fqk3Vd0h+X6Q+ru++9U8rp+pB
yLe3VqLqQXTF6rcargfHuTf9oepHOND8ZwNVPyKjWiNSP5oa7r5H1ZtQXyN+
lqo3kYP8MKk3I9Z011P1KWh+7m+n6lPUa9xP6lPdUzAF17ELXV1IXftkrQap
Z4X9twZR9S8E7gx2p+pf9PK3Cal/J7pLl/AMPoeXr6L6i4ufQcJvBV7bDsoO
t11uoepoGCu7vYuqo0GUT5HU0QaLHVSouhueKghvo+puOKJ0i9TdImqKuE6H
9yNXPlJ1OlTfQKROP8mq66GWVdcDu67nZvUB4C6rDwDedB/g/s9f0VR+AL7z
3ESpfAEmOfSRPMGU7o+x+zbsutiS1ZcAL1ZfArH7EmdvHP+2vTkFJAqyXgdw
+6ELJ+1IH0OvO3RgxCYZZC6fupEqF4y4s1xJ3+NBwFQfrsuJ4NISfMurPhQ9
roohfRI1OdsrA9LxkKMkupchE4FO6MqTvoqklq2hV20MnIeGfpvNz9GnsP2k
D6M2vBTHZfTpeEUxFZdh9qabJC5v2DvfGOeZg5cUcZ4JJdf/jKRQeeYx+v2v
rE2pD6M/icG+N936qv8Unsf6oOArHN+DhqZcwvPo0t/PwJZXp++zS+oHRlP5
D9qZLfGEyn8gzD7xAs5/NGme2A4OnpirZ3QPzp8M9h0ewk/vB0tIHnVN/QnO
o5Csu1AszqPsHOJJHtWXvWgvlTeCpblcMc4bmx8nkrxRgbUuGOZYl2/EeZKf
VL2bnI5xsF3M+7f+8KulyOtv/R+bZhrgeeSCg0keLt9+kyv1/+MzKs/Gh7Zb
xGm3BVLdeXj8gkg8HkeZ9zaTcb6xyxbgfpqf3wXSV2vP9yL9tCcBR0ieRD/B
Lc+T5EtmPMHRd3IKkErSujoVzXKIUPebtNmxDyQnW7mNDXqDprU/ExM49RKU
N4Qr/E7phSe7Ax3LTuejTU0Fc1/KVMHhK4cU8HvJY/R+5fWvuem/JZ+hRq/3
bIeiXofrHdRjIXLlmxUDZueq1s2n7PyL2eEdZ+08kXPPUV7mjSxIzHi9nUHl
vb/V+GOXH/ZFCYkyZ90KcsHLYp6y3QMmrB/L15bG4wEbgkU6YmbnwQPV7OQS
Ki530fetlnDct7pA37fS57hvxbPXboNq3HOkXVximuxQDhVPx9e+/9oHe/wr
Zvn/CUaeNvaqi8UrwEzdepnOQB+8t1xU6fcnGPK5/2jh8dyKjCV43Hb8T1Pt
I1FwTHhs4Hntcvjsllry7Hsf2w6B0w730bzxHzRv3JDmjT8Z0BzEdkk/QTdt
pRO2Txv63tYdHa2wkD0NjHz6vtKPzoPGqU6vkeAKJV7ukXr0cKjR+cumLphO
f89GP/09G3oMd+7VQysUd03XeClr5gXjVddO5V7OAMYevV9PKfx1zw4cMOYP
hFcnFvnd582CXzEL3GOp/Na42Ex+oCcUfnG/bNvukAOrBRpSMx8z4Tmdn6/k
yM/PPjv6xcEsHdIlr27bUVQEfreE5tYuZULvjtZb1m8zICP09Mc1uwvh+6WV
ylLSTHC/rsig7A0WMiNqsb1F5Y3wYHvzNO1Nw3apY8J4jp+Hh7qWYPukcYD1
TN4Hf+PAmPybvDeX6/S0mtpVBU82ib/B781tjQ+dpvCBU6liUzA+bQc7r2J8
aPsElT2hjn/bZ5tdeSjWJ6TStYPSB9lN/kX0WRHsj+0f6hwfz6HsH3lsayL2
z+5T+3P0q+lzBwEc5y4tow+fU9jf0NONz6mdiQo5p/JcFzE/ELLNp5/C/EDt
tDjyHoF+v4A43y9w8ijOK3Kf+xe/gs2D7Txw5cEjjSSoFqpQHDtcAj5x5odm
TGHC1fd8tzCvoLjfhJzfkbAywiv47aGN8USmF37bYDzP9LsRHoIYD8MU29tA
dS8/hSfMt9lzBePpWvhzvUWPE3R8sG5808GAOv9vNYpUHC/6WNJyItkdhmZf
XiRemgUl89dftqbqx6rJVSHS+vdg8enm7w1j8kBwvoRcH3V+Pf7HOV3D/GKa
8Swc7IJSBhZzV4Bw6ELVNurcXREPHLE2SIOTpcK3AndVg7xwxTHFil4QK1pi
hvedpzUAnwt4tV/TCet5LfeC3e20EnQp8olgaHoTWlv+Z/W90E54tfuN2Ax1
V/CyVUBfChhQE3lRxoPS/xJdj3/lqMfFd2gkPPnkA0L83G+PlOfCeuFNIQqU
X+o6tq/tQ3cgyF91a3WzzgW5VVVzmwOY8Ihe1wmOdX2j752t5OCBnKT957Sr
s/fZF1YxdtL2aUX7Afb4K9r+59HnvY0+71nmxy/g886+7/ljUVo92tbDYN9z
DOLysLi2uBzGXb/02+7ue+SpMz5FrrwbdDYp3abwgZ2llUIUPqDL92EVxidy
4o3H+h7VkEs/uXbYV4mhbrhto7bfZ+EbmAhbN8vmvIeWAbMLheO64YsXS58R
Wp91Fv/RBx4Ze1b9rY+aXu9anTHpIDMxrhH3bST4EenbBN/a6oj1cdIZmo33
y0+tZQ3Wh8YH7jg07P0HPqPjbHyWa6t/9d1jAml1LddxH2liqfZD3EeStZK+
k59pB7mpuwqCPjNAaKcpz3pq3+n+EnD2lxz+xz2p8Yc2VjiJO8ByyVXBFUkt
KJpH+ePrkx2gISfy489s343s86iVmS8hQ51Hq4s/AwTc70FyePPkNRHNyO32
RY3BjZ1QFfNh9sfheKjdy9exOroUeh4Jxg5PYIIEHUd+cLHiyGM6jujRcWSQ
4/5R97PaLdT+ohluuT/x/u4MLkzH+1s2+eMlbP+zyh4I4/09jsolMZ6cfoMX
LIjfAA+D+dS5Rk1HdZzwuX7Wpl6Hz7X0QBHGDX1pOUxwi+Vj4Uafd8R53h3+
x/0O+wWZ+yk/gDJyuogfuP14LfEDaRmi96n4jt4s0y7C8X3azuEUHN+NBLiL
KZxR2BrRcIzzTwW5Wowzp/6tY1j3O97Q+cAyjnxAuvWbD+VPUKiNXjP2JwFH
6rdjf5LxP+TpfWRw7iPn57Lvse75vn3MJYM0dHyH6RXsl7Q/ip/Afsl/TOJY
Qfd7CLW2kn23/HyC7Du9v4hzf7lY7+8R+30++z2+dgAiPPLlB4Yv47jhs8mL
xIUHHvdnYx6AqNpYwrPIcVQlfACa34zYPBc2v8X497k1mAcT53qR8IzEHOtZ
PNKJXvcxD6nlairheTkaLiF8pFD5F96YB9biVhyJeWEd7TMJ75Hn1ctf6uKj
3yPKtb8liPDl5guKM7D8N/2LWB7NDnMn/DHVT35kfqHALFHMr8w4uorMf3HF
2p1Yn6CwsErMb52Y5Un00Tcx3on1PzcukvC1PXfUEv3X3ZWYitcrrLrmK+Z3
VzvpkfVuUnHswbjZe9qR+x+Zq8aQ9/WP0nLwvQ6UMnCM8CDkb88m7/d1mxvx
e3pUrxK6Ar+X/hAvT95HC9hO5MF8i+9Wdwk/hX+YxSd/cMp0AuY9H6pzJfyg
Z8mJhPdir9hM+Ebm1i6En1Wk/oXwjgJmcPFivlf87i7Cj7N01Sa8r6bAvOOY
b7fk87ZVmH9X8Wwn4d1tTl5wE/MR2XimCJkTXmJVS/MBLK99/BGWR66PnxJ5
K60xZP5DrWuvYR6ryHIdMj/v540nsD4MKx/Csy78zTWC9TG8tZzwdb5Hbh7E
PO7GV1VE/+5lJePxemNifs7DPPpjFaz19m1N+oP5EOFd+oH4fsNmnakEt5K2
+F0Yt0m6X6XwfQjfPbIEt+frgvF9GHTPTJbwLGKbVAi/4sJuPW/MA1i6c3YQ
5gUs+15B+AB/DmjjewsoNrGE8H3kQmQJ7yV2/MVCzDc6uDKT8K1u1WgQ3tGL
+akSmO81Eji4C/O/lr0PIbyvTBa/EBnSfEMfmmdo+X3HKcx3XKjSvRnzH5+5
DQVh3qP21GcSmA/KxtnQ9Arhhfr2ih7F8tfza9QxH1b+5QbCk7yZfEcFz58Q
aU5402Zi7YTX90LnoiDWR+bxiCbmca9PrCH6ZMAnzA9DI50LlDCPfuVYE6L/
inkZhN9jkvShk9xj2LGQrDdZ4BThoywXlF+L751YP1ciuEk4BLth3G5cC36M
76noOVYT3FbS91jYPB02P0dBcwG+d4S89a5ZYF6GQQeLjzHB9SC+B4LeBkoR
/tTglVDCOwq9FXYe87146yoIf81u/3vC+0q5xg+Yb/fHfMcizL/bx8NDeHfZ
LL4mqqL5m0tp3ublr68xjxl1HtlQiPmnmzZ5EN7pO9WEUszHZePsotb1HvNy
24pyiLy11csmzEd2PWRJ5D/5yDzC82dvWxqNedxFC74RXuXnknGE/+cs57YS
8+jHVswk+sxf6In5dmj2hvV78T2GRbM+Ef21Cp7U4PU+Wnv1Kb5HYnv8AVnv
BoNqBYxbhdu+FnwfSFmDSXBr3V0UjXGz51puje8P7V7C4uGcma2O718hC8cI
hHlGtQWShF+UMPMNvq+FGh1TlTEvRnjaOsKHoe/VIPqezej9GhE+s42Yb7f4
kR7hA3J/ViO8O/reAqLvMYzeX6B59ojm3Y/y7YNO/CR87str68cJFiVDy7A7
4f0qzfkehPnQbJx73p3Vx7zoZxeaifxJyd5plDzac8uUyNdNs1fH838QsVmE
efSVNefJ/Dfe6BP+5Xudwzn4HkNhz0OiT9jTz5i/iK4uuy6O75HIJeoQ/csn
VU/A67WtzGjH93g0skLJenn25R/AuN2adSYf39NqU15McLPYYk74Q77dLTvw
va78s8sIbsF10dsxr2t70i1dzPM65GxF+GNm854twjykpft1wjEvqf1rC+Ej
tW3acRnz7Wo/SRF+39YpA+Q+UXLjKw3Md6yIfBWB+Y9tyYOEVxmnUXcO8007
EjyjMf/0j0sk4bWKf+0m9wpypjBvY/7vlux0wvudKhG+BPOt170uvozrJLf3
rXK4Pjpg0a+M+ehsnG083x/EvHQ4X7Ub8+/5pWtbMB9fVJyf8PBbVpT04vn9
W2J88T0Gw3V+ZP7IQ2vPYH2yg59E4Hsk77waiD5ThjwVsf78vPaR+B6P9Y0R
ov900cRzeL1mqnLkHtWbQ7/JeuVSB2QwbrHCSRfx/bn64QUEt32ii2Zi3KwH
t7zA9+0C7F4T3HK49z8tar6DxBcenm47LgPib+7im02dC7VN6+cPjviioka+
bHXpbDhe5qhvFc+EmsEjxlvUgxGPzoyt4ePz4fn3+30WHkyQRCKb33+LRk1J
DwvX5hVDXnbh9RsbqH3n7xo5F56JHB8rlR14XQn8Tw7cP+fQB6/tLXA9iYZy
W87het3QxrkK15U6tfKimPfPxnOzeXoT5v9rfrtnieV/Xz51FtejemODSB2q
8WePPOZt3/lxLwzfF1kVoi2I+duKm1ctwzzjK00P/fF9nfgMJ8I3fuTzSxfz
Ys29/e7i+1JP6ooJPzYyPN0H8zhvT2qwwvfVJrlOJ/xPn9ZrQ5h3KGDqtQXf
X/SueEX4h3oN405hnlx/tEMqvge5rWUW4ctp6Pfuc75sO5rnDzl/qpSi8sBF
S5cl6vC6w4PbkbOP8qeCyPSpx/7UUP4qJjDhcrTzqPxc1FCB5S28T7yfc+bW
6Hhc0pRyPK65baLYsXP+o+PWA4qv8PjYKC3v5MHI0fEzc82y8fgLi2ke/lvy
R8fziucH4nEeuk4cousyK7ovJMKfXi8Sn8ioob9/9Sv9/atfP9x5v1rUn6HG
8f2rx1n4gx+N/woa/46JnQVrG50YRzm+l3XfmVLCF3cZM84H70tjfxrZl7b4
DTwaEy3+z/e1RrL2C5w49mt/UXLun/ZT/+d7XF9teeiP+bshofVkH0XLp5F9
/NMp+vPAs6MMY/r7XVfS3+/6mLW/sILeXy96f2e9U7i7muvA//ne1/OsfYex
L1j7vpXed9VLa7C/gkNa3g7YX7majGfdt4UlY6e1+8KCL3nDMV+SYWqcY14J
de5iK0ysMP9Ye6k88VcBk76R83tvsbkq4X+33/TH/mrBNG/C066yELDC/Pu8
pU7EXx1w9ib+YSnLX0EB7a+UaX81JUdHnfI/oHyv/w3lf+DIFn/if3ax/NVo
neRA+6t2ll+CIA6/9OuiOOblQ+3UveR+W/jxbvK5s1h+CeZw+KXOIWVTvC75
5nXELzF//CLrUnfhlsX41G/1tsB+qXbBGoLPEZZfAhcOv/T7sRS551yaK0X4
vPdX/lpJ7jvvTCL3on13rtLCcdbYagyJF7H0/dUdHHG2e5oXjrMwwZuXF8fZ
pNs3SZwSlrIk9wNFpg8n4Ti7sHqIxLUs+p4JZ5wtS1nDwPevFO9O+YLv2Ugf
SCZxcyMrzo7i2UvH2Vc3ZxP5I82fyb0r94ggIq87c+MuPP+honFiOM52GqaS
+fNyulZifS5dEiX3BQdUsln6OHGtxvq79/3EeQICK9Y9zU+FrTjOQmb1smYc
Z31zk8h6bZsKcZwFiZU6uTjOSiatIHHWhNvSA+OWH9BK4mz/heUEN/r+M/s+
9GjeKOY9hdxXf452OeG8cYKk6d95I9Rw5I1hrLwR+DjyRq+EJ+R+5q6XH2bh
vLFvsQnJ05ro+4T0/cLRe4W2rLwROPPGGlbeOIrzNTpvvEXLd7Dk0UZafuDB
3QA8f0vez1CcN9p0ipO8NMnvAtHngd0acv+Sa60s0edgmz+5p3F61b3dOG/U
jOgl+m+Oi8J5I+hcnR2I88bWqGiy3o2svBFe03mjEp03Uhl5DMZtyHoZyRvl
Ft8luEWx6iDw4qiDvnS/Jt8jsK9eiNRBnjk1f9dBEMdRB9XZyZN7Jn7Dizfi
OuhA+CVSR0g1XCD3fD4sFN2N66BXfS2k7ujccpTc59Sde/MkroN6lySQOqVy
wWJc10CdkhG+5wcn1qmSuuYAqw4axZldBzmz6iZYwKqbUDhdN/Ha2WzG85/f
14nnR2v38JE6yy3XAddBIFd1cw+ugxYMNhB9fi9uJfoXMKwB10EuYEr03642
hx+vd655FrnP/bRT+u86CDjroPArG69j3LwFvz3CdZClTB3Bja7rIZWjri98
W0a+3+GK8/eluK4PrFYn9anskD+5Z3KqoEkI1/VT0SdS556c1kvu+byt0OzA
dX3v9T+kLpan71mdpO9dse9b6VhNwXU3uC3ptMZ1fbavPqm7t/GdIfc/lZ4n
TMF1fU1oLanTFVl1/SjO7Lp+efBmQyy/WS9rMa7r8/LmEfkgUdFxeP7EnKmX
cF2fqHWTzK/iBriuB9lrnxbhun7o5DhS15ctKv2N9Rf+wY3v5aAhaCD6b9W1
H4PXK5STQe7H8yg3kfX2sup64Kzr+6YNYV4+LPAMlsR1vWy+IsGN7kfBVY5+
VMp5oQn4Po994NEW3Hc6VGVP+jBvhkrJfaov6jbTcd+p0KCG9G02fCF9Hrh9
ka8C951kW71In0eB1RcCui8E7L7Q9cdxuO8E3WbVd3Hf6X64AOk7jWf1nUbx
ZPedJjguxX0n4FZ3xvIo3/Am6TuFrGsk9xVXe48n93prnPvIvcW8RRuJPi6+
L/Jw36lj1kOij8Bxr61YfwhWmIL7Tk9ndxH9fRZJ4r4TxC3vwPdvUMo4Q7Le
OibpO8G3wRg/3Hdyb2f1nSDdTB+/vym+isj7HEHDKNKvsymwOIR5CdyC8/Qx
T8ECJn/G/ATVlMMfXsxLQNPjJu/EPJGHl9R7MD9kTrhF3XXpZFS63nEe5umY
qESpYX7O47MntrbNSEOrzN17MU9KbK9wMuZHrVl5zD5VloHmLFgdXS3rBTkn
cvkxP613+U+JNbMy0KnPyUWpbkfA9+MrX8zf45usZIH5l2PvwrdZNkGoMrYO
YR6mseW5PZi3Kuno+GCeTSji2S2yCPPZTIz0hjFv+DOfvZKFRgTKdIzaiflX
Ij/vpmHedk3KtP1Gh56jvMIRwhdiHvY61qgSjSwi5aQxj37meEvCb7HvXtOF
34ddVJEj77f71wF5L1buMflKRXQCGm/grIV5NNZrLvti/syyYiWeRfkpKNhh
59IRo2g4bTp2GeYvqWidjJnaw0AfLg7et9wXDh6LFR5g/lhE/+CBOvEs9CKq
su+R/kOA0L4ezN87emvQIqg7Cz18s2/kCYW+gXRSKOY3xi9Ib8D83ctXrPXL
uJ6j1l/TXmKenmvUQt/NG5OQ8q06A3vuGDQxKO4d5pUJfBD9LusSh4y37nq9
sCwG1TCPa2AeVE1B4XWF1Gg0faH/r0WvY1DxjL2Et8MIOO+q7vEMeQt/forv
bQi9VSY8EwevVyPnW1NR/vV5IsfexMOSm2EimK/VzfDafX0QoZuZq5c5f44B
iRUGUZgvJ+B4Xks1Iwcx9WbVDK0OBYXJfsqfHzHBRfPo+EvSeejn6WGTBvur
EBoNXZjPefLGMfUjicno5tuT2+0L49G27E0xmP+WeZJ7/90x8chq5ZZDwUIJ
SJMxRPhaZ+XzlOKvRaN72mtWjNyIR/uFHAi/iD+kLy4nIRxNPe34JcovDhV9
WEH4MB4jpwMHNmejqavf2qusSYFEIfnDcIcJD1ettrz9Ox/J+7dNUg+IhXuf
had7mFN58uYasymfC5HanCPFL0q9IPZeOPccKs88T/PbBTn47V5vVv10/RaH
ni19UaYmk4KOXr/li/ljJ0Syqy5uiULHVTz/X11XHo5V97VVoqgkKpESKb1N
Mia0ilRKpoSiCUXRRFGmisxJkqGSFJlnMj5s8zwkIqKiKBmeohKSb+/j4f19
3vrrua59HdvZZ6+19n2vda9zZnflpKKUurgGondyfFO1yH4gDI3GPvslyvEM
fbEtKiD6nGFNjV30m2Vo7Jc0nCrLhiune8V0BDHumlmXKLP2OcoSEPJv6XsK
tZZvdW37+sDoL3rvGj+36yKqUWiuBFcy6TvR7NKSIHoqwe+9d+idIejyQSV7
0t+zvULPjeh/uv+if44MGPTr2R2ENrAX0UmfUEsJ9yjRBUkxdMIlU3TC+zt+
GRStwPzi9686J4xjr36Q0qzC9zO/TieM88Zj2F9Pn//OphC0p7Ncue1NB4ed
VSx6mrEw2rTqal5fGfA8ezXLYDeOJ0YCzfO9adBVEN7FsqoWNg6pbz7wqA8Q
X/YLe9FauGWW+dm7/yVcn1FZ9asK83QfF1KfA+n0UxKkXpfD10nV6d77bL5l
2J8LhRx2Hb/HXqDRgzGyyxX74CvLg5m5T+PAL2Qb7FWuRDNUHAuNV9HhTZR3
yzDmd5fb1V+41xeh7G6/fVkO2H4+JbUkYR53K0TS2T4pD+39KbmQ6PT4e3TD
lTFfYzNMYf+QlI3SdqtrE13Zlu7sCAvS5zbM39XqmYFKm1WHiA4q8C9641Q9
c0EjZ/wcuPeKhKflQQxXFNfxEDqYxDloN4SlwvIFtnyxZYUAqza2xpoT/bkd
xxbvfFBpUGopTCyB3TL2ynK8+Pk/Xj5C9ArG2kVPKP1C6RAr0QlwrzhTJdDd
AEtGi4neHBRteSi9kNWcabT8dhp4PbYd3FNdgmbahN14IUuH48t3mA5GJELq
Pss925sK0LrfAYqr3eiwNOnwIWPfcMAetvNoQi7q/zBNgOgSi2/5HVxRHAzc
+1akafvQUKiHpDTR0RU23Le8P+0e3Hd3CtjzPh0F9jTfI7qvjs+/OS3mZ8A/
6Nn1nBQEH2rjgOhXnZYcyfMoygNu4Wivu9y5sNtQOIXoh98OF65+71cKEqz7
mpYpZ0FihemGVml8nwVtiaNcNXCPfvbr6cxIYEU998SZ6PCPporLfas0uKag
yBFjl4t4o899/IrjzNrUF51rLyZAVhTz8Lcn2ei+N09LK8Y5XpFhbaRP7Hnt
tzIp3Uy0pi5Fmej95H0j95N+vDqtVK9pNmlI8He7BdGnvUnTcLaTyYW+fo80
8YA0+BG48hrRP/suP1Ri4lkIyvrCdorZSdBkauZ14SodnE+aja5dVwpCG/tz
fzg8BhYu83lpxhiHnKr9vEAnGT/XqyWz5meg+GIrY6LbbGHPvF9nGgvbAj8m
1hxNQ+/vVK4mOsNm2DPN900YxMl+ypx29RkymLF7AdHFTT8c4Xnpch6YDORf
mKMQDfvzHZtJXwN/C5dvcFgBcDMLpq4avQdMUm96pDBOzqn4eVcf406aSl/n
lTUpyFv4iz7RK3rfzG8k/Yq7jAb4+zFO1ilS203p66zo55Qcc2GdlP/6cNu7
QEsxsyN9BN69OVtstsWAzrLyR6QP8u2GwJNEd9du7nvk7bt6xGLy8V1kcS4s
tVK+yva9F3jG7RDJMexwO8MOuer4Ssi4pMg6DdIPUblH5RMZX6UhqUvmORjg
2IbnQbFHj10j86Q7jh0gurRunmJKpxZN06X0aQEMHZ0lQ0d3i6Gj+5JVrk6u
t2K6QOn+nGsuUNdzLr0uUh5aSHvJyC8NMvJLwmp15HoQmPbUhFxfM8ePut7y
bBFZF8RnHWsg61pl+ohaFxfDvxaPrwspMNb1++1DSvfG1HWpnehrDBuFKfzA
wF2obAruGrOR6CX6njHWb7HEf/d/16V0PiuFlISIvmeL+monovcRTJq7heh8
2GzaZhP90OMPj4muBO0o6KF0VvcceG1u+7uhazxrerzcMqDEmv2VPfY7Q4bO
7fMUnZuMvI7h6pluaIW0pbcLRwYUVu74Phvb+ZX8TXNPHPRGeid/zUqLyoZ+
52yDRzi+PV31zXdldQDaf+OiAorMg5FTT1LEcTxcL3A1Xp4vBPHLOF09kFME
oa8GtVc5Yvxglxt67TcNcW8IMn82+hymGx7p0gnpA2aWlpzDyg2T+UBzq+Az
JB9YG2TkyXWjkraV8R7vfYz3ePPQK233WN8D56QC4ZqKdBgUeDjYh9elvlJe
6wr/Y4jsaGfLNqGBev5ykwocfxY4tjgocUXAaDMcU3DOBZNnIu5q+Lz+Lu0y
cuxnIpyJsNtxzK4A+ObQ7866iecZz/dO4vY9jHyvu5EIK9Hr7J4jd4zod6Is
friQ57x2USjJA8PQzxQzkgcWSMql8sCloQZE1wVxpxNNyL7IG610ItfzHl7y
mcRn9re9EUTPqDxUQu1vRk8ryecD6yZJK6Jb3LoSKL1TOUNPOYuhC57QVfoy
dF0BjF8/hr5rQo/1mdH/PaHLujqOY+HyFBwrX8sjJmptNfn8n4pseUGev8fJ
z8PzNa9NjnvpmVN5Y/F51g/URV0nxxdu5qPyw/z6XCkbE3wmx+v8nKvIuNfO
HY5LAp9MjgfOCC6hxufdfUr7kjo5bvGq/RkZ3/lZUpLWdRPO1Odn93ZkQuqY
tutLjDfsVJaFzv7lA1Wf02zO2CIo/fRwpSzhs4deq3EceAjh7tqPXvfmg7GQ
8QoX8v4Qv0g9k/PhcELzzZovviVQ4eK8bfQ0Hb42WjSN7XgGVky5cR+zq8Gx
NiySfaAPLlY3ShH9KHvVoDvxr1I692biX3YOEnxk3DB+xw2iM3UPuE/53WzO
VczE74SY+M2JPdA2uVD7KzBjE6lfgJlUxnpSv1jG2sRB6helo2Ofv475A4gv
ouoXG5LdqfpFr4jafkXVJ2BweglVv5h97ilVv4hhCbN+PRgHn/hvZ5D6xcLl
hz1I/YJvvH4Broz6xQJG/eLVeP0CvjDqFycZ9YvTNJ/d3T88gbe8uD/hXBbw
yB8/S8e8qd5aV6W/+S7IOjUIavPnwmph40A+jOdFmPt+zeeLhE+sUqf2nC0F
668f5PSP0oGnpGiFolka3KcVOx5f8BwUBDUTf73sA6GK1s2/l1fAsTq3BjXX
l8DLnCjord8Lu8xzuYmOp6mV25LopI4vOidG9DwjXdFviI5Kr9ZdmvTDydko
rSU4LSaznFyPlg1muRAdkFLo2k3keoUrDUftSl/8a28Jvi5i5D3DU3SkYgwd
l+yp5Fa0s2fy+vWvuJOIXemXvZciOrBBzi4VogtbpCl7mejBZgQc9A4eLJKb
+r2AV05X2cTKmmmyjHFNxrj+/8eZaAJnfns0soisl22aph25f6GrBpQebMW7
6xln7K5M3o+s1xYpos/x1C/JLF5g/2/dxPq85J/G38WaU+NSvJLTlkxzmBzv
7TktQcaTlD095Ly84doR76RTT7Nhv3xBaTSOzw+83M6xaPiAK9tWN/rrHAjy
2VhcgfkmWiXD1vbFaXIep93zxck8U8dfO3BR49HFXD6zNDwmx9vjZDeR8Q2D
HS7VIvfgnNK5HcqheaBnq+OoieM/O+/Qa/v1gWBxK2uJqW0+HAzbpjESRoc4
28dz51p6T86z9nbgBjLP1HHJ3MfUuO4UfdqcyEpK16TzF91a80hAeM7ZEDhb
lr96b2IRsJtkL3DE586bAcXg/ZphMKQh+rK1uxh21ew5FWWB7VwgbFrWh0eT
87gmVa4k85ilnuqUNwj/N44Vt/H+aVxzWx01zlVurCNUmgBbu8cOxDRVwPTr
wafj19Ch9i96uQClM2tWRCZNztMj6DyLzJP+teOC5efcyXHLvIh2sT+MW2hf
psZ/xvskBm/PAzbfYZMvKS+g1TtIYLpKHxwft0+UwOBB6Qz7dGcCyr96lAVc
iT/qSDv90b/mNEu4/On/XkzxoP7vVP9SOCSdTPxLO1pnl3SLG5xMSEtMcs4A
3d9Wt280EB73yZmZ6ybodJf3/DibCWbSlnvO19EhJdl0NPXdpcl5Fjc3UX4x
dTzN/PUfxxuCmqnxqf41/6Ks1J/85d0GM4k/2TP7TZlNf7I3X3rpP3/a918p
TdS+61/xrINDF//1x3p+6T/5b6/LBck/+dfXGk7xP9l/z0gQZf9T7fPQklrK
Pqfaz5jDbcp+MnkcdmEcjgIKrO+RPpgGySAKh6uv6yW4HcmekNyNcTsqsTGh
cPvEeyr+mfKeilNyPu9JX41zcQAvxv/gLKRK4f9oj0MPMV9Ac6tHmjFfgIZN
oxRf+LV8PuEXyPdsai3mF+hL/CuKX8S0vHbGfARJ1UZdxnwEBTRlUHxklvjI
bMxfkNAD3TzMXyDSSJTiLzX2L55gvoMCF956hvkOfNLLpPhOuYfvIOZHSPfD
5hzMj0D6xyWKH1mYnSB8Cj1+ZleD+RRKVjlN8alVOiqEfyGLObudMf9Cslt1
KP710LXsGuZrqOtBSxnma+ilHh/F18zPKp0gfUdGTpvsMb+DcL85Fwm/G+C4
1kv6viIXhbzAfBCCFntRfPBU16MezB9RZf3j6d+fZMN87Z7XhD8+sTW6i/km
2iDaNQfzTVhvok/xzbIj+YSfom0GopymmZGoSK+e4qdvniUJYz6L0j2t2jGf
RdnNJyg++4n9J8L8Fy1a+90b81/kv285xX/NnlnPw3wZucTGh2K+jJIC1lN8
mUdOxR7za+RRJeKP+TVoxbRS/HogdOQ05uPon6UngzAfh3hVJ4qPM+lsMcX8
HTX5nFDC/B0UmoaXE/5+zD/4DOb7qHd29X7M9+FokCTF9zs8a4vy22mI50sZ
fU91Cfye847KD6if8Xv3hrkahRYmLDx1qQixK/KmS4X2gc/JkH8kHPPRb/ty
pqUdxejjdKturZV0CDluFG3xMRWZzuNH7mcKkYLlR6f0S3RoqCkSyxmKRapH
M5w8buYhvl8XmS6F0mGOR19+zUA2OhW/Ovpp5XPUVRV4wDSsDwTl05+oBMeh
LWwvb37MLEMBYXe5a5TpYJT5ftUu0SfofmII90GTQpSkxnme9F1mhj0VO9Pp
j0Ls80NSy3MRh7/qHdInuP0v/e+aEdFv3dIjaHun6Apu1es+P37Uh6Y/RT8w
6tCRvd7OkZY8RSfQLNVz5G6OJa1vih6gaCULrUbpDM14St0/YPHjjid1D6Hq
pVrajGOZsPpwolkXtv+487EU33zLGfqa8N8VFy5SfHOpgHQgvTME4pN7b5B+
vqF1ClQe7yqP/00R1Sg44y6fQfopXfdJU3m//PH8ITSP5w/RRP7QNHbNDvrN
MvDwpIudKstG2a+UxEm+sfueqaD9QBhsv7yAmfQRSoVHUvlJyV3b2qwUY+HN
YjpzV04qzC4cz2cuPrB6zGUwCRQMw0j+EwoLHKj8Z/l4HhVMx/OoaCKPqhPl
a+31qwiYvhSSvCt63dA6l+Rd9/ru8vu6LQ/iaWtInhat0LpO5Wl5Y6xy81Mi
oM1yYCD2XhLG0yupvO6bX6d2JjvHwbYKxzVjN5NBMdeOygPLZtoc8J6eDBGu
HcpPeFLgIetiaZI3Pvdkv47+szRY06hF8szwZa0QlWee6PPtndLn6zqer4Yl
plS+Gj1l5KtPGuhp7MrOh1/f3Z8PbAxDjVqFVH6be3a8lns/gvdjfCQfjgae
7qDy4aIPv/Se78gAB3FDkj9H11e3UfnzxeI1V1U9IkFM7cd90t852/YwlW9f
X3DLWyYjDlwPPu8TqkuAJncjKj/Pmr+C5POBXWqwRrA6Abb3mlD5/Ns7Om9t
k0uFtoZuPbtpCZAQ3Erl/2+upn0m/fwd4VqkXgDnY7uKSb3grcaZK8HduSDi
qNAWAhboeqoLVV9gd0s62LQyFyzmq318ZPQQDc5opuoRM1p1w+f00GBLErvr
pf0RKILFmKpfSFq+GREsSge2UV/hMZM4tChmLVXvUJT3sXwelwLAwblPNTEB
WfHHUPWRlsETp97tiIPD2cXipJ84Z9dpqs6SVLklhfRvz/Ozkjc5GAO7pwte
IXUZ2d3HSR0HHvzuAAuNKKipjqPqOAbjdR9YO173gYm6z/TxOhEwjdeJ4AWj
TsSoK0HveF0JTdSV/CtehWRI0GBnTcbtBom7qMsTqDrUwy3xup2cmSA78PIN
ed/Ma432VFK3uiD95qu7WBpoc+/nJO/7aW08R9W5+l81v4xflgIGc012kPct
LYw1pOpiBnO2apD3W7V7n9Im77t6qSVC1dG21UcEGPbnIpO6msbfYy8g4vhF
eZKXHipdRfLVKNxibyfJV2++e5PKV6vwcTEl/PaWU2fEpT2MuMTF6KOc2s/F
frjvic5JfxRQveO0Z00uWMown2vH9jxAMzFvQo+R8bT3R1gtCuHTsvevynGc
rDwlt5mpMBbtNJApFW0sg9MhQ8kbcFzd2dojoW2RgHY639IRZaoEIX8lZjkR
Olw2bg6e/ZkGqoKnXwQPYlwtW5SRp0QHD0Z/3H5Gf5w+oz/uB6P/SHJK/xEL
h1u3VVXHv3xk1mYVSYxnghj9PKmMXxZGX08T68eKwoowuRZGvq6fka/jNXqS
y7/sX93aKSGz+xJ4HqUpOHCm9xkKB2aKuw3eWuI7Od7i45tErt+bVdC5fCBy
cvylVtwrMk6bgrvO6gZRuCtf2C6q3KsINvcaWe6vrAOltpX3R/p7IXksXrq3
NQGxbg/ZmE7e98h5kWcjxmNytkss1h9ORp/XT9cOsImGDP1N7fEt+Jw6cOHQ
AFMqMvnJrn62OwLuzNM79KURn9fSzWwLA9JR+MV6/rA3oXBx5sZI8t06Goep
qX1LJnoVfl5W4UIQJH1cYyOE7dwgIuTwbhsa4jjb96BN+jbwH9dP5PufPgiV
1vanzV+taRP1aI9Ic9/gwkxUocPMKvMpCH0SfLNTB8/jtY95poZ1OnIQcszb
PBqKDtaH6d7E/1eiJewLU8czlCR+mxb5JQKdeMysJoPjz3cJjeaRncnI4nSv
h9/5aCRUbSFOx+vS2PpPvkh1AuqLSJvHhmLQ+ztZO463/dv/O9Vu/0EHnDXE
UtD5d5ypjSgBNJiDXr7Gfi1609NnNCINiXDIsItui4ejMfFz71XRQSzU+1DU
1ixkEabxOu9TFCx6W5C+qBjj2+vbOM3ccpBYnONw3fJQaN7WpCeI8a1rduDZ
w1dz0f3rYeJ7231BN/WtStn/9DVoxs/TzFnmSJvQP3SPKXgot2aiHzfa4p1X
RqPWxOvOGzG/9pGROnhbNw1F9VS9nLkuHolEfLxzvxrj5Ifr3BqGk1FybcSq
sCcJ6PJp66VPcXzgy3ofGfgjAZ3QVj1KfpNbCj0HcHzweb56L3kuxTdLYslz
CuVIoJ7Pt8gbThICGUhYr3v1vv5kWDpoIGyG7/+wQ2RP3KYc5NzJI3+pORHU
r1f1ZiXR4UCz6skrvnnI7fnZHJaYaLDhaXixFfPu7Odom96tApStMqsjaNYj
2GK11p0Z+50Oo7/gs/V3BR1eT9qErkZMZ1dWCt53N+djFyKjkpGUYfCIEI7z
EV6OKxfKpKDSb8xLufFve5fR5zRsVxG3ZlSQdV4okFlA1n3Yfh+1XsXCD+z+
2A5YFlinE7swvKpD2UOSz6Br061c5CgxT0bCLh3kHtW17fKlg9amQb3bVwuR
x4ix5wOmFDi/1eVkpy3GRWC1lq+9BP2cs/nWCpdwMDWyMt6PcX4TQ7c/48er
NZuuB9AmdPsX/lKfNQyV/hiF11PAyZaWjNdnk72SWleDYlMvK96/Cw1Kr7zw
fga81aL2kf2+u1cUtu994srlxN6zP5WqEjsvlnWePfKrBH0ZXtSZ8TUHMlky
LydtokNbzHXzqL3VqPFNfn2mUzJItIe3x/3ug20M3Xvra9FDN4bCaRN6vBOM
uu2VKXXbeP/gXldsZ8Nxo7uI3d3gt3Ei9sYz/KtcBvvhp+EdX9WJX16ToPzx
b3VbZY8f6VuwP4e/OxJC/NukVYny67/lJT41+nU+uJEMqi08td14HZnbhdNi
8f2zZcUfqnUOB40ZSkPCeB9evFsoQJ6/qF/PsB22p/C8kU+HsX2pcvRbEbv6
0Bsur4j96pBzo/AR7GeLY/bsJv61f01t/Vscj8Tmby4n8YnZgDOBxKUHf6mH
bkpplS1eEwN27pK1BqZ5IOr2W2kH5o+n2VZ8+qKWAo2CM7uLhQpB/fbGymrM
7xYsF2rv+ZkDPXIRwtGrSqBa6seaZMxTJvq11aacR3v4TQoD8f4x185YozRa
guiKe/Tj8T7G8KEsN2x/oLN7fSi2x4M9BkUd2A73ZMaHDkdHg9r9xan22M9c
e8XiiH/xXLgj8xzHlzjjpcNncby5eG3WfhJn+jOZd23DcTk79/uKqzhOr2aX
uULi88GIs3ydbOnA696wU/MOgrFw+YYhwpfFPSM4j+fCTPbmx+vxb+yqo9nZ
l+nA1ry61utgMei+Heo2bM2Bo/3TFl3C5+xx1g0pFcFVkFlddi3zwTO4bRvI
eXnGv/rPfdIfOmVcAibtzf+oylYp7G9H2pJ927D/1eyaHUD8TurI8wcXcRzx
+6ZVkIrjyiM2vVoST+pqrEJycTxtqA/aEIvjq6k/TwKJq64zFz14is+hJWFH
X5NzKUCUKZycR2PcaSJ78Xruakcs/47Xxzw6WkjWdUBrbd6jkgJ47BySlno7
BY5xSDRUOmDedPnEo/j4Emju2KyXuC8SHjcrDWv9j64y4eyKHvmlnrQJXWWq
7NAQiYP/NCaDNI6LTY0JvCQeBpbSDMh5IBKcJD2Gz4fok1azyLlw+FeBIjlH
gw7OHybnqpZ1tC45T9OObd22C/OLilvzxTc8jIEzD47YakfQoauIXtJnXQCd
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
Kl9nxNCV9U7RlU3Ns3U6+1F5tv8DeGZBPQ==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{378.4796334630578, 349.7216413849926},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-10, 10}, {-10, 10}, {-3.141592653589793, 3.1058935409104693`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5306340411222907`, -1.6208794983832904`, 2.545566554596124},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.643635341136546*^9, 3.643635670117556*^9}]
}, Open  ]],

Cell[BoxData[
 FractionBox["\[Pi]", "3"]], "Input",
 CellChangeTimes->{{3.643635440360322*^9, 3.6436354576062927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"startatwall", "[", 
   RowBox[{"move_", ",", "pos_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"move", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        "]"}], ">", "0"}], "||", " ", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"move", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
        "]"}], ">", "0"}]}], ",", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "=", " ", 
         RowBox[{
         "pos", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{
         "pos", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"\[Alpha]Des", " ", "=", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
           "move", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "move", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"moveOK", " ", "=", " ", "True"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], "\[GreaterEqual]", " ", 
           FractionBox["\[Pi]", "2"]}]}], ",", " ", 
         RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Abs", "[", "\[Alpha]Des", "]"}], "\[LessEqual]", " ", 
           FractionBox["\[Pi]", "2"]}]}], ",", " ", 
         RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "&&", " ", 
          RowBox[{"\[Alpha]Des", "\[GreaterEqual]", " ", "0"}]}], ",", " ", 
         RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], " ", "&&", " ", 
          RowBox[{"\[Alpha]Des", "\[LessEqual]", " ", "0"}]}], ",", " ", 
         RowBox[{"moveOK", " ", "=", " ", "False"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"moveOK", ",", 
         RowBox[{"pos", "+", "move"}], ",", "pos"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", " ", "pos"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6436364149058437`*^9, 3.6436364598015842`*^9}, 
   3.64363694137304*^9, {3.64363702076328*^9, 3.643637069858095*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startatwall", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6436364714345913`*^9, 3.6436365190872097`*^9}, 
   3.6436365715678177`*^9, {3.6436366233915873`*^9, 3.643636651605846*^9}, {
   3.643636995809146*^9, 3.643636996142426*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ArcTan", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ArcTan[\\(\\(0, 0\
\\)\\)]\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"ArcTan::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643636996876403*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.643636489619986*^9, 3.643636519977126*^9}, 
   3.643636572239073*^9, {3.6436366264461193`*^9, 3.643636652014086*^9}, 
   3.643636996880598*^9}]
}, Open  ]]
},
WindowSize->{808, 591},
WindowMargins->{{72, Automatic}, {Automatic, 11}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 10856, 296, 798, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11439, 320, 282, 8, 28, "Input"],
Cell[11724, 330, 181, 5, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11942, 340, 805, 25, 63, "Input"],
Cell[12750, 367, 223, 5, 28, "Output"]
}, Open  ]],
Cell[12988, 375, 136, 3, 28, InheritFromParent],
Cell[13127, 380, 116, 2, 28, "Input"],
Cell[13246, 384, 731, 21, 46, "Input"],
Cell[CellGroupData[{
Cell[14002, 409, 1383, 47, 97, "Input"],
Cell[15388, 458, 1230, 43, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16655, 506, 355, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[17035, 521, 112, 2, 21, "Print"],
Cell[17150, 525, 95, 1, 21, "Print"],
Cell[17248, 528, 93, 1, 21, "Print"],
Cell[17344, 531, 94, 1, 21, "Print"]
}, Open  ]],
Cell[17453, 535, 178, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17668, 544, 735, 21, 63, "Input"],
Cell[18406, 567, 262, 8, 28, "Output"],
Cell[18671, 577, 272, 8, 48, "Output"],
Cell[18946, 587, 186, 5, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19169, 597, 2122, 58, 165, "Input"],
Cell[21294, 657, 510, 11, 24, "Message"],
Cell[21807, 670, 510, 11, 24, "Message"],
Cell[22320, 683, 274, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22631, 695, 432, 12, 28, "Input"],
Cell[23066, 709, 88750, 1454, 365, "Output"]
}, Open  ]],
Cell[111831, 2166, 119, 2, 46, "Input"],
Cell[111953, 2170, 3177, 80, 220, "Input"],
Cell[CellGroupData[{
Cell[115155, 2254, 423, 11, 28, "Input"],
Cell[115581, 2267, 474, 10, 24, "Message"],
Cell[116058, 2279, 277, 7, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
