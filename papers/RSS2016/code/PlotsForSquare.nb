(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    585917,      11807]
NotebookOptionsPosition[    584876,      11764]
NotebookOutlinePosition[    585235,      11780]
CellTagsIndexPosition[    585192,      11777]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Init", "Section",
 CellChangeTimes->{{3.6629543033673983`*^9, 3.662954308103385*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Meanx", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"1", "-", 
             FractionBox["A", "2"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"A", " ", 
                RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", " ", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], "+", 
             FractionBox[
              RowBox[{"Cot", "[", "\[Beta]", "]"}], 
              RowBox[{"12", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "A"}], " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["A", "2"], "+", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"A", " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], "-", 
             FractionBox[
              RowBox[{"Cot", "[", "\[Beta]", "]"}], 
              RowBox[{"12", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "A"}], " ", 
                RowBox[{"Tan", "[", "\[Beta]", "]"}]}]], " "}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox[
      StyleBox["1", "Input"], "2"], 
     StyleBox["<", "Input"], "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"1", "-", 
             FractionBox["A", "2"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{"3", "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"(", 
                RowBox[{"A", "-", "1"}], ")"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], 
                 RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"6", " ", "A"}], "+", 
              RowBox[{"Cot", "[", "\[Beta]", "]"}]}], 
             RowBox[{"12", " ", "A"}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"6", " ", "A"}], "-", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"(", 
                RowBox[{"A", "-", "1"}], ")"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"A", "-", "1"}], ")"}], 
                 RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["A", "2"], "+", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "+", " ", 
              RowBox[{"6", "A"}], "+", 
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], " ", 
                 RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], "-", 
             FractionBox[
              RowBox[{"Cot", "[", "\[Beta]", "]"}], 
              RowBox[{"12", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"\[IndentingNewLine]", 
             FractionBox[
              RowBox[{"3", "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"(", 
                 RowBox[{"A", "-", "1"}], ")"}], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "-", "1"}], ")"}], 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], 
              RowBox[{"6", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[",", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", 
    FractionBox["1", "2"]}], 
   StyleBox["]", "Input"]}]}], "\n", 
 RowBox[{
  RowBox[{"Meany", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"6", " ", "A"}], "+", 
              RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
             RowBox[{"12", " ", "A"}]], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0", "\[LessEqual]", " ", "\[Beta]", "<", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"A", " ", 
                RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "\[LessEqual]", "  ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"1", "-", 
             FractionBox["A", "2"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SqrtBox["2"], "  ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "A"}], " ", 
                RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], "-", 
             FractionBox[
              RowBox[{"Tan", "[", "\[Beta]", "]"}], 
              RowBox[{"12", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SqrtBox["2"], 
             SqrtBox[
              RowBox[{"A", "  ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " "}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["A", "2"], "+", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "A"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox["1", "2"], "<", "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"6", " ", "A"}], "+", 
              RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
             RowBox[{"12", " ", "A"}]], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{"3", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "1"}], ")"}], "2", " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], 
                 RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"1", "-", 
             FractionBox["A", "2"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{"3", "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], " ", "2", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"A", "-", "1"}], ")"}], " ", 
                 RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], "-", 
             FractionBox[
              RowBox[{"Tan", "[", "\[Beta]", "]"}], 
              RowBox[{"12", " ", "A"}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"6", " ", "A"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], "2", " ", 
               SqrtBox["2"], " ", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], 
                 RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["A", "2"], "+", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"24", " ", "A"}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"6", " ", "A"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], "2", " ", 
               SqrtBox["2"], " ", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"A", "-", "1"}], ")"}], 
                 RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], 
             RowBox[{"6", " ", "A"}]], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{"A", "==", "1"}], ",", 
    FractionBox["1", "2"]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Varx", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "9"], " ", "A", " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", " ", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "9"]}], " ", "A", " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "9"], " ", "A", " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "9"]}], " ", "A", " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox[
      StyleBox["1", "Input"], "2"], 
     StyleBox["<", "Input"], "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"A", "-", "1"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"A", "-", "1"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", 
    StyleBox[
     FractionBox["1", "12"], "Input"]}], 
   StyleBox["]", "Input"]}]}], "\n", 
 RowBox[{
  RowBox[{"Vary", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "9"], " ", "A", " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", "\[Beta]", "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "9"]}], " ", "A", " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "9"], " ", "A", " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "9"]}], " ", "A", " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox[
      StyleBox["1", "Input"], "2"], 
     StyleBox["<", "Input"], "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "-", "9", "+", 
              RowBox[{"12", "A"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "-", "9", "+", 
              RowBox[{"12", "A"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
              RowBox[{"144", " ", 
               SuperscriptBox["A", "2"]}]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"A", "-", "1"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "-", "9", "+", 
              RowBox[{"12", "A"}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "576"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"48", " ", 
                SuperscriptBox["A", "2"]}], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A"}], ")"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "-", "9", "+", 
              RowBox[{"12", "A"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", 
    FractionBox["1", "12"]}], 
   StyleBox["]", "Input"]}]}], "\n", 
 RowBox[{
  RowBox[{"Covxy", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox["A", "18"]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", "\[Beta]", "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["A", "18"], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox["A", "18"]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["A", "18"], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox["1", "2"], "<", "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", "-", "1"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 SqrtBox[
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "A"}]}]], 
                 SqrtBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]]}], "+", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}]}], 
                 ")"}], "-", 
                RowBox[{"6", " ", 
                 SqrtBox[
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "A"}]}]], " ", 
                 SqrtBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}]]}]}], ")"}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"], " "}]], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", "-", "1"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "+", 
                RowBox[{"6", " ", 
                 SqrtBox["2"], 
                 RowBox[{"(", " ", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", "-", "1"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 SqrtBox[
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "A"}]}]], 
                 SqrtBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]]}], "+", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}]}], 
                 ")"}], "-", 
                RowBox[{"6", " ", 
                 SqrtBox[
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "A"}]}]], " ", 
                 SqrtBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}]]}]}], ")"}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"], " "}]], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             FractionBox["1", "288"], " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"], 
                SuperscriptBox["A", "2"]]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", "-", "1"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "+", 
                RowBox[{"6", " ", 
                 SqrtBox["2"], 
                 RowBox[{"(", " ", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"36", " ", 
              SuperscriptBox["A", "2"]}]], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", "0"}], 
   StyleBox["]", "Input"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Corxy", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox["1", "2"]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", "\[Beta]", "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox["1", "2"]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox["1", "2"], "<", "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"17", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                 RowBox[{"6", " ", 
                  SqrtBox["2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
                ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], 
               ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], " ", "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"17", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                 RowBox[{"6", " ", 
                  SqrtBox["2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
                ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], 
               ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], " ", "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RobotRegion", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{
   "draws", " ", "polygon", " ", "for", " ", "the", " ", "trapezoidal", " ", 
    "or", " ", "triangular", " ", "region"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", "\[IndentingNewLine]", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "A", "-", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], ",", "1"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "A", "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{"A", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{"A", " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", " ", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", "A", "+", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", "A", "-", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "A"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "A"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"A", "-", 
                 FractionBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"A", "+", 
                 FractionBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"A", " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"A", " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"A", "-", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"A", "+", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "A"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "A"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[",", "Input"], 
    RowBox[{
     FractionBox[
      StyleBox["1", "Input"], "2"], "<", "A", "<", "1"}], 
    StyleBox[",", "Input"], 
    RowBox[{
     StyleBox["(*", "Input"], 
     RowBox[{"A", ">", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "and", " ", "the", " ", "area", " ", 
       "is", " ", "either", " ", "a", " ", "trapezoid", " ", "or", " ", "a", 
       " ", "square", " ", "with", " ", "a", " ", "clipped", " ", 
       "corner"}]}], "*)"}], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "-", 
                 FractionBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "+", 
                 FractionBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "-", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "+", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}]}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}]}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "-", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], ",", "1"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], ",", "0"}], 
               "}"}]}], "}"}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "+", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}], "-", 
                 FractionBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}]}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}]}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}]}], "}"}]}], 
             "}"}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[",", "Input"], 
    StyleBox[
     RowBox[{"A", "==", "1"}], "Input"], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], 
   StyleBox["]", "Input"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["MeanPath", "Input"], "[", 
   RowBox[{"A_", ",", "pt_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{"draws", " ", "line", " ", "for", " ", "the", " ", "mean"}], " ", 
   "*)"}], 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "A"}], "]"}], ",", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "A"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}], ",", "pt"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"numPts", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swarmPts", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"numPts", "+", "1"}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "4"}], "+", "i", "+", 
           RowBox[{
            RowBox[{"Boole", "[", 
             RowBox[{"EvenQ", "[", "j", "]"}], "]"}], 
            FractionBox["1", "2"]}]}], ",", 
          RowBox[{
           RowBox[{"1", "/", "2"}], "+", 
           RowBox[{"j", 
            RowBox[{
             SqrtBox["3"], "/", "2"}]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "numPts"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"2", "/", 
            SqrtBox["3"]}], "numPts"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656126923474448*^9, 3.656127049845388*^9}, {
   3.6561270820382557`*^9, 3.656127380949277*^9}, {3.656127431761403*^9, 
   3.656127573176221*^9}, {3.6561728615164843`*^9, 3.656172959147731*^9}, {
   3.6561731010405416`*^9, 3.656173112062104*^9}, {3.656173710771494*^9, 
   3.656173717858397*^9}, 3.656174571339066*^9, 3.656174619323966*^9, 
   3.65617600893959*^9, 3.656318843543408*^9, {3.65631949561733*^9, 
   3.656319581939105*^9}, {3.656319917517877*^9, 3.656319925387534*^9}, {
   3.6565999126125727`*^9, 3.6565999133307037`*^9}, {3.659659362473517*^9, 
   3.65965937302573*^9}, 3.662954275445801*^9},
 CellID->1833685998]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate", "Section",
 CellChangeTimes->{{3.662954313013365*^9, 3.662954318075968*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "mean", ",", "cov", ",", 
        RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", 
        "robRegion", ",", "padding", ",", "padding2", ",", 
        RowBox[{"imsize", "=", "220"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mean", "=", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cov", "=", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"varx", " ", "=", " ", 
        RowBox[{"Varx", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vary", " ", "=", "  ", 
        RowBox[{"Vary", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"robRegion", " ", "=", " ", 
        RowBox[{"RobotRegion", "[", 
         RowBox[{"\[Beta]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"padding", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "15"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padding2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "30"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", "Mean", "*)"}], 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Meanx", "[", 
                   RowBox[{"\[Beta]", ",", "A"}], "]"}], ",", 
                  RowBox[{"Meany", "[", 
                   RowBox[{"\[Beta]", ",", "A"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], 
               ",", 
               RowBox[{"PlotLegends", "\[Rule]", " ", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0.15", ",", "0.15"}], "}"}]}], "]"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"AxesOrigin", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"1", "/", "2"}]}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "correlation", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Corxy", "[", 
                 RowBox[{"\[Beta]", ",", "A"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<correlation\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "0.55"}], ",", "0.55"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", 
                    RowBox[{"Corxy", "[", 
                    RowBox[{"\[Beta]", ",", "A"}], "]"}]}], "}"}], "]"}]}], 
                 "}"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "covariance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Covxy", "[", 
                 RowBox[{"\[Beta]", ",", "A"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\[Beta]\>\"", ",", 
                  "\"\<\!\(\*FractionBox[\(covariance\), \(area\)]\)\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding2"}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "0.04"}], ",", ".04"}], "}"}]}], "}"}]}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", 
                    RowBox[{"cov", "/", "A"}]}], "}"}], "]"}]}], "}"}]}]}], 
              " ", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "of", " ", "column"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "-", "bwid"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "+", "bwid"}]}], "]"}]}], 
                  RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"White", ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{
                   "interior", " ", "region", " ", "of", " ", "square"}], 
                   "*)"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<Area=``,mean=``,cov=``\>\"", ",", "A", ",", "mean", 
                    ",", 
                    RowBox[{"Chop", "[", "cov", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], ",", "1.2"}], "}"}]}], "]"}], 
                   ","}], "*)"}], " ", 
                 RowBox[{"(*", 
                  RowBox[{"optional", " ", "title", " ", "info"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"LightBlue", ",", 
                   RowBox[{"Polygon", "[", "robRegion", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "swarm", " ", "of", " ", "robots"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showParticles", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011", "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"A", "<", "1"}], ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{"swarmPts", ",", 
                    RowBox[{"(*", 
                    RowBox[{"half", "-", 
                    RowBox[{"plane", " ", "test"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"Last", "[", "robRegion", "]"}]}], ")"}]}], ">", 
                    "0"}], ")"}], "&"}]}], "]"}], ",", "swarmPts"}], "]"}], 
                    "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "Thick", ",", " ", 
                   RowBox[{"Line", "[", 
                    RowBox[{
                    StyleBox["MeanPath", "Input"], "[", 
                    RowBox[{"A", ",", 
                    RowBox[{"ControlActive", "[", 
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "16"}], ",", 
                    RowBox[{"\[Pi]", "/", "64"}]}], "]"}]}], "]"}], "]"}]}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "direction", " ", "of", " ", "the",
                    " ", "vector"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", 
                   RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["1", "2"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{
                    FractionBox["1", "4"], 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}]}], "}"}]}], 
                    "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                   RowBox[{"Point", "[", "mean", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"Opacity", "[", "0", "]"}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                   RowBox[{"Ellipsoid", "[", 
                    RowBox[{"mean", ",", 
                    RowBox[{"4", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"varx", ",", " ", "cov"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"cov", ",", "vary"}], "}"}]}], "}"}]}]}], "]"}]}],
                   "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "6"}], ",", 
                    RowBox[{"7", "/", "6"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "6"}], ",", 
                    RowBox[{"7", "/", "6"}]}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"(*", "variance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Vary", "[", 
                   RowBox[{"\[Beta]", ",", "A"}], "]"}], ",", 
                  RowBox[{"Varx", "[", 
                   RowBox[{"\[Beta]", ",", "A"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<variance\>\""}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0.09"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"ImageSize", "\[Rule]", "190"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "varx"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "vary"}], "}"}], "]"}]}], 
                 "}"}]}]}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "}"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
          "0", ",", "6.28", ",", "0.01", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"A", ",", ".125", ",", "\"\<area\>\""}], "}"}], ",", 
          "0.001", ",", "1", ",", "0.001", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "showParticles", ",", "False", ",", "\"\<show particles\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.656795196820305*^9, {3.656972277848474*^9, 3.656972323742771*^9}, {
   3.656972354322016*^9, 3.656972357609967*^9}, 3.656988354648239*^9, {
   3.6569884705646152`*^9, 3.656988493135454*^9}, {3.656988550071396*^9, 
   3.656988655857045*^9}, {3.6569894603163233`*^9, 3.656989486843934*^9}, {
   3.656989531562786*^9, 3.656989542086897*^9}, {3.656989580748362*^9, 
   3.656989624204317*^9}, {3.656989981836008*^9, 3.656989982874411*^9}, {
   3.6569906483882103`*^9, 3.656990654815346*^9}, {3.656990701350219*^9, 
   3.6569907385448847`*^9}, {3.656990772879417*^9, 3.656990784627878*^9}, {
   3.656990844525193*^9, 3.656990872984708*^9}, {3.656991420376791*^9, 
   3.656991424030569*^9}, {3.656991460710334*^9, 3.656991461588852*^9}, {
   3.656991510682987*^9, 3.656991526908751*^9}, {3.6569915702020063`*^9, 
   3.656991597981056*^9}, {3.656991631840012*^9, 3.6569916431990967`*^9}, {
   3.656991773085187*^9, 3.656991817638687*^9}, {3.6569918505353537`*^9, 
   3.6569918654691887`*^9}, {3.6569921573185577`*^9, 
   3.6569921577836227`*^9}, {3.656992198749998*^9, 3.65699221010165*^9}, {
   3.656992283075183*^9, 3.656992289456553*^9}, {3.656992343293524*^9, 
   3.656992386613111*^9}, {3.65699244757166*^9, 3.656992453613069*^9}, {
   3.656992494370109*^9, 3.6569924948858013`*^9}, 3.657017817162533*^9, {
   3.657017949775469*^9, 3.657017950072247*^9}, 3.657018020500729*^9, {
   3.6570180550589437`*^9, 3.657018056409244*^9}, {3.65702014839144*^9, 
   3.6570201486591473`*^9}, {3.658596524000564*^9, 3.6585965331215763`*^9}, {
   3.658689571956876*^9, 3.658689572151148*^9}, 3.6587782739286213`*^9, {
   3.659310125641808*^9, 3.659310258185466*^9}, 3.659641501623365*^9, {
   3.659697767289062*^9, 3.659697771877007*^9}, {3.659697805599869*^9, 
   3.659697841016327*^9}, {3.659697873334496*^9, 3.659697887039423*^9}, {
   3.659697917152749*^9, 3.659697971904133*^9}, {3.6596980035509653`*^9, 
   3.6596980068131742`*^9}, {3.65969822328605*^9, 3.659698247844201*^9}, {
   3.659699686062976*^9, 3.659699692917746*^9}, {3.659699748401119*^9, 
   3.659699770831737*^9}, {3.659699812927397*^9, 3.659699851252578*^9}, {
   3.659713377252952*^9, 3.659713488826714*^9}, {3.6597135212528563`*^9, 
   3.659713536867614*^9}, {3.659713619853107*^9, 3.659713770565661*^9}, {
   3.6599525101019907`*^9, 3.659952598012911*^9}, {3.659952646231936*^9, 
   3.659952649446587*^9}, {3.659952687364767*^9, 3.659952710342092*^9}, {
   3.6599527595706673`*^9, 3.659952775991723*^9}, {3.659952812042877*^9, 
   3.659952841641481*^9}, {3.659952899643251*^9, 3.659952954290547*^9}, {
   3.660348378113248*^9, 3.660348400275343*^9}, {3.6603484413716383`*^9, 
   3.6603484437872972`*^9}, {3.660382725857903*^9, 3.660382733867496*^9}, {
   3.660382769628811*^9, 3.660382864853499*^9}, {3.6603829314227*^9, 
   3.660382958742292*^9}, {3.660382995879237*^9, 3.660383003484803*^9}, {
   3.660383048895123*^9, 3.660383049740139*^9}, {3.660383148687529*^9, 
   3.660383151822135*^9}, {3.660383215230227*^9, 3.660383240776403*^9}, {
   3.660383281321046*^9, 3.660383318882613*^9}, {3.6603833894635477`*^9, 
   3.6603833915443*^9}, {3.6603834927560673`*^9, 3.66038349388724*^9}, {
   3.660383619248096*^9, 3.660383639067501*^9}, {3.6603836725311823`*^9, 
   3.6603836966882677`*^9}, {3.660383745976446*^9, 3.660383796746139*^9}, {
   3.660383856063558*^9, 3.660383879329733*^9}, {3.660383913338663*^9, 
   3.660383933435248*^9}, 3.660383997431237*^9, {3.660384067824223*^9, 
   3.6603840991761*^9}, {3.6603841438120823`*^9, 3.660384184473242*^9}, {
   3.6603842548847303`*^9, 3.660384278833631*^9}, {3.662728176561306*^9, 
   3.662728201966002*^9}, {3.662728365298403*^9, 3.6627283801962433`*^9}},
 CellID->518614895],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 0.125, $CellContext`showParticles$$ = 
    False, $CellContext`\[Beta]$$ = Rational[1, 4] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Beta]$$], 0, "\[Beta]"}, 0, 6.28, 0.01}, {{
       Hold[$CellContext`A$$], 0.125, "area"}, 0.001, 1, 0.001}, {{
       Hold[$CellContext`showParticles$$], False, "show particles"}, {
      True, False}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[10], 
         Manipulate`Place[2], 
         Spacer[10], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {532., {221.134033203125, 226.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Beta]$915492$$ = 0, $CellContext`A$915493$$ = 
    0, $CellContext`showParticles$915494$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`A$$ = 0.125, $CellContext`showParticles$$ = 
        False, $CellContext`\[Beta]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$915492$$, 0], 
        Hold[$CellContext`A$$, $CellContext`A$915493$$, 0], 
        Hold[$CellContext`showParticles$$, \
$CellContext`showParticles$915494$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x$, $CellContext`y$, $CellContext`mean$, \
$CellContext`cov$, $CellContext`bwid$ = 
         0.05, $CellContext`varx$, $CellContext`vary$, \
$CellContext`robRegion$, $CellContext`padding$, $CellContext`padding2$, \
$CellContext`imsize$ = 
         220}, $CellContext`x$ = $CellContext`Meanx[$CellContext`\[Beta]$$, \
$CellContext`A$$]; $CellContext`y$ = \
$CellContext`Meany[$CellContext`\[Beta]$$, $CellContext`A$$]; \
$CellContext`mean$ = {$CellContext`x$, $CellContext`y$}; $CellContext`cov$ = \
$CellContext`Covxy[$CellContext`\[Beta]$$, $CellContext`A$$]; \
$CellContext`varx$ = $CellContext`Varx[$CellContext`\[Beta]$$, \
$CellContext`A$$]; $CellContext`vary$ = \
$CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`A$$]; \
$CellContext`robRegion$ = $CellContext`RobotRegion[$CellContext`\[Beta]$$, \
$CellContext`A$$]; $CellContext`padding$ = {{30, 6}, {3, 
          15}}; $CellContext`padding2$ = {{30, 6}, {3, 30}}; Row[{Column[{
              Plot[{{
                 $CellContext`Meanx[$CellContext`\[Beta]$$, $CellContext`A$$], 
                 $CellContext`Meany[$CellContext`\[Beta]$$, \
$CellContext`A$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "mean"}, PlotLegends -> Placed[{
                  Row[{"mean ", 
                    Style["x", Italic]}], 
                  Row[{"mean ", 
                    Style["y", Italic]}]}, {0.15, 0.15}], 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, AxesOrigin -> {0, 1/2}, 
               PlotRange -> {{0, 2 Pi}, {0, 1}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Part[
                  ColorData[97, "ColorList"], 2]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`x$}], 
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`y$}]}], 
              Plot[{
                $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`A$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "correlation"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, 
               PlotRange -> {{0, 2 Pi}, {-0.55, 0.55}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 6]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 6], 
                 Point[{$CellContext`\[Beta]$$, 
                   $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`A$$]}]}], 
              Plot[{
                $CellContext`Covxy[$CellContext`\[Beta]$$, \
$CellContext`A$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {
                "\[Beta]", "\!\(\*FractionBox[\(covariance\), \(area\)]\)"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding2$, PlotPoints -> 
               ControlActive[9, Automatic], 
               PlotRange -> {{0, 2 Pi}, {-0.04, 0.04}}, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 5]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 5], 
                 
                 Point[{$CellContext`\[Beta]$$, \
$CellContext`cov$/$CellContext`A$$}]}]}] Column[{
              Graphics[{{Black, 
                 
                 Rectangle[{0, 0} - $CellContext`bwid$, {1, 
                   1} + $CellContext`bwid$]}, {White, 
                 Rectangle[{0, 0}, {1, 1}]}, {LightBlue, 
                 Polygon[$CellContext`robRegion$]}, 
                If[$CellContext`showParticles$$, {
                  PointSize[0.011], 
                  Lighter[Blue, 0.5], 
                  Point[
                   If[$CellContext`A$$ < 1, 
                    Select[$CellContext`swarmPts, Dot[{
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}, # - 
                    Last[$CellContext`robRegion$]] > 
                    0& ], $CellContext`swarmPts]]}], {
                 Part[
                  ColorData[97, "ColorList"], 1], Thick, 
                 Line[
                  $CellContext`MeanPath[$CellContext`A$$, 
                   ControlActive[Pi/16, Pi/64]]]}, {Blue, 
                 Thickness[0.01], 
                 
                 Arrow[{{1/2, 1/2}, {
                   1/2 + (1/4) Cos[$CellContext`\[Beta]$$], 
                    1/2 + (1/4) Sin[$CellContext`\[Beta]$$]}}]}, {
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 PointSize[Large], 
                 Point[$CellContext`mean$]}, {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Opacity[0], 
                 EdgeForm[{Thick, Red}], 
                 
                 Ellipsoid[$CellContext`mean$, 
                  4 {{$CellContext`varx$, $CellContext`cov$}, \
{$CellContext`cov$, $CellContext`vary$}}]}}, ImageSize -> 300, 
               PlotRange -> {{(-1)/6, 7/6}, {(-1)/6, 7/6}}, PlotRangeClipping -> 
               True], 
              Plot[{{
                 $CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`A$$], 
                 $CellContext`Varx[$CellContext`\[Beta]$$, \
$CellContext`A$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "variance"}, PlotLegends -> {
                 Row[{"var ", 
                   Style["y", Italic]}], 
                 Row[{"var ", 
                   Style["x", Italic]}]}, PlotRange -> {{0, 2 Pi}, {0, 0.09}},
                PlotPoints -> ControlActive[9, Automatic], ImageSize -> 190, 
               Exclusions -> None, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Part[
                  ColorData[97, "ColorList"], 4]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 4], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`varx$}], 
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`vary$}]}]}]}]], 
      "Specifications" :> {{{$CellContext`\[Beta]$$, 0, "\[Beta]"}, 0, 6.28, 
         0.01, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         1}, {{$CellContext`A$$, 0.125, "area"}, 0.001, 1, 0.001, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`showParticles$$, False, "show particles"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[10], 
          Manipulate`Place[2], 
          Spacer[10], 
          Manipulate`Place[3]}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{577., {266., 271.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`x = (5 Sqrt[15/2])/(
        256 (((-7) Sqrt[15])/64 + ArcCos[7/8])), $CellContext`y = (5 
         Sqrt[15/2])/(
        256 (((-7) Sqrt[15])/64 + ArcCos[7/8])), $CellContext`mean = {
        0., -0.7050201618985664}, $CellContext`padding = {{30, 6}, {3, 
        20}}, $CellContext`imsize = 220, $CellContext`Meanx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{
           1 - $CellContext`A/2 - Tan[$CellContext`\[Beta]]^2/(
            24 $CellContext`A), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {
           1 - (1/3) Sqrt[2] Sqrt[$CellContext`A Tan[$CellContext`\[Beta]]], 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[2 $CellContext`A]]}, {
           1/2 + Cot[$CellContext`\[Beta]]/(12 $CellContext`A), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + ArcTan[2 $CellContext`A]]}, {(1/3) Sqrt[2] 
            Sqrt[(-$CellContext`A) Tan[$CellContext`\[Beta]]], 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {$CellContext`A/2 + 
            Tan[$CellContext`\[Beta]]^2/(24 $CellContext`A), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {(1/3) Sqrt[2] 
            Sqrt[$CellContext`A Tan[$CellContext`\[Beta]]], 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[2 $CellContext`A]]}, {
           1/2 - Cot[$CellContext`\[Beta]]/(12 $CellContext`A), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {
           1 - (1/3) Sqrt[2] 
            Sqrt[(-$CellContext`A) Tan[$CellContext`\[Beta]]], 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{
           1 - $CellContext`A/2 - Tan[$CellContext`\[Beta]]^2/(
            24 $CellContext`A), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 Pi]]}, {(3 + 
             2 Sqrt[2] ($CellContext`A - 1) 
              Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {(
             6 $CellContext`A + Cot[$CellContext`\[Beta]])/(
            12 $CellContext`A), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(-3 + 6 $CellContext`A - 2 
             Sqrt[2] ($CellContext`A - 1) 
             Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {$CellContext`A/2 + 
            Tan[$CellContext`\[Beta]]^2/(24 $CellContext`A), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[1/2, 1 - $CellContext`A]]}, {(-3 + 
             6 $CellContext`A + 
             2 (1 - $CellContext`A) Sqrt[2] 
              Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {
           1/2 - Cot[$CellContext`\[Beta]]/(12 $CellContext`A), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(3 + 
             2 Sqrt[2] ($CellContext`A - 1) 
              Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 1/
         2], $CellContext`\[Beta]$$ = Pi/4, $CellContext`Meany[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{(6 $CellContext`A + Tan[$CellContext`\[Beta]])/(
            12 $CellContext`A), 
            Or[
             Inequality[0, LessEqual, $CellContext`\[Beta], Less, 
              ArcTan[2 $CellContext`A]], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {
           1 - (1/3) Sqrt[2] Sqrt[$CellContext`A Cot[$CellContext`\[Beta]]], 
            ArcTan[2 $CellContext`A] <= $CellContext`\[Beta] <= 
            Pi/2 - ArcTan[2 $CellContext`A]}, {
           1 - $CellContext`A/2 - Cot[$CellContext`\[Beta]]^2/(
            24 $CellContext`A), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + ArcTan[2 $CellContext`A]]}, {
           1 - (1/3) Sqrt[2] 
            Sqrt[(-$CellContext`A) Cot[$CellContext`\[Beta]]], 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {
           1/2 - Tan[$CellContext`\[Beta]]/(12 $CellContext`A), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {(1/3) Sqrt[2] 
            Sqrt[$CellContext`A Cot[$CellContext`\[Beta]]], 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[
             2 $CellContext`A]]}, {$CellContext`A/2 + 
            Cot[$CellContext`\[Beta]]^2/(24 $CellContext`A), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {(1/3) Sqrt[2] 
            Sqrt[(-$CellContext`A) Cot[$CellContext`\[Beta]]], 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{(6 $CellContext`A + Tan[$CellContext`\[Beta]])/(
            12 $CellContext`A), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 Pi]]}, {(
             3 + ($CellContext`A - 1) 2 Sqrt[2] 
              Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {
           1 - $CellContext`A/2 - Cot[$CellContext`\[Beta]]^2/(
            24 $CellContext`A), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(3 - (1 - $CellContext`A) 2 
             Sqrt[2] Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {
           1/2 - Tan[$CellContext`\[Beta]]/(12 $CellContext`A), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[1/2, 1 - $CellContext`A]]}, {(-3 + 
             6 $CellContext`A + (1 - $CellContext`A) 2 Sqrt[2] 
              Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[
             1/2, 1 - $CellContext`A]]}, {$CellContext`A/2 + 
            Cot[$CellContext`\[Beta]]^2/(24 $CellContext`A), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(-3 + 
             6 $CellContext`A + (1 - $CellContext`A) 2 Sqrt[2] 
              Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]])/(
            6 $CellContext`A), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 1/
         2], $CellContext`Covxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{(1/288) 
            Tan[$CellContext`\[Beta]] (-12 + 
             Tan[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {-($CellContext`A/18), 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[2 $CellContext`A]]}, {(1/288) 
            Cot[$CellContext`\[Beta]] (-12 + 
             Cot[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + ArcTan[2 $CellContext`A]]}, {$CellContext`A/18, 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {(1/288) 
            Tan[$CellContext`\[Beta]] (-12 + 
             Tan[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {-($CellContext`A/
             18), 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[2 $CellContext`A]]}, {(1/288) 
            Cot[$CellContext`\[Beta]] (-12 + 
             Cot[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {$CellContext`A/18, 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{(1/288) 
            Tan[$CellContext`\[Beta]] (-12 + 
             Tan[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 
              Pi]]}, {(($CellContext`A - 
              1) ((-6) Sqrt[2 - 2 $CellContext`A] Sqrt[
                 Tan[$CellContext`\[Beta]]] + (17 + 
               2 (-5 + $CellContext`A) $CellContext`A) - 6 
              Sqrt[2 - 2 $CellContext`A] Sqrt[
                Cot[$CellContext`\[Beta]]]))/(36 $CellContext`A^2), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {(1/288) 
            Cot[$CellContext`\[Beta]] (-12 + 
             Cot[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(($CellContext`A - 1) (-17 - 
              2 (-5 + $CellContext`A) $CellContext`A + 
              6 Sqrt[2] (Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]] + 
                Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {(1/288) 
            Tan[$CellContext`\[Beta]] (-12 + 
             Tan[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(($CellContext`A - 
              1) ((-6) Sqrt[2 - 2 $CellContext`A] Sqrt[
                 Tan[$CellContext`\[Beta]]] + (17 + 
               2 (-5 + $CellContext`A) $CellContext`A) - 6 
              Sqrt[2 - 2 $CellContext`A] Sqrt[
                Cot[$CellContext`\[Beta]]]))/(36 $CellContext`A^2), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {(1/288)
              Cot[$CellContext`\[Beta]] (-12 + 
             Cot[$CellContext`\[Beta]]^2/$CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(($CellContext`A - 1) (-17 - 
              2 (-5 + $CellContext`A) $CellContext`A + 
              6 Sqrt[2] (Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]] + 
                Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 
         0], $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[
         0.604]] := ((((-16) (-2 + FE`h$$18)^3) 
            FE`h$$18^3 + (
             9 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])) (-
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + (Sqrt[-2 + FE`h$$18] 
               FE`h$$18^(3/2)) (5 + (2 (-3 + FE`h$$18)) FE`h$$18) + 
             ArcCosh[1 - FE`h$$18])) Cos[$CellContext`\[Beta]$]^2)/(
         36 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
           Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])^2) + ((
           I ((I Sqrt[(2 - FE`h$$18) FE`h$$18]) (3 + 
              FE`h$$18 (1 + (2 (-3 + FE`h$$18)) FE`h$$18)) - 3 
            ArcCosh[1 - FE`h$$18])) Sin[$CellContext`\[Beta]$]^2)/(
         12 (-Sqrt[(2 - FE`h$$18) FE`h$$18] + Sqrt[(2 - FE`h$$18) FE`h$$18^3] + 
          ArcCos[1 - FE`h$$18])), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[-0.5]] := (((FE`h$$307 (5 - 2 FE`h$$307^2)) 
            Sqrt[1 - FE`h$$307^2] + 3 Pi - 3 ArcCos[FE`h$$307]) 
          Cos[$CellContext`\[Beta]$]^2)/(
         6 ((2 FE`h$$307) Sqrt[1 - FE`h$$307^2] + Pi + 
          2 ArcSin[FE`h$$307])) + ((
           16 (-1 + FE`h$$307^2)^3 + (
             9 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
              FE`h$$307])) ((FE`h$$307 Sqrt[1 - FE`h$$307^2]) (-1 + 
               2 FE`h$$307^2) + Pi - ArcCos[FE`h$$307])) 
          Sin[$CellContext`\[Beta]$]^2)/(
         36 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
           FE`h$$307])^2), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.5]] := $CellContext`VarXh[FE`h$$233] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$233] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.001]] := $CellContext`VarXh[FE`h$$138] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$138] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.463]] := $CellContext`VarXh[FE`h$$141] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$141] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{(1/576) (48 $CellContext`A^2 + 
             24 Tan[$CellContext`\[Beta]]^2 - 
             Tan[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {(1/9) $CellContext`A 
            Tan[$CellContext`\[Beta]], 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[2 $CellContext`A]]}, {
           1/12 - Cot[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + 
             ArcTan[2 $CellContext`A]]}, {(-(1/9)) $CellContext`A 
            Tan[$CellContext`\[Beta]], 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {(1/576) (
             48 $CellContext`A^2 + 24 Tan[$CellContext`\[Beta]]^2 - 
             Tan[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {(1/
             9) $CellContext`A Tan[$CellContext`\[Beta]], 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[2 $CellContext`A]]}, {
           1/12 - Cot[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {(-(1/9)) $CellContext`A 
            Tan[$CellContext`\[Beta]], 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{(1/576) (48 $CellContext`A^2 + 
             24 Tan[$CellContext`\[Beta]]^2 - 
             Tan[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 
              Pi]]}, {((-4) ($CellContext`A - 1)^2 (2 + $CellContext`A) 
              Tan[$CellContext`\[Beta]] + 
             3 (-3 + 4 Sqrt[2] 
                Sqrt[(1 - $CellContext`A) 
                  Tan[$CellContext`\[Beta]]] + $CellContext`A (4 - 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {
           1/12 - Cot[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(
             4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
              Tan[$CellContext`\[Beta]] - 
             3 (3 - 4 Sqrt[2] 
              Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]] + 
              4 $CellContext`A (-1 + 
                Sqrt[2] 
                 Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {(1/576) (48 $CellContext`A^2 + 
             24 Tan[$CellContext`\[Beta]]^2 - 
             Tan[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + 
             ArcTan[1/2, 
               1 - $CellContext`A]]}, {((-4) ($CellContext`A - 1)^2 (
               2 + $CellContext`A) Tan[$CellContext`\[Beta]] + 
             3 (-3 + 4 Sqrt[2] 
                Sqrt[(1 - $CellContext`A) 
                  Tan[$CellContext`\[Beta]]] + $CellContext`A (4 - 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {
           1/12 - Cot[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(
             4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
              Tan[$CellContext`\[Beta]] - 
             3 (3 - 4 Sqrt[2] 
              Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]] + 
              4 $CellContext`A (-1 + 
                Sqrt[2] 
                 Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])))/(
            36 $CellContext`A^2), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 1/12], 
       Attributes[$CellContext`\[Beta]$] = {Temporary}, FE`h$$18 = 0.604, 
       FE`h$$307 = -0.5, $CellContext`VarXh[
         Blank[
         0.5]] := (((-16) (-2 + FE`h$$27)^3) 
          FE`h$$27^3 + (
           9 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + ArcCosh[1 - FE`h$$27])) (-
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + (Sqrt[-2 + FE`h$$27] 
             FE`h$$27^(3/2)) (5 + (2 (-3 + FE`h$$27)) FE`h$$27) + 
           ArcCosh[1 - FE`h$$27]))/(
        36 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
          Sqrt[(-2 + FE`h$$27) FE`h$$27] + 
          ArcCosh[1 - FE`h$$27])^2), $CellContext`VarXh[
         Blank[
         0.001]] := (((-16) (-2 + FE`h$$138)^3) 
          FE`h$$138^3 + (
           9 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + ArcCosh[1 - FE`h$$138])) (-
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + (Sqrt[-2 + FE`h$$138] 
             FE`h$$138^(3/2)) (5 + (2 (-3 + FE`h$$138)) FE`h$$138) + 
           ArcCosh[1 - FE`h$$138]))/(
        36 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
          Sqrt[(-2 + FE`h$$138) FE`h$$138] + 
          ArcCosh[1 - FE`h$$138])^2), $CellContext`VarXh[
         Blank[
         0.463]] := (((-16) (-2 + FE`h$$141)^3) 
          FE`h$$141^3 + (
           9 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + ArcCosh[1 - FE`h$$141])) (-
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + (Sqrt[-2 + FE`h$$141] 
             FE`h$$141^(3/2)) (5 + (2 (-3 + FE`h$$141)) FE`h$$141) + 
           ArcCosh[1 - FE`h$$141]))/(
        36 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
          Sqrt[(-2 + FE`h$$141) FE`h$$141] + 
          ArcCosh[1 - FE`h$$141])^2), $CellContext`VarXh[
         Pattern[$CellContext`h, 
          Blank[]]] := (64 (-2 + $CellContext`h)^3 $CellContext`h^3 + 
         9 ((-1 + $CellContext`h) 
            Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
           ArcCos[1 - $CellContext`h]) (4 ArcCos[1 - $CellContext`h] + 
           Sin[4 ArcSin[1 - $CellContext`h]]))/(
        144 ((-1 + $CellContext`h) 
           Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
          ArcCos[1 - $CellContext`h])^2), FE`h$$27 = 0.5, FE`h$$138 = 0.463, 
       FE`h$$141 = 0.463, FE`h$$233 = 0.5, $CellContext`VarYh[
         Blank[0.5]] := (
         I ((I Sqrt[(-(-2 + FE`h$$27)) FE`h$$27]) (3 + 
            FE`h$$27 (1 + (2 (-3 + FE`h$$27)) FE`h$$27)) - 3 
          ArcCosh[1 - FE`h$$27]))/(
        12 (-Sqrt[(2 - FE`h$$27) FE`h$$27] + 
         Sqrt[(-(-2 + FE`h$$27)) FE`h$$27^3] + 
         ArcCos[1 - FE`h$$27])), $CellContext`VarYh[
         Blank[0.001]] := (
         I ((I Sqrt[(-(-2 + FE`h$$138)) FE`h$$138]) (3 + 
            FE`h$$138 (1 + (2 (-3 + FE`h$$138)) FE`h$$138)) - 3 
          ArcCosh[1 - FE`h$$138]))/(
        12 (-Sqrt[(2 - FE`h$$138) FE`h$$138] + 
         Sqrt[(-(-2 + FE`h$$138)) FE`h$$138^3] + 
         ArcCos[1 - FE`h$$138])), $CellContext`VarYh[
         Blank[0.463]] := (
         I ((I Sqrt[(-(-2 + FE`h$$141)) FE`h$$141]) (3 + 
            FE`h$$141 (1 + (2 (-3 + FE`h$$141)) FE`h$$141)) - 3 
          ArcCosh[1 - FE`h$$141]))/(
        12 (-Sqrt[(2 - FE`h$$141) FE`h$$141] + 
         Sqrt[(-(-2 + FE`h$$141)) FE`h$$141^3] + 
         ArcCos[1 - FE`h$$141])), $CellContext`VarYh[
         Pattern[$CellContext`h, 
          Blank[]]] := (12 ArcCos[1 - $CellContext`h] - 8 
         Sin[2 ArcCos[1 - $CellContext`h]] + 
         Sin[4 ArcCos[1 - $CellContext`h]])/(
        48 ((-1 + $CellContext`h) 
          Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
         ArcCos[1 - $CellContext`h])), $CellContext`Vary[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{
           1/12 - Tan[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {(1/9) $CellContext`A 
            Cot[$CellContext`\[Beta]], 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[2 $CellContext`A]]}, {(1/576) (48 $CellContext`A^2 + 
             24 Cot[$CellContext`\[Beta]]^2 - 
             Cot[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + 
             ArcTan[2 $CellContext`A]]}, {(-(1/9)) $CellContext`A 
            Cot[$CellContext`\[Beta]], 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {
           1/12 - Tan[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {(1/
             9) $CellContext`A Cot[$CellContext`\[Beta]], 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[2 $CellContext`A]]}, {(1/576) (
             48 $CellContext`A^2 + 24 Cot[$CellContext`\[Beta]]^2 - 
             Cot[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {(-(1/9)) $CellContext`A 
            Cot[$CellContext`\[Beta]], 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{
           1/12 - Tan[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 
              Pi]]}, {((-4) (1 - $CellContext`A)^2 (2 + $CellContext`A) 
              Cot[$CellContext`\[Beta]] - 9 + 
             12 $CellContext`A + (1 - $CellContext`A) (12 Sqrt[2] 
               Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]]))/(
            36 $CellContext`A^2), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {(1/576) (
             48 $CellContext`A^2 + 24 Cot[$CellContext`\[Beta]]^2 - 
             Cot[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(
             4 (1 - $CellContext`A)^2 (2 + $CellContext`A) 
              Cot[$CellContext`\[Beta]] - 9 + 
             12 $CellContext`A + (1 - $CellContext`A) (12 Sqrt[2] 
               Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]]))/(
            36 $CellContext`A^2), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {
           1/12 - Tan[$CellContext`\[Beta]]^2/(144 $CellContext`A^2), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + 
             ArcTan[1/2, 
               1 - $CellContext`A]]}, {((-4) ($CellContext`A - 1)^2 (
               2 + $CellContext`A) Cot[$CellContext`\[Beta]] - 9 + 
             12 $CellContext`A + 
             3 (1 - $CellContext`A) (4 Sqrt[2] 
               Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]]))/(
            36 $CellContext`A^2), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {(1/
             576) (48 $CellContext`A^2 + 24 Cot[$CellContext`\[Beta]]^2 - 
             Cot[$CellContext`\[Beta]]^4/$CellContext`A^2), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {(
             4 (1 - $CellContext`A)^2 (2 + $CellContext`A) 
              Cot[$CellContext`\[Beta]] - 9 + 
             12 $CellContext`A + (1 - $CellContext`A) (12 Sqrt[2] 
               Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]]))/(
            36 $CellContext`A^2), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 1/
         12], $CellContext`RobotRegion[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{{{1, 0}, {1, 1}, {
             1 - $CellContext`A - (1/2) Tan[$CellContext`\[Beta]], 1}, {
             1 - $CellContext`A + (1/2) Tan[$CellContext`\[Beta]], 0}}, 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {{{1, 1}, {
             1 - Sqrt[2] Sqrt[$CellContext`A Tan[$CellContext`\[Beta]]], 1}, {
             1, 1 - Sqrt[2] Sqrt[$CellContext`A Cot[$CellContext`\[Beta]]]}}, 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[2 $CellContext`A]]}, {{{1, 1}, {0, 1}, {
             0, 1 - $CellContext`A + Cot[$CellContext`\[Beta]]/2}, {
             1, 1 - $CellContext`A - Cot[$CellContext`\[Beta]]/2}}, 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + ArcTan[2 $CellContext`A]]}, {{{0, 1}, {
             Sqrt[2] Sqrt[(-$CellContext`A) Tan[$CellContext`\[Beta]]], 1}, {
             0, 1 - Sqrt[2] 
              Sqrt[(-$CellContext`A) Cot[$CellContext`\[Beta]]]}}, 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[2 $CellContext`A]]}, {{{0, 0}, {0, 
             1}, {$CellContext`A - Tan[$CellContext`\[Beta]]/2, 
              1}, {$CellContext`A + Tan[$CellContext`\[Beta]]/2, 0}}, 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {{{0, 0}, {
             0, Sqrt[2] Sqrt[$CellContext`A Cot[$CellContext`\[Beta]]]}, {
             Sqrt[2] Sqrt[$CellContext`A Tan[$CellContext`\[Beta]]], 0}}, 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[2 $CellContext`A]]}, {{{0, 0}, {1, 
             0}, {1, $CellContext`A - Cot[$CellContext`\[Beta]]/2}, {
             0, $CellContext`A + Cot[$CellContext`\[Beta]]/2}}, 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {{{1, 0}, {
             1 - Sqrt[2] Sqrt[(-$CellContext`A) Tan[$CellContext`\[Beta]]], 
              0}, {1, Sqrt[2] 
              Sqrt[(-$CellContext`A) Cot[$CellContext`\[Beta]]]}}, 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{{{1, 0}, {1, 
             1}, {(1 - $CellContext`A) - Tan[$CellContext`\[Beta]]/2, 
              1}, {(1 - $CellContext`A) + Tan[$CellContext`\[Beta]]/2, 0}}, 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 Pi]]}, {{{1, 0}, {1, 
             1}, {0, 1}, {
             0, Sqrt[2] 
              Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]]}, {
             Sqrt[2] Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]], 
              0}}, 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {{{0, 1}, {
             1, 1}, {1, (1 - $CellContext`A) - Cot[$CellContext`\[Beta]]/2}, {
             0, (1 - $CellContext`A) + Cot[$CellContext`\[Beta]]/2}}, 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {{{1, 1}, {0, 1}, {0, 0}, {
             1 - Sqrt[2] 
              Sqrt[(-(1 - $CellContext`A)) Tan[$CellContext`\[Beta]]], 0}, {
             1, Sqrt[2] 
              Sqrt[(-(1 - $CellContext`A)) Cot[$CellContext`\[Beta]]]}}, 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {{{0, 0}, {0, 1}, {
             1 - (1 - $CellContext`A) - (1/2) Tan[$CellContext`\[Beta]], 1}, {
             1 - (1 - $CellContext`A) + (1/2) Tan[$CellContext`\[Beta]], 0}}, 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[1/2, 1 - $CellContext`A]]}, {{{1, 0}, {0, 
             0}, {0, 1}, {
             1 - Sqrt[2] Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]],
               1}, {1, 1 - Sqrt[2] 
              Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]]}}, 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A]]}, {{{1, 
             0}, {0, 0}, {
             0, 1 - (1 - $CellContext`A) + Cot[$CellContext`\[Beta]]/2}, {
             1, 1 - (1 - $CellContext`A) - Cot[$CellContext`\[Beta]]/2}}, 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {{{0, 0}, {1, 0}, {1, 1}, {
             Sqrt[2] Sqrt[(-(1 - $CellContext`A)) Tan[$CellContext`\[Beta]]], 
              1}, {0, 1 - Sqrt[2] 
              Sqrt[(-(1 - $CellContext`A)) Cot[$CellContext`\[Beta]]]}}, 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, {{1, 0}, {0, 
         0}, {0, 1}, {1, 1}}], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`Corxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`A, 
          Blank[]]] := Which[$CellContext`A <= 1/2, 
         Piecewise[{{-((Tan[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Tan[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Tan[$CellContext`\[Beta]]^2 - 
              Tan[$CellContext`\[Beta]]^4]), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[2 $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
              LessEqual, 2 Pi]]}, {-(1/2), 
            Inequality[
             ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], LessEqual, 
             Pi/2 - ArcTan[
             2 $CellContext`A]]}, {-((Cot[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Cot[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Cot[$CellContext`\[Beta]]^2 - 
              Cot[$CellContext`\[Beta]]^4]), 
            Inequality[
            Pi/2 - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 + ArcTan[2 $CellContext`A]]}, {1/2, 
            Inequality[
            Pi/2 + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi - ArcTan[
             2 $CellContext`A]]}, {-((Tan[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Tan[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Tan[$CellContext`\[Beta]]^2 - 
              Tan[$CellContext`\[Beta]]^4]), 
            Inequality[
            Pi - ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + ArcTan[2 $CellContext`A]]}, {-(1/2), 
            Inequality[
            Pi + ArcTan[2 $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[
             2 $CellContext`A]]}, {-((Cot[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Cot[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Cot[$CellContext`\[Beta]]^2 - 
              Cot[$CellContext`\[Beta]]^4]), 
            
            Inequality[(3 Pi)/2 - ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[2 $CellContext`A]]}, {1/2, 
            
            Inequality[(3 Pi)/2 + ArcTan[2 $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             2 $CellContext`A]]}}], 1/2 < $CellContext`A < 1, 
         Piecewise[{{-((Tan[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Tan[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Tan[$CellContext`\[Beta]]^2 - 
              Tan[$CellContext`\[Beta]]^4]), 
            Or[0 <= $CellContext`\[Beta] <= ArcTan[1/2, 1 - $CellContext`A], 
             Inequality[
             2 Pi - ArcTan[1/2, 1 - $CellContext`A], 
              Less, $CellContext`\[Beta], LessEqual, 2 
              Pi]]}, {((-1 + $CellContext`A) (17 + 
              2 (-5 + $CellContext`A) $CellContext`A - 6 
              Sqrt[2] (Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]] + 
               Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])))/(
            Sqrt[(-4) (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
               Cot[$CellContext`\[Beta]] + 
              3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]])] 
            Sqrt[(-4) (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
               Tan[$CellContext`\[Beta]] + 
              3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])]), 
            Inequality[
             ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi/2 - ArcTan[
             1/2, 1 - $CellContext`A]]}, {-((Cot[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Cot[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Cot[$CellContext`\[Beta]]^2 - 
              Cot[$CellContext`\[Beta]]^4]), 
            Inequality[
            Pi/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {-(((-1 + $CellContext`A) (17 + 
               2 (-5 + $CellContext`A) $CellContext`A - 6 Sqrt[2] 
               Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]] - 6 
               Sqrt[2] 
               Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]]))/(
             Sqrt[4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
                Cot[$CellContext`\[Beta]] + 
               3 (-3 + 4 $CellContext`A + 
                 4 (1 - $CellContext`A) Sqrt[2] 
                  Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]])] 
             Sqrt[4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
                Tan[$CellContext`\[Beta]] + 
               3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                  Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])])), 
            Inequality[
            Pi/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}, {-((Tan[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Tan[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Tan[$CellContext`\[Beta]]^2 - 
              Tan[$CellContext`\[Beta]]^4]), 
            Inequality[
            Pi - ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, Pi + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {((-1 + $CellContext`A) (17 + 
              2 (-5 + $CellContext`A) $CellContext`A - 6 
              Sqrt[2] (Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]] + 
               Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])))/(
            Sqrt[(-4) (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
               Cot[$CellContext`\[Beta]] + 
              3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Cot[$CellContext`\[Beta]]])] 
            Sqrt[(-4) (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
               Tan[$CellContext`\[Beta]] + 
              3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                 Sqrt[(1 - $CellContext`A) Tan[$CellContext`\[Beta]]])]), 
            Inequality[
            Pi + ArcTan[1/2, 1 - $CellContext`A], Less, $CellContext`\[Beta], 
             LessEqual, (3 Pi)/2 - ArcTan[
             1/2, 1 - $CellContext`A]]}, {-((Cot[$CellContext`\[Beta]] 
              Sqrt[12 $CellContext`A^2 - Cot[$CellContext`\[Beta]]^2])/Sqrt[
             48 $CellContext`A^4 + 
              24 $CellContext`A^2 Cot[$CellContext`\[Beta]]^2 - 
              Cot[$CellContext`\[Beta]]^4]), 
            
            Inequality[(3 Pi)/2 - ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, (3 Pi)/2 + 
             ArcTan[1/2, 1 - $CellContext`A]]}, {-(((-1 + $CellContext`A) (17 + 
               2 (-5 + $CellContext`A) $CellContext`A - 6 Sqrt[2] 
               Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]] - 6 
               Sqrt[2] 
               Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]]))/(
             Sqrt[4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
                Cot[$CellContext`\[Beta]] + 
               3 (-3 + 4 $CellContext`A + 
                 4 (1 - $CellContext`A) Sqrt[2] 
                  Sqrt[($CellContext`A - 1) Cot[$CellContext`\[Beta]]])] 
             Sqrt[4 (-1 + $CellContext`A)^2 (2 + $CellContext`A) 
                Tan[$CellContext`\[Beta]] + 
               3 (-3 + 4 $CellContext`A + (1 - $CellContext`A) 4 Sqrt[2] 
                  Sqrt[($CellContext`A - 1) Tan[$CellContext`\[Beta]]])])), 
            
            Inequality[(3 Pi)/2 + ArcTan[1/2, 1 - $CellContext`A], 
             Less, $CellContext`\[Beta], LessEqual, 2 Pi - ArcTan[
             1/2, 1 - $CellContext`A]]}}], $CellContext`A == 1, 
         0], $CellContext`swarmPts = {{1/68, 1/102}, {
         1/204, (1/2 + Sqrt[3]/2)/51}, {1/68, (1/2 + Sqrt[3])/51}, {
         1/204, (1/2 + (3 Sqrt[3])/2)/51}, {1/68, (1/2 + 2 Sqrt[3])/51}, {
         1/204, (1/2 + (5 Sqrt[3])/2)/51}, {1/68, (1/2 + 3 Sqrt[3])/51}, {
         1/204, (1/2 + (7 Sqrt[3])/2)/51}, {1/68, (1/2 + 4 Sqrt[3])/51}, {
         1/204, (1/2 + (9 Sqrt[3])/2)/51}, {1/68, (1/2 + 5 Sqrt[3])/51}, {
         1/204, (1/2 + (11 Sqrt[3])/2)/51}, {1/68, (1/2 + 6 Sqrt[3])/51}, {
         1/204, (1/2 + (13 Sqrt[3])/2)/51}, {1/68, (1/2 + 7 Sqrt[3])/51}, {
         1/204, (1/2 + (15 Sqrt[3])/2)/51}, {1/68, (1/2 + 8 Sqrt[3])/51}, {
         1/204, (1/2 + (17 Sqrt[3])/2)/51}, {1/68, (1/2 + 9 Sqrt[3])/51}, {
         1/204, (1/2 + (19 Sqrt[3])/2)/51}, {1/68, (1/2 + 10 Sqrt[3])/51}, {
         1/204, (1/2 + (21 Sqrt[3])/2)/51}, {1/68, (1/2 + 11 Sqrt[3])/51}, {
         1/204, (1/2 + (23 Sqrt[3])/2)/51}, {1/68, (1/2 + 12 Sqrt[3])/51}, {
         1/204, (1/2 + (25 Sqrt[3])/2)/51}, {1/68, (1/2 + 13 Sqrt[3])/51}, {
         1/204, (1/2 + (27 Sqrt[3])/2)/51}, {1/68, (1/2 + 14 Sqrt[3])/51}, {
         1/204, (1/2 + (29 Sqrt[3])/2)/51}, {1/68, (1/2 + 15 Sqrt[3])/51}, {
         1/204, (1/2 + (31 Sqrt[3])/2)/51}, {1/68, (1/2 + 16 Sqrt[3])/51}, {
         1/204, (1/2 + (33 Sqrt[3])/2)/51}, {1/68, (1/2 + 17 Sqrt[3])/51}, {
         1/204, (1/2 + (35 Sqrt[3])/2)/51}, {1/68, (1/2 + 18 Sqrt[3])/51}, {
         1/204, (1/2 + (37 Sqrt[3])/2)/51}, {1/68, (1/2 + 19 Sqrt[3])/51}, {
         1/204, (1/2 + (39 Sqrt[3])/2)/51}, {1/68, (1/2 + 20 Sqrt[3])/51}, {
         1/204, (1/2 + (41 Sqrt[3])/2)/51}, {1/68, (1/2 + 21 Sqrt[3])/51}, {
         1/204, (1/2 + (43 Sqrt[3])/2)/51}, {1/68, (1/2 + 22 Sqrt[3])/51}, {
         1/204, (1/2 + (45 Sqrt[3])/2)/51}, {1/68, (1/2 + 23 Sqrt[3])/51}, {
         1/204, (1/2 + (47 Sqrt[3])/2)/51}, {1/68, (1/2 + 24 Sqrt[3])/51}, {
         1/204, (1/2 + (49 Sqrt[3])/2)/51}, {1/68, (1/2 + 25 Sqrt[3])/51}, {
         1/204, (1/2 + (51 Sqrt[3])/2)/51}, {1/68, (1/2 + 26 Sqrt[3])/51}, {
         1/204, (1/2 + (53 Sqrt[3])/2)/51}, {1/68, (1/2 + 27 Sqrt[3])/51}, {
         1/204, (1/2 + (55 Sqrt[3])/2)/51}, {1/68, (1/2 + 28 Sqrt[3])/51}, {
         1/204, (1/2 + (57 Sqrt[3])/2)/51}, {1/68, (1/2 + 29 Sqrt[3])/51}, {
         7/204, 1/102}, {5/204, (1/2 + Sqrt[3]/2)/51}, {
         7/204, (1/2 + Sqrt[3])/51}, {5/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 2 Sqrt[3])/51}, {5/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 3 Sqrt[3])/51}, {5/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 4 Sqrt[3])/51}, {5/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 5 Sqrt[3])/51}, {5/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 6 Sqrt[3])/51}, {5/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 7 Sqrt[3])/51}, {5/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 8 Sqrt[3])/51}, {5/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 9 Sqrt[3])/51}, {5/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 10 Sqrt[3])/51}, {5/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 11 Sqrt[3])/51}, {5/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 12 Sqrt[3])/51}, {5/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 13 Sqrt[3])/51}, {5/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 14 Sqrt[3])/51}, {5/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 15 Sqrt[3])/51}, {5/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 16 Sqrt[3])/51}, {5/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 17 Sqrt[3])/51}, {5/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 18 Sqrt[3])/51}, {5/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 19 Sqrt[3])/51}, {5/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 20 Sqrt[3])/51}, {5/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 21 Sqrt[3])/51}, {5/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 22 Sqrt[3])/51}, {5/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 23 Sqrt[3])/51}, {5/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 24 Sqrt[3])/51}, {5/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 25 Sqrt[3])/51}, {5/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 26 Sqrt[3])/51}, {5/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 27 Sqrt[3])/51}, {5/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 28 Sqrt[3])/51}, {5/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         7/204, (1/2 + 29 Sqrt[3])/51}, {11/204, 1/102}, {
         3/68, (1/2 + Sqrt[3]/2)/51}, {11/204, (1/2 + Sqrt[3])/51}, {
         3/68, (1/2 + (3 Sqrt[3])/2)/51}, {11/204, (1/2 + 2 Sqrt[3])/51}, {
         3/68, (1/2 + (5 Sqrt[3])/2)/51}, {11/204, (1/2 + 3 Sqrt[3])/51}, {
         3/68, (1/2 + (7 Sqrt[3])/2)/51}, {11/204, (1/2 + 4 Sqrt[3])/51}, {
         3/68, (1/2 + (9 Sqrt[3])/2)/51}, {11/204, (1/2 + 5 Sqrt[3])/51}, {
         3/68, (1/2 + (11 Sqrt[3])/2)/51}, {11/204, (1/2 + 6 Sqrt[3])/51}, {
         3/68, (1/2 + (13 Sqrt[3])/2)/51}, {11/204, (1/2 + 7 Sqrt[3])/51}, {
         3/68, (1/2 + (15 Sqrt[3])/2)/51}, {11/204, (1/2 + 8 Sqrt[3])/51}, {
         3/68, (1/2 + (17 Sqrt[3])/2)/51}, {11/204, (1/2 + 9 Sqrt[3])/51}, {
         3/68, (1/2 + (19 Sqrt[3])/2)/51}, {11/204, (1/2 + 10 Sqrt[3])/51}, {
         3/68, (1/2 + (21 Sqrt[3])/2)/51}, {11/204, (1/2 + 11 Sqrt[3])/51}, {
         3/68, (1/2 + (23 Sqrt[3])/2)/51}, {11/204, (1/2 + 12 Sqrt[3])/51}, {
         3/68, (1/2 + (25 Sqrt[3])/2)/51}, {11/204, (1/2 + 13 Sqrt[3])/51}, {
         3/68, (1/2 + (27 Sqrt[3])/2)/51}, {11/204, (1/2 + 14 Sqrt[3])/51}, {
         3/68, (1/2 + (29 Sqrt[3])/2)/51}, {11/204, (1/2 + 15 Sqrt[3])/51}, {
         3/68, (1/2 + (31 Sqrt[3])/2)/51}, {11/204, (1/2 + 16 Sqrt[3])/51}, {
         3/68, (1/2 + (33 Sqrt[3])/2)/51}, {11/204, (1/2 + 17 Sqrt[3])/51}, {
         3/68, (1/2 + (35 Sqrt[3])/2)/51}, {11/204, (1/2 + 18 Sqrt[3])/51}, {
         3/68, (1/2 + (37 Sqrt[3])/2)/51}, {11/204, (1/2 + 19 Sqrt[3])/51}, {
         3/68, (1/2 + (39 Sqrt[3])/2)/51}, {11/204, (1/2 + 20 Sqrt[3])/51}, {
         3/68, (1/2 + (41 Sqrt[3])/2)/51}, {11/204, (1/2 + 21 Sqrt[3])/51}, {
         3/68, (1/2 + (43 Sqrt[3])/2)/51}, {11/204, (1/2 + 22 Sqrt[3])/51}, {
         3/68, (1/2 + (45 Sqrt[3])/2)/51}, {11/204, (1/2 + 23 Sqrt[3])/51}, {
         3/68, (1/2 + (47 Sqrt[3])/2)/51}, {11/204, (1/2 + 24 Sqrt[3])/51}, {
         3/68, (1/2 + (49 Sqrt[3])/2)/51}, {11/204, (1/2 + 25 Sqrt[3])/51}, {
         3/68, (1/2 + (51 Sqrt[3])/2)/51}, {11/204, (1/2 + 26 Sqrt[3])/51}, {
         3/68, (1/2 + (53 Sqrt[3])/2)/51}, {11/204, (1/2 + 27 Sqrt[3])/51}, {
         3/68, (1/2 + (55 Sqrt[3])/2)/51}, {11/204, (1/2 + 28 Sqrt[3])/51}, {
         3/68, (1/2 + (57 Sqrt[3])/2)/51}, {11/204, (1/2 + 29 Sqrt[3])/51}, {
         5/68, 1/102}, {13/204, (1/2 + Sqrt[3]/2)/51}, {
         5/68, (1/2 + Sqrt[3])/51}, {13/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 2 Sqrt[3])/51}, {13/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 3 Sqrt[3])/51}, {13/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 4 Sqrt[3])/51}, {13/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 5 Sqrt[3])/51}, {13/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 6 Sqrt[3])/51}, {13/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 7 Sqrt[3])/51}, {13/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 8 Sqrt[3])/51}, {13/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 9 Sqrt[3])/51}, {13/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 10 Sqrt[3])/51}, {13/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 11 Sqrt[3])/51}, {13/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 12 Sqrt[3])/51}, {13/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 13 Sqrt[3])/51}, {13/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 14 Sqrt[3])/51}, {13/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 15 Sqrt[3])/51}, {13/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 16 Sqrt[3])/51}, {13/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 17 Sqrt[3])/51}, {13/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 18 Sqrt[3])/51}, {13/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 19 Sqrt[3])/51}, {13/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 20 Sqrt[3])/51}, {13/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 21 Sqrt[3])/51}, {13/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 22 Sqrt[3])/51}, {13/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 23 Sqrt[3])/51}, {13/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 24 Sqrt[3])/51}, {13/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 25 Sqrt[3])/51}, {13/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 26 Sqrt[3])/51}, {13/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 27 Sqrt[3])/51}, {13/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 28 Sqrt[3])/51}, {13/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         5/68, (1/2 + 29 Sqrt[3])/51}, {19/204, 1/102}, {
         1/12, (1/2 + Sqrt[3]/2)/51}, {19/204, (1/2 + Sqrt[3])/51}, {
         1/12, (1/2 + (3 Sqrt[3])/2)/51}, {19/204, (1/2 + 2 Sqrt[3])/51}, {
         1/12, (1/2 + (5 Sqrt[3])/2)/51}, {19/204, (1/2 + 3 Sqrt[3])/51}, {
         1/12, (1/2 + (7 Sqrt[3])/2)/51}, {19/204, (1/2 + 4 Sqrt[3])/51}, {
         1/12, (1/2 + (9 Sqrt[3])/2)/51}, {19/204, (1/2 + 5 Sqrt[3])/51}, {
         1/12, (1/2 + (11 Sqrt[3])/2)/51}, {19/204, (1/2 + 6 Sqrt[3])/51}, {
         1/12, (1/2 + (13 Sqrt[3])/2)/51}, {19/204, (1/2 + 7 Sqrt[3])/51}, {
         1/12, (1/2 + (15 Sqrt[3])/2)/51}, {19/204, (1/2 + 8 Sqrt[3])/51}, {
         1/12, (1/2 + (17 Sqrt[3])/2)/51}, {19/204, (1/2 + 9 Sqrt[3])/51}, {
         1/12, (1/2 + (19 Sqrt[3])/2)/51}, {19/204, (1/2 + 10 Sqrt[3])/51}, {
         1/12, (1/2 + (21 Sqrt[3])/2)/51}, {19/204, (1/2 + 11 Sqrt[3])/51}, {
         1/12, (1/2 + (23 Sqrt[3])/2)/51}, {19/204, (1/2 + 12 Sqrt[3])/51}, {
         1/12, (1/2 + (25 Sqrt[3])/2)/51}, {19/204, (1/2 + 13 Sqrt[3])/51}, {
         1/12, (1/2 + (27 Sqrt[3])/2)/51}, {19/204, (1/2 + 14 Sqrt[3])/51}, {
         1/12, (1/2 + (29 Sqrt[3])/2)/51}, {19/204, (1/2 + 15 Sqrt[3])/51}, {
         1/12, (1/2 + (31 Sqrt[3])/2)/51}, {19/204, (1/2 + 16 Sqrt[3])/51}, {
         1/12, (1/2 + (33 Sqrt[3])/2)/51}, {19/204, (1/2 + 17 Sqrt[3])/51}, {
         1/12, (1/2 + (35 Sqrt[3])/2)/51}, {19/204, (1/2 + 18 Sqrt[3])/51}, {
         1/12, (1/2 + (37 Sqrt[3])/2)/51}, {19/204, (1/2 + 19 Sqrt[3])/51}, {
         1/12, (1/2 + (39 Sqrt[3])/2)/51}, {19/204, (1/2 + 20 Sqrt[3])/51}, {
         1/12, (1/2 + (41 Sqrt[3])/2)/51}, {19/204, (1/2 + 21 Sqrt[3])/51}, {
         1/12, (1/2 + (43 Sqrt[3])/2)/51}, {19/204, (1/2 + 22 Sqrt[3])/51}, {
         1/12, (1/2 + (45 Sqrt[3])/2)/51}, {19/204, (1/2 + 23 Sqrt[3])/51}, {
         1/12, (1/2 + (47 Sqrt[3])/2)/51}, {19/204, (1/2 + 24 Sqrt[3])/51}, {
         1/12, (1/2 + (49 Sqrt[3])/2)/51}, {19/204, (1/2 + 25 Sqrt[3])/51}, {
         1/12, (1/2 + (51 Sqrt[3])/2)/51}, {19/204, (1/2 + 26 Sqrt[3])/51}, {
         1/12, (1/2 + (53 Sqrt[3])/2)/51}, {19/204, (1/2 + 27 Sqrt[3])/51}, {
         1/12, (1/2 + (55 Sqrt[3])/2)/51}, {19/204, (1/2 + 28 Sqrt[3])/51}, {
         1/12, (1/2 + (57 Sqrt[3])/2)/51}, {19/204, (1/2 + 29 Sqrt[3])/51}, {
         23/204, 1/102}, {7/68, (1/2 + Sqrt[3]/2)/51}, {
         23/204, (1/2 + Sqrt[3])/51}, {7/68, (1/2 + (3 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 2 Sqrt[3])/51}, {7/68, (1/2 + (5 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 3 Sqrt[3])/51}, {7/68, (1/2 + (7 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 4 Sqrt[3])/51}, {7/68, (1/2 + (9 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 5 Sqrt[3])/51}, {7/68, (1/2 + (11 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 6 Sqrt[3])/51}, {7/68, (1/2 + (13 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 7 Sqrt[3])/51}, {7/68, (1/2 + (15 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 8 Sqrt[3])/51}, {7/68, (1/2 + (17 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 9 Sqrt[3])/51}, {7/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 10 Sqrt[3])/51}, {7/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 11 Sqrt[3])/51}, {7/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 12 Sqrt[3])/51}, {7/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 13 Sqrt[3])/51}, {7/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 14 Sqrt[3])/51}, {7/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 15 Sqrt[3])/51}, {7/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 16 Sqrt[3])/51}, {7/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 17 Sqrt[3])/51}, {7/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 18 Sqrt[3])/51}, {7/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 19 Sqrt[3])/51}, {7/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 20 Sqrt[3])/51}, {7/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 21 Sqrt[3])/51}, {7/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 22 Sqrt[3])/51}, {7/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 23 Sqrt[3])/51}, {7/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 24 Sqrt[3])/51}, {7/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 25 Sqrt[3])/51}, {7/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 26 Sqrt[3])/51}, {7/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 27 Sqrt[3])/51}, {7/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 28 Sqrt[3])/51}, {7/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         23/204, (1/2 + 29 Sqrt[3])/51}, {9/68, 1/102}, {
         25/204, (1/2 + Sqrt[3]/2)/51}, {9/68, (1/2 + Sqrt[3])/51}, {
         25/204, (1/2 + (3 Sqrt[3])/2)/51}, {9/68, (1/2 + 2 Sqrt[3])/51}, {
         25/204, (1/2 + (5 Sqrt[3])/2)/51}, {9/68, (1/2 + 3 Sqrt[3])/51}, {
         25/204, (1/2 + (7 Sqrt[3])/2)/51}, {9/68, (1/2 + 4 Sqrt[3])/51}, {
         25/204, (1/2 + (9 Sqrt[3])/2)/51}, {9/68, (1/2 + 5 Sqrt[3])/51}, {
         25/204, (1/2 + (11 Sqrt[3])/2)/51}, {9/68, (1/2 + 6 Sqrt[3])/51}, {
         25/204, (1/2 + (13 Sqrt[3])/2)/51}, {9/68, (1/2 + 7 Sqrt[3])/51}, {
         25/204, (1/2 + (15 Sqrt[3])/2)/51}, {9/68, (1/2 + 8 Sqrt[3])/51}, {
         25/204, (1/2 + (17 Sqrt[3])/2)/51}, {9/68, (1/2 + 9 Sqrt[3])/51}, {
         25/204, (1/2 + (19 Sqrt[3])/2)/51}, {9/68, (1/2 + 10 Sqrt[3])/51}, {
         25/204, (1/2 + (21 Sqrt[3])/2)/51}, {9/68, (1/2 + 11 Sqrt[3])/51}, {
         25/204, (1/2 + (23 Sqrt[3])/2)/51}, {9/68, (1/2 + 12 Sqrt[3])/51}, {
         25/204, (1/2 + (25 Sqrt[3])/2)/51}, {9/68, (1/2 + 13 Sqrt[3])/51}, {
         25/204, (1/2 + (27 Sqrt[3])/2)/51}, {9/68, (1/2 + 14 Sqrt[3])/51}, {
         25/204, (1/2 + (29 Sqrt[3])/2)/51}, {9/68, (1/2 + 15 Sqrt[3])/51}, {
         25/204, (1/2 + (31 Sqrt[3])/2)/51}, {9/68, (1/2 + 16 Sqrt[3])/51}, {
         25/204, (1/2 + (33 Sqrt[3])/2)/51}, {9/68, (1/2 + 17 Sqrt[3])/51}, {
         25/204, (1/2 + (35 Sqrt[3])/2)/51}, {9/68, (1/2 + 18 Sqrt[3])/51}, {
         25/204, (1/2 + (37 Sqrt[3])/2)/51}, {9/68, (1/2 + 19 Sqrt[3])/51}, {
         25/204, (1/2 + (39 Sqrt[3])/2)/51}, {9/68, (1/2 + 20 Sqrt[3])/51}, {
         25/204, (1/2 + (41 Sqrt[3])/2)/51}, {9/68, (1/2 + 21 Sqrt[3])/51}, {
         25/204, (1/2 + (43 Sqrt[3])/2)/51}, {9/68, (1/2 + 22 Sqrt[3])/51}, {
         25/204, (1/2 + (45 Sqrt[3])/2)/51}, {9/68, (1/2 + 23 Sqrt[3])/51}, {
         25/204, (1/2 + (47 Sqrt[3])/2)/51}, {9/68, (1/2 + 24 Sqrt[3])/51}, {
         25/204, (1/2 + (49 Sqrt[3])/2)/51}, {9/68, (1/2 + 25 Sqrt[3])/51}, {
         25/204, (1/2 + (51 Sqrt[3])/2)/51}, {9/68, (1/2 + 26 Sqrt[3])/51}, {
         25/204, (1/2 + (53 Sqrt[3])/2)/51}, {9/68, (1/2 + 27 Sqrt[3])/51}, {
         25/204, (1/2 + (55 Sqrt[3])/2)/51}, {9/68, (1/2 + 28 Sqrt[3])/51}, {
         25/204, (1/2 + (57 Sqrt[3])/2)/51}, {9/68, (1/2 + 29 Sqrt[3])/51}, {
         31/204, 1/102}, {29/204, (1/2 + Sqrt[3]/2)/51}, {
         31/204, (1/2 + Sqrt[3])/51}, {29/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 2 Sqrt[3])/51}, {29/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 3 Sqrt[3])/51}, {29/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 4 Sqrt[3])/51}, {29/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 5 Sqrt[3])/51}, {29/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 6 Sqrt[3])/51}, {29/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 7 Sqrt[3])/51}, {29/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 8 Sqrt[3])/51}, {29/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 9 Sqrt[3])/51}, {29/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 10 Sqrt[3])/51}, {
         29/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 11 Sqrt[3])/51}, {
         29/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 12 Sqrt[3])/51}, {
         29/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 13 Sqrt[3])/51}, {
         29/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 14 Sqrt[3])/51}, {
         29/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 15 Sqrt[3])/51}, {
         29/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 16 Sqrt[3])/51}, {
         29/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 17 Sqrt[3])/51}, {
         29/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 18 Sqrt[3])/51}, {
         29/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 19 Sqrt[3])/51}, {
         29/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 20 Sqrt[3])/51}, {
         29/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 21 Sqrt[3])/51}, {
         29/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 22 Sqrt[3])/51}, {
         29/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 23 Sqrt[3])/51}, {
         29/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 24 Sqrt[3])/51}, {
         29/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 25 Sqrt[3])/51}, {
         29/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 26 Sqrt[3])/51}, {
         29/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 27 Sqrt[3])/51}, {
         29/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 28 Sqrt[3])/51}, {
         29/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         31/204, (1/2 + 29 Sqrt[3])/51}, {35/204, 1/102}, {
         11/68, (1/2 + Sqrt[3]/2)/51}, {35/204, (1/2 + Sqrt[3])/51}, {
         11/68, (1/2 + (3 Sqrt[3])/2)/51}, {35/204, (1/2 + 2 Sqrt[3])/51}, {
         11/68, (1/2 + (5 Sqrt[3])/2)/51}, {35/204, (1/2 + 3 Sqrt[3])/51}, {
         11/68, (1/2 + (7 Sqrt[3])/2)/51}, {35/204, (1/2 + 4 Sqrt[3])/51}, {
         11/68, (1/2 + (9 Sqrt[3])/2)/51}, {35/204, (1/2 + 5 Sqrt[3])/51}, {
         11/68, (1/2 + (11 Sqrt[3])/2)/51}, {35/204, (1/2 + 6 Sqrt[3])/51}, {
         11/68, (1/2 + (13 Sqrt[3])/2)/51}, {35/204, (1/2 + 7 Sqrt[3])/51}, {
         11/68, (1/2 + (15 Sqrt[3])/2)/51}, {35/204, (1/2 + 8 Sqrt[3])/51}, {
         11/68, (1/2 + (17 Sqrt[3])/2)/51}, {35/204, (1/2 + 9 Sqrt[3])/51}, {
         11/68, (1/2 + (19 Sqrt[3])/2)/51}, {35/204, (1/2 + 10 Sqrt[3])/51}, {
         11/68, (1/2 + (21 Sqrt[3])/2)/51}, {35/204, (1/2 + 11 Sqrt[3])/51}, {
         11/68, (1/2 + (23 Sqrt[3])/2)/51}, {35/204, (1/2 + 12 Sqrt[3])/51}, {
         11/68, (1/2 + (25 Sqrt[3])/2)/51}, {35/204, (1/2 + 13 Sqrt[3])/51}, {
         11/68, (1/2 + (27 Sqrt[3])/2)/51}, {35/204, (1/2 + 14 Sqrt[3])/51}, {
         11/68, (1/2 + (29 Sqrt[3])/2)/51}, {35/204, (1/2 + 15 Sqrt[3])/51}, {
         11/68, (1/2 + (31 Sqrt[3])/2)/51}, {35/204, (1/2 + 16 Sqrt[3])/51}, {
         11/68, (1/2 + (33 Sqrt[3])/2)/51}, {35/204, (1/2 + 17 Sqrt[3])/51}, {
         11/68, (1/2 + (35 Sqrt[3])/2)/51}, {35/204, (1/2 + 18 Sqrt[3])/51}, {
         11/68, (1/2 + (37 Sqrt[3])/2)/51}, {35/204, (1/2 + 19 Sqrt[3])/51}, {
         11/68, (1/2 + (39 Sqrt[3])/2)/51}, {35/204, (1/2 + 20 Sqrt[3])/51}, {
         11/68, (1/2 + (41 Sqrt[3])/2)/51}, {35/204, (1/2 + 21 Sqrt[3])/51}, {
         11/68, (1/2 + (43 Sqrt[3])/2)/51}, {35/204, (1/2 + 22 Sqrt[3])/51}, {
         11/68, (1/2 + (45 Sqrt[3])/2)/51}, {35/204, (1/2 + 23 Sqrt[3])/51}, {
         11/68, (1/2 + (47 Sqrt[3])/2)/51}, {35/204, (1/2 + 24 Sqrt[3])/51}, {
         11/68, (1/2 + (49 Sqrt[3])/2)/51}, {35/204, (1/2 + 25 Sqrt[3])/51}, {
         11/68, (1/2 + (51 Sqrt[3])/2)/51}, {35/204, (1/2 + 26 Sqrt[3])/51}, {
         11/68, (1/2 + (53 Sqrt[3])/2)/51}, {35/204, (1/2 + 27 Sqrt[3])/51}, {
         11/68, (1/2 + (55 Sqrt[3])/2)/51}, {35/204, (1/2 + 28 Sqrt[3])/51}, {
         11/68, (1/2 + (57 Sqrt[3])/2)/51}, {35/204, (1/2 + 29 Sqrt[3])/51}, {
         13/68, 1/102}, {37/204, (1/2 + Sqrt[3]/2)/51}, {
         13/68, (1/2 + Sqrt[3])/51}, {37/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 2 Sqrt[3])/51}, {37/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 3 Sqrt[3])/51}, {37/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 4 Sqrt[3])/51}, {37/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 5 Sqrt[3])/51}, {37/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 6 Sqrt[3])/51}, {37/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 7 Sqrt[3])/51}, {37/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 8 Sqrt[3])/51}, {37/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 9 Sqrt[3])/51}, {37/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 10 Sqrt[3])/51}, {37/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 11 Sqrt[3])/51}, {37/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 12 Sqrt[3])/51}, {37/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 13 Sqrt[3])/51}, {37/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 14 Sqrt[3])/51}, {37/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 15 Sqrt[3])/51}, {37/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 16 Sqrt[3])/51}, {37/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 17 Sqrt[3])/51}, {37/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 18 Sqrt[3])/51}, {37/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 19 Sqrt[3])/51}, {37/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 20 Sqrt[3])/51}, {37/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 21 Sqrt[3])/51}, {37/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 22 Sqrt[3])/51}, {37/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 23 Sqrt[3])/51}, {37/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 24 Sqrt[3])/51}, {37/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 25 Sqrt[3])/51}, {37/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 26 Sqrt[3])/51}, {37/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 27 Sqrt[3])/51}, {37/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 28 Sqrt[3])/51}, {37/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         13/68, (1/2 + 29 Sqrt[3])/51}, {43/204, 1/102}, {
         41/204, (1/2 + Sqrt[3]/2)/51}, {43/204, (1/2 + Sqrt[3])/51}, {
         41/204, (1/2 + (3 Sqrt[3])/2)/51}, {43/204, (1/2 + 2 Sqrt[3])/51}, {
         41/204, (1/2 + (5 Sqrt[3])/2)/51}, {43/204, (1/2 + 3 Sqrt[3])/51}, {
         41/204, (1/2 + (7 Sqrt[3])/2)/51}, {43/204, (1/2 + 4 Sqrt[3])/51}, {
         41/204, (1/2 + (9 Sqrt[3])/2)/51}, {43/204, (1/2 + 5 Sqrt[3])/51}, {
         41/204, (1/2 + (11 Sqrt[3])/2)/51}, {43/204, (1/2 + 6 Sqrt[3])/51}, {
         41/204, (1/2 + (13 Sqrt[3])/2)/51}, {43/204, (1/2 + 7 Sqrt[3])/51}, {
         41/204, (1/2 + (15 Sqrt[3])/2)/51}, {43/204, (1/2 + 8 Sqrt[3])/51}, {
         41/204, (1/2 + (17 Sqrt[3])/2)/51}, {43/204, (1/2 + 9 Sqrt[3])/51}, {
         41/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 10 Sqrt[3])/51}, {
         41/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 11 Sqrt[3])/51}, {
         41/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 12 Sqrt[3])/51}, {
         41/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 13 Sqrt[3])/51}, {
         41/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 14 Sqrt[3])/51}, {
         41/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 15 Sqrt[3])/51}, {
         41/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 16 Sqrt[3])/51}, {
         41/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 17 Sqrt[3])/51}, {
         41/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 18 Sqrt[3])/51}, {
         41/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 19 Sqrt[3])/51}, {
         41/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 20 Sqrt[3])/51}, {
         41/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 21 Sqrt[3])/51}, {
         41/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 22 Sqrt[3])/51}, {
         41/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 23 Sqrt[3])/51}, {
         41/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 24 Sqrt[3])/51}, {
         41/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 25 Sqrt[3])/51}, {
         41/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 26 Sqrt[3])/51}, {
         41/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 27 Sqrt[3])/51}, {
         41/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 28 Sqrt[3])/51}, {
         41/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         43/204, (1/2 + 29 Sqrt[3])/51}, {47/204, 1/102}, {
         15/68, (1/2 + Sqrt[3]/2)/51}, {47/204, (1/2 + Sqrt[3])/51}, {
         15/68, (1/2 + (3 Sqrt[3])/2)/51}, {47/204, (1/2 + 2 Sqrt[3])/51}, {
         15/68, (1/2 + (5 Sqrt[3])/2)/51}, {47/204, (1/2 + 3 Sqrt[3])/51}, {
         15/68, (1/2 + (7 Sqrt[3])/2)/51}, {47/204, (1/2 + 4 Sqrt[3])/51}, {
         15/68, (1/2 + (9 Sqrt[3])/2)/51}, {47/204, (1/2 + 5 Sqrt[3])/51}, {
         15/68, (1/2 + (11 Sqrt[3])/2)/51}, {47/204, (1/2 + 6 Sqrt[3])/51}, {
         15/68, (1/2 + (13 Sqrt[3])/2)/51}, {47/204, (1/2 + 7 Sqrt[3])/51}, {
         15/68, (1/2 + (15 Sqrt[3])/2)/51}, {47/204, (1/2 + 8 Sqrt[3])/51}, {
         15/68, (1/2 + (17 Sqrt[3])/2)/51}, {47/204, (1/2 + 9 Sqrt[3])/51}, {
         15/68, (1/2 + (19 Sqrt[3])/2)/51}, {47/204, (1/2 + 10 Sqrt[3])/51}, {
         15/68, (1/2 + (21 Sqrt[3])/2)/51}, {47/204, (1/2 + 11 Sqrt[3])/51}, {
         15/68, (1/2 + (23 Sqrt[3])/2)/51}, {47/204, (1/2 + 12 Sqrt[3])/51}, {
         15/68, (1/2 + (25 Sqrt[3])/2)/51}, {47/204, (1/2 + 13 Sqrt[3])/51}, {
         15/68, (1/2 + (27 Sqrt[3])/2)/51}, {47/204, (1/2 + 14 Sqrt[3])/51}, {
         15/68, (1/2 + (29 Sqrt[3])/2)/51}, {47/204, (1/2 + 15 Sqrt[3])/51}, {
         15/68, (1/2 + (31 Sqrt[3])/2)/51}, {47/204, (1/2 + 16 Sqrt[3])/51}, {
         15/68, (1/2 + (33 Sqrt[3])/2)/51}, {47/204, (1/2 + 17 Sqrt[3])/51}, {
         15/68, (1/2 + (35 Sqrt[3])/2)/51}, {47/204, (1/2 + 18 Sqrt[3])/51}, {
         15/68, (1/2 + (37 Sqrt[3])/2)/51}, {47/204, (1/2 + 19 Sqrt[3])/51}, {
         15/68, (1/2 + (39 Sqrt[3])/2)/51}, {47/204, (1/2 + 20 Sqrt[3])/51}, {
         15/68, (1/2 + (41 Sqrt[3])/2)/51}, {47/204, (1/2 + 21 Sqrt[3])/51}, {
         15/68, (1/2 + (43 Sqrt[3])/2)/51}, {47/204, (1/2 + 22 Sqrt[3])/51}, {
         15/68, (1/2 + (45 Sqrt[3])/2)/51}, {47/204, (1/2 + 23 Sqrt[3])/51}, {
         15/68, (1/2 + (47 Sqrt[3])/2)/51}, {47/204, (1/2 + 24 Sqrt[3])/51}, {
         15/68, (1/2 + (49 Sqrt[3])/2)/51}, {47/204, (1/2 + 25 Sqrt[3])/51}, {
         15/68, (1/2 + (51 Sqrt[3])/2)/51}, {47/204, (1/2 + 26 Sqrt[3])/51}, {
         15/68, (1/2 + (53 Sqrt[3])/2)/51}, {47/204, (1/2 + 27 Sqrt[3])/51}, {
         15/68, (1/2 + (55 Sqrt[3])/2)/51}, {47/204, (1/2 + 28 Sqrt[3])/51}, {
         15/68, (1/2 + (57 Sqrt[3])/2)/51}, {47/204, (1/2 + 29 Sqrt[3])/51}, {
         1/4, 1/102}, {49/204, (1/2 + Sqrt[3]/2)/51}, {
         1/4, (1/2 + Sqrt[3])/51}, {49/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 2 Sqrt[3])/51}, {49/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 3 Sqrt[3])/51}, {49/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 4 Sqrt[3])/51}, {49/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 5 Sqrt[3])/51}, {49/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 6 Sqrt[3])/51}, {49/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 7 Sqrt[3])/51}, {49/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 8 Sqrt[3])/51}, {49/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 9 Sqrt[3])/51}, {49/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 10 Sqrt[3])/51}, {49/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 11 Sqrt[3])/51}, {49/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 12 Sqrt[3])/51}, {49/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 13 Sqrt[3])/51}, {49/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 14 Sqrt[3])/51}, {49/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 15 Sqrt[3])/51}, {49/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 16 Sqrt[3])/51}, {49/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 17 Sqrt[3])/51}, {49/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 18 Sqrt[3])/51}, {49/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 19 Sqrt[3])/51}, {49/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 20 Sqrt[3])/51}, {49/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 21 Sqrt[3])/51}, {49/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 22 Sqrt[3])/51}, {49/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 23 Sqrt[3])/51}, {49/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 24 Sqrt[3])/51}, {49/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 25 Sqrt[3])/51}, {49/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 26 Sqrt[3])/51}, {49/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 27 Sqrt[3])/51}, {49/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 28 Sqrt[3])/51}, {49/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         1/4, (1/2 + 29 Sqrt[3])/51}, {55/204, 1/102}, {
         53/204, (1/2 + Sqrt[3]/2)/51}, {55/204, (1/2 + Sqrt[3])/51}, {
         53/204, (1/2 + (3 Sqrt[3])/2)/51}, {55/204, (1/2 + 2 Sqrt[3])/51}, {
         53/204, (1/2 + (5 Sqrt[3])/2)/51}, {55/204, (1/2 + 3 Sqrt[3])/51}, {
         53/204, (1/2 + (7 Sqrt[3])/2)/51}, {55/204, (1/2 + 4 Sqrt[3])/51}, {
         53/204, (1/2 + (9 Sqrt[3])/2)/51}, {55/204, (1/2 + 5 Sqrt[3])/51}, {
         53/204, (1/2 + (11 Sqrt[3])/2)/51}, {55/204, (1/2 + 6 Sqrt[3])/51}, {
         53/204, (1/2 + (13 Sqrt[3])/2)/51}, {55/204, (1/2 + 7 Sqrt[3])/51}, {
         53/204, (1/2 + (15 Sqrt[3])/2)/51}, {55/204, (1/2 + 8 Sqrt[3])/51}, {
         53/204, (1/2 + (17 Sqrt[3])/2)/51}, {55/204, (1/2 + 9 Sqrt[3])/51}, {
         53/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 10 Sqrt[3])/51}, {
         53/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 11 Sqrt[3])/51}, {
         53/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 12 Sqrt[3])/51}, {
         53/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 13 Sqrt[3])/51}, {
         53/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 14 Sqrt[3])/51}, {
         53/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 15 Sqrt[3])/51}, {
         53/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 16 Sqrt[3])/51}, {
         53/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 17 Sqrt[3])/51}, {
         53/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 18 Sqrt[3])/51}, {
         53/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 19 Sqrt[3])/51}, {
         53/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 20 Sqrt[3])/51}, {
         53/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 21 Sqrt[3])/51}, {
         53/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 22 Sqrt[3])/51}, {
         53/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 23 Sqrt[3])/51}, {
         53/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 24 Sqrt[3])/51}, {
         53/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 25 Sqrt[3])/51}, {
         53/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 26 Sqrt[3])/51}, {
         53/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 27 Sqrt[3])/51}, {
         53/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 28 Sqrt[3])/51}, {
         53/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         55/204, (1/2 + 29 Sqrt[3])/51}, {59/204, 1/102}, {
         19/68, (1/2 + Sqrt[3]/2)/51}, {59/204, (1/2 + Sqrt[3])/51}, {
         19/68, (1/2 + (3 Sqrt[3])/2)/51}, {59/204, (1/2 + 2 Sqrt[3])/51}, {
         19/68, (1/2 + (5 Sqrt[3])/2)/51}, {59/204, (1/2 + 3 Sqrt[3])/51}, {
         19/68, (1/2 + (7 Sqrt[3])/2)/51}, {59/204, (1/2 + 4 Sqrt[3])/51}, {
         19/68, (1/2 + (9 Sqrt[3])/2)/51}, {59/204, (1/2 + 5 Sqrt[3])/51}, {
         19/68, (1/2 + (11 Sqrt[3])/2)/51}, {59/204, (1/2 + 6 Sqrt[3])/51}, {
         19/68, (1/2 + (13 Sqrt[3])/2)/51}, {59/204, (1/2 + 7 Sqrt[3])/51}, {
         19/68, (1/2 + (15 Sqrt[3])/2)/51}, {59/204, (1/2 + 8 Sqrt[3])/51}, {
         19/68, (1/2 + (17 Sqrt[3])/2)/51}, {59/204, (1/2 + 9 Sqrt[3])/51}, {
         19/68, (1/2 + (19 Sqrt[3])/2)/51}, {59/204, (1/2 + 10 Sqrt[3])/51}, {
         19/68, (1/2 + (21 Sqrt[3])/2)/51}, {59/204, (1/2 + 11 Sqrt[3])/51}, {
         19/68, (1/2 + (23 Sqrt[3])/2)/51}, {59/204, (1/2 + 12 Sqrt[3])/51}, {
         19/68, (1/2 + (25 Sqrt[3])/2)/51}, {59/204, (1/2 + 13 Sqrt[3])/51}, {
         19/68, (1/2 + (27 Sqrt[3])/2)/51}, {59/204, (1/2 + 14 Sqrt[3])/51}, {
         19/68, (1/2 + (29 Sqrt[3])/2)/51}, {59/204, (1/2 + 15 Sqrt[3])/51}, {
         19/68, (1/2 + (31 Sqrt[3])/2)/51}, {59/204, (1/2 + 16 Sqrt[3])/51}, {
         19/68, (1/2 + (33 Sqrt[3])/2)/51}, {59/204, (1/2 + 17 Sqrt[3])/51}, {
         19/68, (1/2 + (35 Sqrt[3])/2)/51}, {59/204, (1/2 + 18 Sqrt[3])/51}, {
         19/68, (1/2 + (37 Sqrt[3])/2)/51}, {59/204, (1/2 + 19 Sqrt[3])/51}, {
         19/68, (1/2 + (39 Sqrt[3])/2)/51}, {59/204, (1/2 + 20 Sqrt[3])/51}, {
         19/68, (1/2 + (41 Sqrt[3])/2)/51}, {59/204, (1/2 + 21 Sqrt[3])/51}, {
         19/68, (1/2 + (43 Sqrt[3])/2)/51}, {59/204, (1/2 + 22 Sqrt[3])/51}, {
         19/68, (1/2 + (45 Sqrt[3])/2)/51}, {59/204, (1/2 + 23 Sqrt[3])/51}, {
         19/68, (1/2 + (47 Sqrt[3])/2)/51}, {59/204, (1/2 + 24 Sqrt[3])/51}, {
         19/68, (1/2 + (49 Sqrt[3])/2)/51}, {59/204, (1/2 + 25 Sqrt[3])/51}, {
         19/68, (1/2 + (51 Sqrt[3])/2)/51}, {59/204, (1/2 + 26 Sqrt[3])/51}, {
         19/68, (1/2 + (53 Sqrt[3])/2)/51}, {59/204, (1/2 + 27 Sqrt[3])/51}, {
         19/68, (1/2 + (55 Sqrt[3])/2)/51}, {59/204, (1/2 + 28 Sqrt[3])/51}, {
         19/68, (1/2 + (57 Sqrt[3])/2)/51}, {59/204, (1/2 + 29 Sqrt[3])/51}, {
         21/68, 1/102}, {61/204, (1/2 + Sqrt[3]/2)/51}, {
         21/68, (1/2 + Sqrt[3])/51}, {61/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 2 Sqrt[3])/51}, {61/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 3 Sqrt[3])/51}, {61/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 4 Sqrt[3])/51}, {61/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 5 Sqrt[3])/51}, {61/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 6 Sqrt[3])/51}, {61/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 7 Sqrt[3])/51}, {61/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 8 Sqrt[3])/51}, {61/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 9 Sqrt[3])/51}, {61/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 10 Sqrt[3])/51}, {61/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 11 Sqrt[3])/51}, {61/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 12 Sqrt[3])/51}, {61/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 13 Sqrt[3])/51}, {61/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 14 Sqrt[3])/51}, {61/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 15 Sqrt[3])/51}, {61/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 16 Sqrt[3])/51}, {61/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 17 Sqrt[3])/51}, {61/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 18 Sqrt[3])/51}, {61/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 19 Sqrt[3])/51}, {61/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 20 Sqrt[3])/51}, {61/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 21 Sqrt[3])/51}, {61/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 22 Sqrt[3])/51}, {61/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 23 Sqrt[3])/51}, {61/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 24 Sqrt[3])/51}, {61/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 25 Sqrt[3])/51}, {61/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 26 Sqrt[3])/51}, {61/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 27 Sqrt[3])/51}, {61/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 28 Sqrt[3])/51}, {61/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         21/68, (1/2 + 29 Sqrt[3])/51}, {67/204, 1/102}, {
         65/204, (1/2 + Sqrt[3]/2)/51}, {67/204, (1/2 + Sqrt[3])/51}, {
         65/204, (1/2 + (3 Sqrt[3])/2)/51}, {67/204, (1/2 + 2 Sqrt[3])/51}, {
         65/204, (1/2 + (5 Sqrt[3])/2)/51}, {67/204, (1/2 + 3 Sqrt[3])/51}, {
         65/204, (1/2 + (7 Sqrt[3])/2)/51}, {67/204, (1/2 + 4 Sqrt[3])/51}, {
         65/204, (1/2 + (9 Sqrt[3])/2)/51}, {67/204, (1/2 + 5 Sqrt[3])/51}, {
         65/204, (1/2 + (11 Sqrt[3])/2)/51}, {67/204, (1/2 + 6 Sqrt[3])/51}, {
         65/204, (1/2 + (13 Sqrt[3])/2)/51}, {67/204, (1/2 + 7 Sqrt[3])/51}, {
         65/204, (1/2 + (15 Sqrt[3])/2)/51}, {67/204, (1/2 + 8 Sqrt[3])/51}, {
         65/204, (1/2 + (17 Sqrt[3])/2)/51}, {67/204, (1/2 + 9 Sqrt[3])/51}, {
         65/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 10 Sqrt[3])/51}, {
         65/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 11 Sqrt[3])/51}, {
         65/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 12 Sqrt[3])/51}, {
         65/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 13 Sqrt[3])/51}, {
         65/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 14 Sqrt[3])/51}, {
         65/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 15 Sqrt[3])/51}, {
         65/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 16 Sqrt[3])/51}, {
         65/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 17 Sqrt[3])/51}, {
         65/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 18 Sqrt[3])/51}, {
         65/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 19 Sqrt[3])/51}, {
         65/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 20 Sqrt[3])/51}, {
         65/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 21 Sqrt[3])/51}, {
         65/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 22 Sqrt[3])/51}, {
         65/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 23 Sqrt[3])/51}, {
         65/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 24 Sqrt[3])/51}, {
         65/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 25 Sqrt[3])/51}, {
         65/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 26 Sqrt[3])/51}, {
         65/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 27 Sqrt[3])/51}, {
         65/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 28 Sqrt[3])/51}, {
         65/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         67/204, (1/2 + 29 Sqrt[3])/51}, {71/204, 1/102}, {
         23/68, (1/2 + Sqrt[3]/2)/51}, {71/204, (1/2 + Sqrt[3])/51}, {
         23/68, (1/2 + (3 Sqrt[3])/2)/51}, {71/204, (1/2 + 2 Sqrt[3])/51}, {
         23/68, (1/2 + (5 Sqrt[3])/2)/51}, {71/204, (1/2 + 3 Sqrt[3])/51}, {
         23/68, (1/2 + (7 Sqrt[3])/2)/51}, {71/204, (1/2 + 4 Sqrt[3])/51}, {
         23/68, (1/2 + (9 Sqrt[3])/2)/51}, {71/204, (1/2 + 5 Sqrt[3])/51}, {
         23/68, (1/2 + (11 Sqrt[3])/2)/51}, {71/204, (1/2 + 6 Sqrt[3])/51}, {
         23/68, (1/2 + (13 Sqrt[3])/2)/51}, {71/204, (1/2 + 7 Sqrt[3])/51}, {
         23/68, (1/2 + (15 Sqrt[3])/2)/51}, {71/204, (1/2 + 8 Sqrt[3])/51}, {
         23/68, (1/2 + (17 Sqrt[3])/2)/51}, {71/204, (1/2 + 9 Sqrt[3])/51}, {
         23/68, (1/2 + (19 Sqrt[3])/2)/51}, {71/204, (1/2 + 10 Sqrt[3])/51}, {
         23/68, (1/2 + (21 Sqrt[3])/2)/51}, {71/204, (1/2 + 11 Sqrt[3])/51}, {
         23/68, (1/2 + (23 Sqrt[3])/2)/51}, {71/204, (1/2 + 12 Sqrt[3])/51}, {
         23/68, (1/2 + (25 Sqrt[3])/2)/51}, {71/204, (1/2 + 13 Sqrt[3])/51}, {
         23/68, (1/2 + (27 Sqrt[3])/2)/51}, {71/204, (1/2 + 14 Sqrt[3])/51}, {
         23/68, (1/2 + (29 Sqrt[3])/2)/51}, {71/204, (1/2 + 15 Sqrt[3])/51}, {
         23/68, (1/2 + (31 Sqrt[3])/2)/51}, {71/204, (1/2 + 16 Sqrt[3])/51}, {
         23/68, (1/2 + (33 Sqrt[3])/2)/51}, {71/204, (1/2 + 17 Sqrt[3])/51}, {
         23/68, (1/2 + (35 Sqrt[3])/2)/51}, {71/204, (1/2 + 18 Sqrt[3])/51}, {
         23/68, (1/2 + (37 Sqrt[3])/2)/51}, {71/204, (1/2 + 19 Sqrt[3])/51}, {
         23/68, (1/2 + (39 Sqrt[3])/2)/51}, {71/204, (1/2 + 20 Sqrt[3])/51}, {
         23/68, (1/2 + (41 Sqrt[3])/2)/51}, {71/204, (1/2 + 21 Sqrt[3])/51}, {
         23/68, (1/2 + (43 Sqrt[3])/2)/51}, {71/204, (1/2 + 22 Sqrt[3])/51}, {
         23/68, (1/2 + (45 Sqrt[3])/2)/51}, {71/204, (1/2 + 23 Sqrt[3])/51}, {
         23/68, (1/2 + (47 Sqrt[3])/2)/51}, {71/204, (1/2 + 24 Sqrt[3])/51}, {
         23/68, (1/2 + (49 Sqrt[3])/2)/51}, {71/204, (1/2 + 25 Sqrt[3])/51}, {
         23/68, (1/2 + (51 Sqrt[3])/2)/51}, {71/204, (1/2 + 26 Sqrt[3])/51}, {
         23/68, (1/2 + (53 Sqrt[3])/2)/51}, {71/204, (1/2 + 27 Sqrt[3])/51}, {
         23/68, (1/2 + (55 Sqrt[3])/2)/51}, {71/204, (1/2 + 28 Sqrt[3])/51}, {
         23/68, (1/2 + (57 Sqrt[3])/2)/51}, {71/204, (1/2 + 29 Sqrt[3])/51}, {
         25/68, 1/102}, {73/204, (1/2 + Sqrt[3]/2)/51}, {
         25/68, (1/2 + Sqrt[3])/51}, {73/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 2 Sqrt[3])/51}, {73/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 3 Sqrt[3])/51}, {73/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 4 Sqrt[3])/51}, {73/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 5 Sqrt[3])/51}, {73/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 6 Sqrt[3])/51}, {73/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 7 Sqrt[3])/51}, {73/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 8 Sqrt[3])/51}, {73/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 9 Sqrt[3])/51}, {73/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 10 Sqrt[3])/51}, {73/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 11 Sqrt[3])/51}, {73/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 12 Sqrt[3])/51}, {73/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 13 Sqrt[3])/51}, {73/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 14 Sqrt[3])/51}, {73/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 15 Sqrt[3])/51}, {73/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 16 Sqrt[3])/51}, {73/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 17 Sqrt[3])/51}, {73/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 18 Sqrt[3])/51}, {73/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 19 Sqrt[3])/51}, {73/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 20 Sqrt[3])/51}, {73/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 21 Sqrt[3])/51}, {73/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 22 Sqrt[3])/51}, {73/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 23 Sqrt[3])/51}, {73/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 24 Sqrt[3])/51}, {73/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 25 Sqrt[3])/51}, {73/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 26 Sqrt[3])/51}, {73/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 27 Sqrt[3])/51}, {73/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 28 Sqrt[3])/51}, {73/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         25/68, (1/2 + 29 Sqrt[3])/51}, {79/204, 1/102}, {
         77/204, (1/2 + Sqrt[3]/2)/51}, {79/204, (1/2 + Sqrt[3])/51}, {
         77/204, (1/2 + (3 Sqrt[3])/2)/51}, {79/204, (1/2 + 2 Sqrt[3])/51}, {
         77/204, (1/2 + (5 Sqrt[3])/2)/51}, {79/204, (1/2 + 3 Sqrt[3])/51}, {
         77/204, (1/2 + (7 Sqrt[3])/2)/51}, {79/204, (1/2 + 4 Sqrt[3])/51}, {
         77/204, (1/2 + (9 Sqrt[3])/2)/51}, {79/204, (1/2 + 5 Sqrt[3])/51}, {
         77/204, (1/2 + (11 Sqrt[3])/2)/51}, {79/204, (1/2 + 6 Sqrt[3])/51}, {
         77/204, (1/2 + (13 Sqrt[3])/2)/51}, {79/204, (1/2 + 7 Sqrt[3])/51}, {
         77/204, (1/2 + (15 Sqrt[3])/2)/51}, {79/204, (1/2 + 8 Sqrt[3])/51}, {
         77/204, (1/2 + (17 Sqrt[3])/2)/51}, {79/204, (1/2 + 9 Sqrt[3])/51}, {
         77/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 10 Sqrt[3])/51}, {
         77/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 11 Sqrt[3])/51}, {
         77/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 12 Sqrt[3])/51}, {
         77/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 13 Sqrt[3])/51}, {
         77/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 14 Sqrt[3])/51}, {
         77/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 15 Sqrt[3])/51}, {
         77/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 16 Sqrt[3])/51}, {
         77/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 17 Sqrt[3])/51}, {
         77/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 18 Sqrt[3])/51}, {
         77/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 19 Sqrt[3])/51}, {
         77/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 20 Sqrt[3])/51}, {
         77/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 21 Sqrt[3])/51}, {
         77/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 22 Sqrt[3])/51}, {
         77/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 23 Sqrt[3])/51}, {
         77/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 24 Sqrt[3])/51}, {
         77/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 25 Sqrt[3])/51}, {
         77/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 26 Sqrt[3])/51}, {
         77/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 27 Sqrt[3])/51}, {
         77/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 28 Sqrt[3])/51}, {
         77/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         79/204, (1/2 + 29 Sqrt[3])/51}, {83/204, 1/102}, {
         27/68, (1/2 + Sqrt[3]/2)/51}, {83/204, (1/2 + Sqrt[3])/51}, {
         27/68, (1/2 + (3 Sqrt[3])/2)/51}, {83/204, (1/2 + 2 Sqrt[3])/51}, {
         27/68, (1/2 + (5 Sqrt[3])/2)/51}, {83/204, (1/2 + 3 Sqrt[3])/51}, {
         27/68, (1/2 + (7 Sqrt[3])/2)/51}, {83/204, (1/2 + 4 Sqrt[3])/51}, {
         27/68, (1/2 + (9 Sqrt[3])/2)/51}, {83/204, (1/2 + 5 Sqrt[3])/51}, {
         27/68, (1/2 + (11 Sqrt[3])/2)/51}, {83/204, (1/2 + 6 Sqrt[3])/51}, {
         27/68, (1/2 + (13 Sqrt[3])/2)/51}, {83/204, (1/2 + 7 Sqrt[3])/51}, {
         27/68, (1/2 + (15 Sqrt[3])/2)/51}, {83/204, (1/2 + 8 Sqrt[3])/51}, {
         27/68, (1/2 + (17 Sqrt[3])/2)/51}, {83/204, (1/2 + 9 Sqrt[3])/51}, {
         27/68, (1/2 + (19 Sqrt[3])/2)/51}, {83/204, (1/2 + 10 Sqrt[3])/51}, {
         27/68, (1/2 + (21 Sqrt[3])/2)/51}, {83/204, (1/2 + 11 Sqrt[3])/51}, {
         27/68, (1/2 + (23 Sqrt[3])/2)/51}, {83/204, (1/2 + 12 Sqrt[3])/51}, {
         27/68, (1/2 + (25 Sqrt[3])/2)/51}, {83/204, (1/2 + 13 Sqrt[3])/51}, {
         27/68, (1/2 + (27 Sqrt[3])/2)/51}, {83/204, (1/2 + 14 Sqrt[3])/51}, {
         27/68, (1/2 + (29 Sqrt[3])/2)/51}, {83/204, (1/2 + 15 Sqrt[3])/51}, {
         27/68, (1/2 + (31 Sqrt[3])/2)/51}, {83/204, (1/2 + 16 Sqrt[3])/51}, {
         27/68, (1/2 + (33 Sqrt[3])/2)/51}, {83/204, (1/2 + 17 Sqrt[3])/51}, {
         27/68, (1/2 + (35 Sqrt[3])/2)/51}, {83/204, (1/2 + 18 Sqrt[3])/51}, {
         27/68, (1/2 + (37 Sqrt[3])/2)/51}, {83/204, (1/2 + 19 Sqrt[3])/51}, {
         27/68, (1/2 + (39 Sqrt[3])/2)/51}, {83/204, (1/2 + 20 Sqrt[3])/51}, {
         27/68, (1/2 + (41 Sqrt[3])/2)/51}, {83/204, (1/2 + 21 Sqrt[3])/51}, {
         27/68, (1/2 + (43 Sqrt[3])/2)/51}, {83/204, (1/2 + 22 Sqrt[3])/51}, {
         27/68, (1/2 + (45 Sqrt[3])/2)/51}, {83/204, (1/2 + 23 Sqrt[3])/51}, {
         27/68, (1/2 + (47 Sqrt[3])/2)/51}, {83/204, (1/2 + 24 Sqrt[3])/51}, {
         27/68, (1/2 + (49 Sqrt[3])/2)/51}, {83/204, (1/2 + 25 Sqrt[3])/51}, {
         27/68, (1/2 + (51 Sqrt[3])/2)/51}, {83/204, (1/2 + 26 Sqrt[3])/51}, {
         27/68, (1/2 + (53 Sqrt[3])/2)/51}, {83/204, (1/2 + 27 Sqrt[3])/51}, {
         27/68, (1/2 + (55 Sqrt[3])/2)/51}, {83/204, (1/2 + 28 Sqrt[3])/51}, {
         27/68, (1/2 + (57 Sqrt[3])/2)/51}, {83/204, (1/2 + 29 Sqrt[3])/51}, {
         29/68, 1/102}, {5/12, (1/2 + Sqrt[3]/2)/51}, {
         29/68, (1/2 + Sqrt[3])/51}, {5/12, (1/2 + (3 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 2 Sqrt[3])/51}, {5/12, (1/2 + (5 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 3 Sqrt[3])/51}, {5/12, (1/2 + (7 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 4 Sqrt[3])/51}, {5/12, (1/2 + (9 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 5 Sqrt[3])/51}, {5/12, (1/2 + (11 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 6 Sqrt[3])/51}, {5/12, (1/2 + (13 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 7 Sqrt[3])/51}, {5/12, (1/2 + (15 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 8 Sqrt[3])/51}, {5/12, (1/2 + (17 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 9 Sqrt[3])/51}, {5/12, (1/2 + (19 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 10 Sqrt[3])/51}, {5/12, (1/2 + (21 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 11 Sqrt[3])/51}, {5/12, (1/2 + (23 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 12 Sqrt[3])/51}, {5/12, (1/2 + (25 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 13 Sqrt[3])/51}, {5/12, (1/2 + (27 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 14 Sqrt[3])/51}, {5/12, (1/2 + (29 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 15 Sqrt[3])/51}, {5/12, (1/2 + (31 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 16 Sqrt[3])/51}, {5/12, (1/2 + (33 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 17 Sqrt[3])/51}, {5/12, (1/2 + (35 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 18 Sqrt[3])/51}, {5/12, (1/2 + (37 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 19 Sqrt[3])/51}, {5/12, (1/2 + (39 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 20 Sqrt[3])/51}, {5/12, (1/2 + (41 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 21 Sqrt[3])/51}, {5/12, (1/2 + (43 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 22 Sqrt[3])/51}, {5/12, (1/2 + (45 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 23 Sqrt[3])/51}, {5/12, (1/2 + (47 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 24 Sqrt[3])/51}, {5/12, (1/2 + (49 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 25 Sqrt[3])/51}, {5/12, (1/2 + (51 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 26 Sqrt[3])/51}, {5/12, (1/2 + (53 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 27 Sqrt[3])/51}, {5/12, (1/2 + (55 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 28 Sqrt[3])/51}, {5/12, (1/2 + (57 Sqrt[3])/2)/51}, {
         29/68, (1/2 + 29 Sqrt[3])/51}, {91/204, 1/102}, {
         89/204, (1/2 + Sqrt[3]/2)/51}, {91/204, (1/2 + Sqrt[3])/51}, {
         89/204, (1/2 + (3 Sqrt[3])/2)/51}, {91/204, (1/2 + 2 Sqrt[3])/51}, {
         89/204, (1/2 + (5 Sqrt[3])/2)/51}, {91/204, (1/2 + 3 Sqrt[3])/51}, {
         89/204, (1/2 + (7 Sqrt[3])/2)/51}, {91/204, (1/2 + 4 Sqrt[3])/51}, {
         89/204, (1/2 + (9 Sqrt[3])/2)/51}, {91/204, (1/2 + 5 Sqrt[3])/51}, {
         89/204, (1/2 + (11 Sqrt[3])/2)/51}, {91/204, (1/2 + 6 Sqrt[3])/51}, {
         89/204, (1/2 + (13 Sqrt[3])/2)/51}, {91/204, (1/2 + 7 Sqrt[3])/51}, {
         89/204, (1/2 + (15 Sqrt[3])/2)/51}, {91/204, (1/2 + 8 Sqrt[3])/51}, {
         89/204, (1/2 + (17 Sqrt[3])/2)/51}, {91/204, (1/2 + 9 Sqrt[3])/51}, {
         89/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 10 Sqrt[3])/51}, {
         89/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 11 Sqrt[3])/51}, {
         89/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 12 Sqrt[3])/51}, {
         89/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 13 Sqrt[3])/51}, {
         89/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 14 Sqrt[3])/51}, {
         89/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 15 Sqrt[3])/51}, {
         89/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 16 Sqrt[3])/51}, {
         89/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 17 Sqrt[3])/51}, {
         89/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 18 Sqrt[3])/51}, {
         89/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 19 Sqrt[3])/51}, {
         89/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 20 Sqrt[3])/51}, {
         89/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 21 Sqrt[3])/51}, {
         89/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 22 Sqrt[3])/51}, {
         89/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 23 Sqrt[3])/51}, {
         89/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 24 Sqrt[3])/51}, {
         89/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 25 Sqrt[3])/51}, {
         89/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 26 Sqrt[3])/51}, {
         89/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 27 Sqrt[3])/51}, {
         89/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 28 Sqrt[3])/51}, {
         89/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         91/204, (1/2 + 29 Sqrt[3])/51}, {95/204, 1/102}, {
         31/68, (1/2 + Sqrt[3]/2)/51}, {95/204, (1/2 + Sqrt[3])/51}, {
         31/68, (1/2 + (3 Sqrt[3])/2)/51}, {95/204, (1/2 + 2 Sqrt[3])/51}, {
         31/68, (1/2 + (5 Sqrt[3])/2)/51}, {95/204, (1/2 + 3 Sqrt[3])/51}, {
         31/68, (1/2 + (7 Sqrt[3])/2)/51}, {95/204, (1/2 + 4 Sqrt[3])/51}, {
         31/68, (1/2 + (9 Sqrt[3])/2)/51}, {95/204, (1/2 + 5 Sqrt[3])/51}, {
         31/68, (1/2 + (11 Sqrt[3])/2)/51}, {95/204, (1/2 + 6 Sqrt[3])/51}, {
         31/68, (1/2 + (13 Sqrt[3])/2)/51}, {95/204, (1/2 + 7 Sqrt[3])/51}, {
         31/68, (1/2 + (15 Sqrt[3])/2)/51}, {95/204, (1/2 + 8 Sqrt[3])/51}, {
         31/68, (1/2 + (17 Sqrt[3])/2)/51}, {95/204, (1/2 + 9 Sqrt[3])/51}, {
         31/68, (1/2 + (19 Sqrt[3])/2)/51}, {95/204, (1/2 + 10 Sqrt[3])/51}, {
         31/68, (1/2 + (21 Sqrt[3])/2)/51}, {95/204, (1/2 + 11 Sqrt[3])/51}, {
         31/68, (1/2 + (23 Sqrt[3])/2)/51}, {95/204, (1/2 + 12 Sqrt[3])/51}, {
         31/68, (1/2 + (25 Sqrt[3])/2)/51}, {95/204, (1/2 + 13 Sqrt[3])/51}, {
         31/68, (1/2 + (27 Sqrt[3])/2)/51}, {95/204, (1/2 + 14 Sqrt[3])/51}, {
         31/68, (1/2 + (29 Sqrt[3])/2)/51}, {95/204, (1/2 + 15 Sqrt[3])/51}, {
         31/68, (1/2 + (31 Sqrt[3])/2)/51}, {95/204, (1/2 + 16 Sqrt[3])/51}, {
         31/68, (1/2 + (33 Sqrt[3])/2)/51}, {95/204, (1/2 + 17 Sqrt[3])/51}, {
         31/68, (1/2 + (35 Sqrt[3])/2)/51}, {95/204, (1/2 + 18 Sqrt[3])/51}, {
         31/68, (1/2 + (37 Sqrt[3])/2)/51}, {95/204, (1/2 + 19 Sqrt[3])/51}, {
         31/68, (1/2 + (39 Sqrt[3])/2)/51}, {95/204, (1/2 + 20 Sqrt[3])/51}, {
         31/68, (1/2 + (41 Sqrt[3])/2)/51}, {95/204, (1/2 + 21 Sqrt[3])/51}, {
         31/68, (1/2 + (43 Sqrt[3])/2)/51}, {95/204, (1/2 + 22 Sqrt[3])/51}, {
         31/68, (1/2 + (45 Sqrt[3])/2)/51}, {95/204, (1/2 + 23 Sqrt[3])/51}, {
         31/68, (1/2 + (47 Sqrt[3])/2)/51}, {95/204, (1/2 + 24 Sqrt[3])/51}, {
         31/68, (1/2 + (49 Sqrt[3])/2)/51}, {95/204, (1/2 + 25 Sqrt[3])/51}, {
         31/68, (1/2 + (51 Sqrt[3])/2)/51}, {95/204, (1/2 + 26 Sqrt[3])/51}, {
         31/68, (1/2 + (53 Sqrt[3])/2)/51}, {95/204, (1/2 + 27 Sqrt[3])/51}, {
         31/68, (1/2 + (55 Sqrt[3])/2)/51}, {95/204, (1/2 + 28 Sqrt[3])/51}, {
         31/68, (1/2 + (57 Sqrt[3])/2)/51}, {95/204, (1/2 + 29 Sqrt[3])/51}, {
         33/68, 1/102}, {97/204, (1/2 + Sqrt[3]/2)/51}, {
         33/68, (1/2 + Sqrt[3])/51}, {97/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 2 Sqrt[3])/51}, {97/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 3 Sqrt[3])/51}, {97/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 4 Sqrt[3])/51}, {97/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 5 Sqrt[3])/51}, {97/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 6 Sqrt[3])/51}, {97/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 7 Sqrt[3])/51}, {97/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 8 Sqrt[3])/51}, {97/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 9 Sqrt[3])/51}, {97/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 10 Sqrt[3])/51}, {97/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 11 Sqrt[3])/51}, {97/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 12 Sqrt[3])/51}, {97/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 13 Sqrt[3])/51}, {97/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 14 Sqrt[3])/51}, {97/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 15 Sqrt[3])/51}, {97/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 16 Sqrt[3])/51}, {97/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 17 Sqrt[3])/51}, {97/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 18 Sqrt[3])/51}, {97/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 19 Sqrt[3])/51}, {97/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 20 Sqrt[3])/51}, {97/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 21 Sqrt[3])/51}, {97/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 22 Sqrt[3])/51}, {97/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 23 Sqrt[3])/51}, {97/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 24 Sqrt[3])/51}, {97/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 25 Sqrt[3])/51}, {97/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 26 Sqrt[3])/51}, {97/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 27 Sqrt[3])/51}, {97/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 28 Sqrt[3])/51}, {97/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         33/68, (1/2 + 29 Sqrt[3])/51}, {103/204, 1/102}, {
         101/204, (1/2 + Sqrt[3]/2)/51}, {103/204, (1/2 + Sqrt[3])/51}, {
         101/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 2 Sqrt[3])/51}, {
         101/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 3 Sqrt[3])/51}, {
         101/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 4 Sqrt[3])/51}, {
         101/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 5 Sqrt[3])/51}, {
         101/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 6 Sqrt[3])/51}, {
         101/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 7 Sqrt[3])/51}, {
         101/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 8 Sqrt[3])/51}, {
         101/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 9 Sqrt[3])/51}, {
         101/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 10 Sqrt[3])/51}, {
         101/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 11 Sqrt[3])/51}, {
         101/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 12 Sqrt[3])/51}, {
         101/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 13 Sqrt[3])/51}, {
         101/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 14 Sqrt[3])/51}, {
         101/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 15 Sqrt[3])/51}, {
         101/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 16 Sqrt[3])/51}, {
         101/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 17 Sqrt[3])/51}, {
         101/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 18 Sqrt[3])/51}, {
         101/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 19 Sqrt[3])/51}, {
         101/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 20 Sqrt[3])/51}, {
         101/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 21 Sqrt[3])/51}, {
         101/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 22 Sqrt[3])/51}, {
         101/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 23 Sqrt[3])/51}, {
         101/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 24 Sqrt[3])/51}, {
         101/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 25 Sqrt[3])/51}, {
         101/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 26 Sqrt[3])/51}, {
         101/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 27 Sqrt[3])/51}, {
         101/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 28 Sqrt[3])/51}, {
         101/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         103/204, (1/2 + 29 Sqrt[3])/51}, {107/204, 1/102}, {
         35/68, (1/2 + Sqrt[3]/2)/51}, {107/204, (1/2 + Sqrt[3])/51}, {
         35/68, (1/2 + (3 Sqrt[3])/2)/51}, {107/204, (1/2 + 2 Sqrt[3])/51}, {
         35/68, (1/2 + (5 Sqrt[3])/2)/51}, {107/204, (1/2 + 3 Sqrt[3])/51}, {
         35/68, (1/2 + (7 Sqrt[3])/2)/51}, {107/204, (1/2 + 4 Sqrt[3])/51}, {
         35/68, (1/2 + (9 Sqrt[3])/2)/51}, {107/204, (1/2 + 5 Sqrt[3])/51}, {
         35/68, (1/2 + (11 Sqrt[3])/2)/51}, {107/204, (1/2 + 6 Sqrt[3])/51}, {
         35/68, (1/2 + (13 Sqrt[3])/2)/51}, {107/204, (1/2 + 7 Sqrt[3])/51}, {
         35/68, (1/2 + (15 Sqrt[3])/2)/51}, {107/204, (1/2 + 8 Sqrt[3])/51}, {
         35/68, (1/2 + (17 Sqrt[3])/2)/51}, {107/204, (1/2 + 9 Sqrt[3])/51}, {
         35/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 10 Sqrt[3])/51}, {
         35/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 11 Sqrt[3])/51}, {
         35/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 12 Sqrt[3])/51}, {
         35/68, (1/2 + (25 Sqrt[3])/2)/51}, {107/204, (1/2 + 13 Sqrt[3])/51},
          {35/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 14 Sqrt[3])/51}, {
         35/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 15 Sqrt[3])/51}, {
         35/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 16 Sqrt[3])/51}, {
         35/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 17 Sqrt[3])/51}, {
         35/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 18 Sqrt[3])/51}, {
         35/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 19 Sqrt[3])/51}, {
         35/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 20 Sqrt[3])/51}, {
         35/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 21 Sqrt[3])/51}, {
         35/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 22 Sqrt[3])/51}, {
         35/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 23 Sqrt[3])/51}, {
         35/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 24 Sqrt[3])/51}, {
         35/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 25 Sqrt[3])/51}, {
         35/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 26 Sqrt[3])/51}, {
         35/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 27 Sqrt[3])/51}, {
         35/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 28 Sqrt[3])/51}, {
         35/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         107/204, (1/2 + 29 Sqrt[3])/51}, {37/68, 1/102}, {
         109/204, (1/2 + Sqrt[3]/2)/51}, {37/68, (1/2 + Sqrt[3])/51}, {
         109/204, (1/2 + (3 Sqrt[3])/2)/51}, {37/68, (1/2 + 2 Sqrt[3])/51}, {
         109/204, (1/2 + (5 Sqrt[3])/2)/51}, {37/68, (1/2 + 3 Sqrt[3])/51}, {
         109/204, (1/2 + (7 Sqrt[3])/2)/51}, {37/68, (1/2 + 4 Sqrt[3])/51}, {
         109/204, (1/2 + (9 Sqrt[3])/2)/51}, {37/68, (1/2 + 5 Sqrt[3])/51}, {
         109/204, (1/2 + (11 Sqrt[3])/2)/51}, {37/68, (1/2 + 6 Sqrt[3])/51}, {
         109/204, (1/2 + (13 Sqrt[3])/2)/51}, {37/68, (1/2 + 7 Sqrt[3])/51}, {
         109/204, (1/2 + (15 Sqrt[3])/2)/51}, {37/68, (1/2 + 8 Sqrt[3])/51}, {
         109/204, (1/2 + (17 Sqrt[3])/2)/51}, {37/68, (1/2 + 9 Sqrt[3])/51}, {
         109/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 10 Sqrt[3])/51}, {
         109/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 11 Sqrt[3])/51}, {
         109/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 12 Sqrt[3])/51}, {
         109/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 13 Sqrt[3])/51}, {
         109/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 14 Sqrt[3])/51}, {
         109/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 15 Sqrt[3])/51}, {
         109/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 16 Sqrt[3])/51}, {
         109/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 17 Sqrt[3])/51}, {
         109/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 18 Sqrt[3])/51}, {
         109/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 19 Sqrt[3])/51}, {
         109/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 20 Sqrt[3])/51}, {
         109/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 21 Sqrt[3])/51}, {
         109/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 22 Sqrt[3])/51}, {
         109/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 23 Sqrt[3])/51}, {
         109/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 24 Sqrt[3])/51}, {
         109/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 25 Sqrt[3])/51}, {
         109/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 26 Sqrt[3])/51}, {
         109/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 27 Sqrt[3])/51}, {
         109/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 28 Sqrt[3])/51}, {
         109/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         37/68, (1/2 + 29 Sqrt[3])/51}, {115/204, 1/102}, {
         113/204, (1/2 + Sqrt[3]/2)/51}, {115/204, (1/2 + Sqrt[3])/51}, {
         113/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 2 Sqrt[3])/51}, {
         113/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 3 Sqrt[3])/51}, {
         113/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 4 Sqrt[3])/51}, {
         113/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 5 Sqrt[3])/51}, {
         113/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 6 Sqrt[3])/51}, {
         113/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 7 Sqrt[3])/51}, {
         113/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 8 Sqrt[3])/51}, {
         113/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 9 Sqrt[3])/51}, {
         113/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 10 Sqrt[3])/51}, {
         113/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 11 Sqrt[3])/51}, {
         113/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 12 Sqrt[3])/51}, {
         113/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 13 Sqrt[3])/51}, {
         113/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 14 Sqrt[3])/51}, {
         113/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 15 Sqrt[3])/51}, {
         113/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 16 Sqrt[3])/51}, {
         113/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 17 Sqrt[3])/51}, {
         113/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 18 Sqrt[3])/51}, {
         113/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 19 Sqrt[3])/51}, {
         113/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 20 Sqrt[3])/51}, {
         113/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 21 Sqrt[3])/51}, {
         113/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 22 Sqrt[3])/51}, {
         113/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 23 Sqrt[3])/51}, {
         113/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 24 Sqrt[3])/51}, {
         113/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 25 Sqrt[3])/51}, {
         113/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 26 Sqrt[3])/51}, {
         113/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 27 Sqrt[3])/51}, {
         113/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 28 Sqrt[3])/51}, {
         113/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         115/204, (1/2 + 29 Sqrt[3])/51}, {7/12, 1/102}, {
         39/68, (1/2 + Sqrt[3]/2)/51}, {7/12, (1/2 + Sqrt[3])/51}, {
         39/68, (1/2 + (3 Sqrt[3])/2)/51}, {7/12, (1/2 + 2 Sqrt[3])/51}, {
         39/68, (1/2 + (5 Sqrt[3])/2)/51}, {7/12, (1/2 + 3 Sqrt[3])/51}, {
         39/68, (1/2 + (7 Sqrt[3])/2)/51}, {7/12, (1/2 + 4 Sqrt[3])/51}, {
         39/68, (1/2 + (9 Sqrt[3])/2)/51}, {7/12, (1/2 + 5 Sqrt[3])/51}, {
         39/68, (1/2 + (11 Sqrt[3])/2)/51}, {7/12, (1/2 + 6 Sqrt[3])/51}, {
         39/68, (1/2 + (13 Sqrt[3])/2)/51}, {7/12, (1/2 + 7 Sqrt[3])/51}, {
         39/68, (1/2 + (15 Sqrt[3])/2)/51}, {7/12, (1/2 + 8 Sqrt[3])/51}, {
         39/68, (1/2 + (17 Sqrt[3])/2)/51}, {7/12, (1/2 + 9 Sqrt[3])/51}, {
         39/68, (1/2 + (19 Sqrt[3])/2)/51}, {7/12, (1/2 + 10 Sqrt[3])/51}, {
         39/68, (1/2 + (21 Sqrt[3])/2)/51}, {7/12, (1/2 + 11 Sqrt[3])/51}, {
         39/68, (1/2 + (23 Sqrt[3])/2)/51}, {7/12, (1/2 + 12 Sqrt[3])/51}, {
         39/68, (1/2 + (25 Sqrt[3])/2)/51}, {7/12, (1/2 + 13 Sqrt[3])/51}, {
         39/68, (1/2 + (27 Sqrt[3])/2)/51}, {7/12, (1/2 + 14 Sqrt[3])/51}, {
         39/68, (1/2 + (29 Sqrt[3])/2)/51}, {7/12, (1/2 + 15 Sqrt[3])/51}, {
         39/68, (1/2 + (31 Sqrt[3])/2)/51}, {7/12, (1/2 + 16 Sqrt[3])/51}, {
         39/68, (1/2 + (33 Sqrt[3])/2)/51}, {7/12, (1/2 + 17 Sqrt[3])/51}, {
         39/68, (1/2 + (35 Sqrt[3])/2)/51}, {7/12, (1/2 + 18 Sqrt[3])/51}, {
         39/68, (1/2 + (37 Sqrt[3])/2)/51}, {7/12, (1/2 + 19 Sqrt[3])/51}, {
         39/68, (1/2 + (39 Sqrt[3])/2)/51}, {7/12, (1/2 + 20 Sqrt[3])/51}, {
         39/68, (1/2 + (41 Sqrt[3])/2)/51}, {7/12, (1/2 + 21 Sqrt[3])/51}, {
         39/68, (1/2 + (43 Sqrt[3])/2)/51}, {7/12, (1/2 + 22 Sqrt[3])/51}, {
         39/68, (1/2 + (45 Sqrt[3])/2)/51}, {7/12, (1/2 + 23 Sqrt[3])/51}, {
         39/68, (1/2 + (47 Sqrt[3])/2)/51}, {7/12, (1/2 + 24 Sqrt[3])/51}, {
         39/68, (1/2 + (49 Sqrt[3])/2)/51}, {7/12, (1/2 + 25 Sqrt[3])/51}, {
         39/68, (1/2 + (51 Sqrt[3])/2)/51}, {7/12, (1/2 + 26 Sqrt[3])/51}, {
         39/68, (1/2 + (53 Sqrt[3])/2)/51}, {7/12, (1/2 + 27 Sqrt[3])/51}, {
         39/68, (1/2 + (55 Sqrt[3])/2)/51}, {7/12, (1/2 + 28 Sqrt[3])/51}, {
         39/68, (1/2 + (57 Sqrt[3])/2)/51}, {7/12, (1/2 + 29 Sqrt[3])/51}, {
         41/68, 1/102}, {121/204, (1/2 + Sqrt[3]/2)/51}, {
         41/68, (1/2 + Sqrt[3])/51}, {121/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 2 Sqrt[3])/51}, {121/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 3 Sqrt[3])/51}, {121/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 4 Sqrt[3])/51}, {121/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 5 Sqrt[3])/51}, {121/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 6 Sqrt[3])/51}, {121/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 7 Sqrt[3])/51}, {121/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 8 Sqrt[3])/51}, {121/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 9 Sqrt[3])/51}, {121/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 10 Sqrt[3])/51}, {
         121/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 11 Sqrt[3])/51}, {
         121/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 12 Sqrt[3])/51}, {
         121/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 13 Sqrt[3])/51}, {
         121/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 14 Sqrt[3])/51}, {
         121/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 15 Sqrt[3])/51}, {
         121/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 16 Sqrt[3])/51}, {
         121/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 17 Sqrt[3])/51}, {
         121/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 18 Sqrt[3])/51}, {
         121/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 19 Sqrt[3])/51}, {
         121/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 20 Sqrt[3])/51}, {
         121/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 21 Sqrt[3])/51}, {
         121/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 22 Sqrt[3])/51}, {
         121/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 23 Sqrt[3])/51}, {
         121/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 24 Sqrt[3])/51}, {
         121/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 25 Sqrt[3])/51}, {
         121/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 26 Sqrt[3])/51}, {
         121/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 27 Sqrt[3])/51}, {
         121/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 28 Sqrt[3])/51}, {
         121/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         41/68, (1/2 + 29 Sqrt[3])/51}, {127/204, 1/102}, {
         125/204, (1/2 + Sqrt[3]/2)/51}, {127/204, (1/2 + Sqrt[3])/51}, {
         125/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 2 Sqrt[3])/51}, {
         125/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 3 Sqrt[3])/51}, {
         125/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 4 Sqrt[3])/51}, {
         125/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 5 Sqrt[3])/51}, {
         125/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 6 Sqrt[3])/51}, {
         125/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 7 Sqrt[3])/51}, {
         125/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 8 Sqrt[3])/51}, {
         125/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 9 Sqrt[3])/51}, {
         125/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 10 Sqrt[3])/51}, {
         125/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 11 Sqrt[3])/51}, {
         125/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 12 Sqrt[3])/51}, {
         125/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 13 Sqrt[3])/51}, {
         125/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 14 Sqrt[3])/51}, {
         125/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 15 Sqrt[3])/51}, {
         125/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 16 Sqrt[3])/51}, {
         125/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 17 Sqrt[3])/51}, {
         125/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 18 Sqrt[3])/51}, {
         125/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 19 Sqrt[3])/51}, {
         125/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 20 Sqrt[3])/51}, {
         125/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 21 Sqrt[3])/51}, {
         125/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 22 Sqrt[3])/51}, {
         125/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 23 Sqrt[3])/51}, {
         125/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 24 Sqrt[3])/51}, {
         125/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 25 Sqrt[3])/51}, {
         125/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 26 Sqrt[3])/51}, {
         125/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 27 Sqrt[3])/51}, {
         125/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 28 Sqrt[3])/51}, {
         125/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         127/204, (1/2 + 29 Sqrt[3])/51}, {131/204, 1/102}, {
         43/68, (1/2 + Sqrt[3]/2)/51}, {131/204, (1/2 + Sqrt[3])/51}, {
         43/68, (1/2 + (3 Sqrt[3])/2)/51}, {131/204, (1/2 + 2 Sqrt[3])/51}, {
         43/68, (1/2 + (5 Sqrt[3])/2)/51}, {131/204, (1/2 + 3 Sqrt[3])/51}, {
         43/68, (1/2 + (7 Sqrt[3])/2)/51}, {131/204, (1/2 + 4 Sqrt[3])/51}, {
         43/68, (1/2 + (9 Sqrt[3])/2)/51}, {131/204, (1/2 + 5 Sqrt[3])/51}, {
         43/68, (1/2 + (11 Sqrt[3])/2)/51}, {131/204, (1/2 + 6 Sqrt[3])/51}, {
         43/68, (1/2 + (13 Sqrt[3])/2)/51}, {131/204, (1/2 + 7 Sqrt[3])/51}, {
         43/68, (1/2 + (15 Sqrt[3])/2)/51}, {131/204, (1/2 + 8 Sqrt[3])/51}, {
         43/68, (1/2 + (17 Sqrt[3])/2)/51}, {131/204, (1/2 + 9 Sqrt[3])/51}, {
         43/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 10 Sqrt[3])/51}, {
         43/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 11 Sqrt[3])/51}, {
         43/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 12 Sqrt[3])/51}, {
         43/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 13 Sqrt[3])/51}, {
         43/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 14 Sqrt[3])/51}, {
         43/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 15 Sqrt[3])/51}, {
         43/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 16 Sqrt[3])/51}, {
         43/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 17 Sqrt[3])/51}, {
         43/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 18 Sqrt[3])/51}, {
         43/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 19 Sqrt[3])/51}, {
         43/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 20 Sqrt[3])/51}, {
         43/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 21 Sqrt[3])/51}, {
         43/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 22 Sqrt[3])/51}, {
         43/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 23 Sqrt[3])/51}, {
         43/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 24 Sqrt[3])/51}, {
         43/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 25 Sqrt[3])/51}, {
         43/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 26 Sqrt[3])/51}, {
         43/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 27 Sqrt[3])/51}, {
         43/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 28 Sqrt[3])/51}, {
         43/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         131/204, (1/2 + 29 Sqrt[3])/51}, {45/68, 1/102}, {
         133/204, (1/2 + Sqrt[3]/2)/51}, {45/68, (1/2 + Sqrt[3])/51}, {
         133/204, (1/2 + (3 Sqrt[3])/2)/51}, {45/68, (1/2 + 2 Sqrt[3])/51}, {
         133/204, (1/2 + (5 Sqrt[3])/2)/51}, {45/68, (1/2 + 3 Sqrt[3])/51}, {
         133/204, (1/2 + (7 Sqrt[3])/2)/51}, {45/68, (1/2 + 4 Sqrt[3])/51}, {
         133/204, (1/2 + (9 Sqrt[3])/2)/51}, {45/68, (1/2 + 5 Sqrt[3])/51}, {
         133/204, (1/2 + (11 Sqrt[3])/2)/51}, {45/68, (1/2 + 6 Sqrt[3])/51}, {
         133/204, (1/2 + (13 Sqrt[3])/2)/51}, {45/68, (1/2 + 7 Sqrt[3])/51}, {
         133/204, (1/2 + (15 Sqrt[3])/2)/51}, {45/68, (1/2 + 8 Sqrt[3])/51}, {
         133/204, (1/2 + (17 Sqrt[3])/2)/51}, {45/68, (1/2 + 9 Sqrt[3])/51}, {
         133/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 10 Sqrt[3])/51}, {
         133/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 11 Sqrt[3])/51}, {
         133/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 12 Sqrt[3])/51}, {
         133/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 13 Sqrt[3])/51}, {
         133/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 14 Sqrt[3])/51}, {
         133/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 15 Sqrt[3])/51}, {
         133/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 16 Sqrt[3])/51}, {
         133/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 17 Sqrt[3])/51}, {
         133/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 18 Sqrt[3])/51}, {
         133/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 19 Sqrt[3])/51}, {
         133/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 20 Sqrt[3])/51}, {
         133/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 21 Sqrt[3])/51}, {
         133/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 22 Sqrt[3])/51}, {
         133/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 23 Sqrt[3])/51}, {
         133/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 24 Sqrt[3])/51}, {
         133/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 25 Sqrt[3])/51}, {
         133/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 26 Sqrt[3])/51}, {
         133/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 27 Sqrt[3])/51}, {
         133/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 28 Sqrt[3])/51}, {
         133/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         45/68, (1/2 + 29 Sqrt[3])/51}, {139/204, 1/102}, {
         137/204, (1/2 + Sqrt[3]/2)/51}, {139/204, (1/2 + Sqrt[3])/51}, {
         137/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 2 Sqrt[3])/51}, {
         137/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 3 Sqrt[3])/51}, {
         137/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 4 Sqrt[3])/51}, {
         137/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 5 Sqrt[3])/51}, {
         137/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 6 Sqrt[3])/51}, {
         137/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 7 Sqrt[3])/51}, {
         137/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 8 Sqrt[3])/51}, {
         137/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 9 Sqrt[3])/51}, {
         137/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 10 Sqrt[3])/51}, {
         137/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 11 Sqrt[3])/51}, {
         137/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 12 Sqrt[3])/51}, {
         137/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 13 Sqrt[3])/51}, {
         137/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 14 Sqrt[3])/51}, {
         137/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 15 Sqrt[3])/51}, {
         137/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 16 Sqrt[3])/51}, {
         137/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 17 Sqrt[3])/51}, {
         137/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 18 Sqrt[3])/51}, {
         137/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 19 Sqrt[3])/51}, {
         137/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 20 Sqrt[3])/51}, {
         137/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 21 Sqrt[3])/51}, {
         137/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 22 Sqrt[3])/51}, {
         137/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 23 Sqrt[3])/51}, {
         137/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 24 Sqrt[3])/51}, {
         137/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 25 Sqrt[3])/51}, {
         137/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 26 Sqrt[3])/51}, {
         137/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 27 Sqrt[3])/51}, {
         137/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 28 Sqrt[3])/51}, {
         137/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         139/204, (1/2 + 29 Sqrt[3])/51}, {143/204, 1/102}, {
         47/68, (1/2 + Sqrt[3]/2)/51}, {143/204, (1/2 + Sqrt[3])/51}, {
         47/68, (1/2 + (3 Sqrt[3])/2)/51}, {143/204, (1/2 + 2 Sqrt[3])/51}, {
         47/68, (1/2 + (5 Sqrt[3])/2)/51}, {143/204, (1/2 + 3 Sqrt[3])/51}, {
         47/68, (1/2 + (7 Sqrt[3])/2)/51}, {143/204, (1/2 + 4 Sqrt[3])/51}, {
         47/68, (1/2 + (9 Sqrt[3])/2)/51}, {143/204, (1/2 + 5 Sqrt[3])/51}, {
         47/68, (1/2 + (11 Sqrt[3])/2)/51}, {143/204, (1/2 + 6 Sqrt[3])/51}, {
         47/68, (1/2 + (13 Sqrt[3])/2)/51}, {143/204, (1/2 + 7 Sqrt[3])/51}, {
         47/68, (1/2 + (15 Sqrt[3])/2)/51}, {143/204, (1/2 + 8 Sqrt[3])/51}, {
         47/68, (1/2 + (17 Sqrt[3])/2)/51}, {143/204, (1/2 + 9 Sqrt[3])/51}, {
         47/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 10 Sqrt[3])/51}, {
         47/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 11 Sqrt[3])/51}, {
         47/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 12 Sqrt[3])/51}, {
         47/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 13 Sqrt[3])/51}, {
         47/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 14 Sqrt[3])/51}, {
         47/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 15 Sqrt[3])/51}, {
         47/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 16 Sqrt[3])/51}, {
         47/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 17 Sqrt[3])/51}, {
         47/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 18 Sqrt[3])/51}, {
         47/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 19 Sqrt[3])/51}, {
         47/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 20 Sqrt[3])/51}, {
         47/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 21 Sqrt[3])/51}, {
         47/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 22 Sqrt[3])/51}, {
         47/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 23 Sqrt[3])/51}, {
         47/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 24 Sqrt[3])/51}, {
         47/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 25 Sqrt[3])/51}, {
         47/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 26 Sqrt[3])/51}, {
         47/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 27 Sqrt[3])/51}, {
         47/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 28 Sqrt[3])/51}, {
         47/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         143/204, (1/2 + 29 Sqrt[3])/51}, {49/68, 1/102}, {
         145/204, (1/2 + Sqrt[3]/2)/51}, {49/68, (1/2 + Sqrt[3])/51}, {
         145/204, (1/2 + (3 Sqrt[3])/2)/51}, {49/68, (1/2 + 2 Sqrt[3])/51}, {
         145/204, (1/2 + (5 Sqrt[3])/2)/51}, {49/68, (1/2 + 3 Sqrt[3])/51}, {
         145/204, (1/2 + (7 Sqrt[3])/2)/51}, {49/68, (1/2 + 4 Sqrt[3])/51}, {
         145/204, (1/2 + (9 Sqrt[3])/2)/51}, {49/68, (1/2 + 5 Sqrt[3])/51}, {
         145/204, (1/2 + (11 Sqrt[3])/2)/51}, {49/68, (1/2 + 6 Sqrt[3])/51}, {
         145/204, (1/2 + (13 Sqrt[3])/2)/51}, {49/68, (1/2 + 7 Sqrt[3])/51}, {
         145/204, (1/2 + (15 Sqrt[3])/2)/51}, {49/68, (1/2 + 8 Sqrt[3])/51}, {
         145/204, (1/2 + (17 Sqrt[3])/2)/51}, {49/68, (1/2 + 9 Sqrt[3])/51}, {
         145/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 10 Sqrt[3])/51}, {
         145/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 11 Sqrt[3])/51}, {
         145/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 12 Sqrt[3])/51}, {
         145/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 13 Sqrt[3])/51}, {
         145/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 14 Sqrt[3])/51}, {
         145/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 15 Sqrt[3])/51}, {
         145/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 16 Sqrt[3])/51}, {
         145/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 17 Sqrt[3])/51}, {
         145/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 18 Sqrt[3])/51}, {
         145/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 19 Sqrt[3])/51}, {
         145/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 20 Sqrt[3])/51}, {
         145/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 21 Sqrt[3])/51}, {
         145/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 22 Sqrt[3])/51}, {
         145/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 23 Sqrt[3])/51}, {
         145/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 24 Sqrt[3])/51}, {
         145/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 25 Sqrt[3])/51}, {
         145/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 26 Sqrt[3])/51}, {
         145/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 27 Sqrt[3])/51}, {
         145/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 28 Sqrt[3])/51}, {
         145/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         49/68, (1/2 + 29 Sqrt[3])/51}, {151/204, 1/102}, {
         149/204, (1/2 + Sqrt[3]/2)/51}, {151/204, (1/2 + Sqrt[3])/51}, {
         149/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 2 Sqrt[3])/51}, {
         149/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 3 Sqrt[3])/51}, {
         149/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 4 Sqrt[3])/51}, {
         149/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 5 Sqrt[3])/51}, {
         149/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 6 Sqrt[3])/51}, {
         149/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 7 Sqrt[3])/51}, {
         149/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 8 Sqrt[3])/51}, {
         149/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 9 Sqrt[3])/51}, {
         149/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 10 Sqrt[3])/51}, {
         149/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 11 Sqrt[3])/51}, {
         149/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 12 Sqrt[3])/51}, {
         149/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 13 Sqrt[3])/51}, {
         149/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 14 Sqrt[3])/51}, {
         149/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 15 Sqrt[3])/51}, {
         149/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 16 Sqrt[3])/51}, {
         149/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 17 Sqrt[3])/51}, {
         149/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 18 Sqrt[3])/51}, {
         149/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 19 Sqrt[3])/51}, {
         149/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 20 Sqrt[3])/51}, {
         149/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 21 Sqrt[3])/51}, {
         149/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 22 Sqrt[3])/51}, {
         149/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 23 Sqrt[3])/51}, {
         149/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 24 Sqrt[3])/51}, {
         149/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 25 Sqrt[3])/51}, {
         149/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 26 Sqrt[3])/51}, {
         149/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 27 Sqrt[3])/51}, {
         149/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 28 Sqrt[3])/51}, {
         149/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         151/204, (1/2 + 29 Sqrt[3])/51}, {155/204, 1/102}, {
         3/4, (1/2 + Sqrt[3]/2)/51}, {155/204, (1/2 + Sqrt[3])/51}, {
         3/4, (1/2 + (3 Sqrt[3])/2)/51}, {155/204, (1/2 + 2 Sqrt[3])/51}, {
         3/4, (1/2 + (5 Sqrt[3])/2)/51}, {155/204, (1/2 + 3 Sqrt[3])/51}, {
         3/4, (1/2 + (7 Sqrt[3])/2)/51}, {155/204, (1/2 + 4 Sqrt[3])/51}, {
         3/4, (1/2 + (9 Sqrt[3])/2)/51}, {155/204, (1/2 + 5 Sqrt[3])/51}, {
         3/4, (1/2 + (11 Sqrt[3])/2)/51}, {155/204, (1/2 + 6 Sqrt[3])/51}, {
         3/4, (1/2 + (13 Sqrt[3])/2)/51}, {155/204, (1/2 + 7 Sqrt[3])/51}, {
         3/4, (1/2 + (15 Sqrt[3])/2)/51}, {155/204, (1/2 + 8 Sqrt[3])/51}, {
         3/4, (1/2 + (17 Sqrt[3])/2)/51}, {155/204, (1/2 + 9 Sqrt[3])/51}, {
         3/4, (1/2 + (19 Sqrt[3])/2)/51}, {155/204, (1/2 + 10 Sqrt[3])/51}, {
         3/4, (1/2 + (21 Sqrt[3])/2)/51}, {155/204, (1/2 + 11 Sqrt[3])/51}, {
         3/4, (1/2 + (23 Sqrt[3])/2)/51}, {155/204, (1/2 + 12 Sqrt[3])/51}, {
         3/4, (1/2 + (25 Sqrt[3])/2)/51}, {155/204, (1/2 + 13 Sqrt[3])/51}, {
         3/4, (1/2 + (27 Sqrt[3])/2)/51}, {155/204, (1/2 + 14 Sqrt[3])/51}, {
         3/4, (1/2 + (29 Sqrt[3])/2)/51}, {155/204, (1/2 + 15 Sqrt[3])/51}, {
         3/4, (1/2 + (31 Sqrt[3])/2)/51}, {155/204, (1/2 + 16 Sqrt[3])/51}, {
         3/4, (1/2 + (33 Sqrt[3])/2)/51}, {155/204, (1/2 + 17 Sqrt[3])/51}, {
         3/4, (1/2 + (35 Sqrt[3])/2)/51}, {155/204, (1/2 + 18 Sqrt[3])/51}, {
         3/4, (1/2 + (37 Sqrt[3])/2)/51}, {155/204, (1/2 + 19 Sqrt[3])/51}, {
         3/4, (1/2 + (39 Sqrt[3])/2)/51}, {155/204, (1/2 + 20 Sqrt[3])/51}, {
         3/4, (1/2 + (41 Sqrt[3])/2)/51}, {155/204, (1/2 + 21 Sqrt[3])/51}, {
         3/4, (1/2 + (43 Sqrt[3])/2)/51}, {155/204, (1/2 + 22 Sqrt[3])/51}, {
         3/4, (1/2 + (45 Sqrt[3])/2)/51}, {155/204, (1/2 + 23 Sqrt[3])/51}, {
         3/4, (1/2 + (47 Sqrt[3])/2)/51}, {155/204, (1/2 + 24 Sqrt[3])/51}, {
         3/4, (1/2 + (49 Sqrt[3])/2)/51}, {155/204, (1/2 + 25 Sqrt[3])/51}, {
         3/4, (1/2 + (51 Sqrt[3])/2)/51}, {155/204, (1/2 + 26 Sqrt[3])/51}, {
         3/4, (1/2 + (53 Sqrt[3])/2)/51}, {155/204, (1/2 + 27 Sqrt[3])/51}, {
         3/4, (1/2 + (55 Sqrt[3])/2)/51}, {155/204, (1/2 + 28 Sqrt[3])/51}, {
         3/4, (1/2 + (57 Sqrt[3])/2)/51}, {155/204, (1/2 + 29 Sqrt[3])/51}, {
         53/68, 1/102}, {157/204, (1/2 + Sqrt[3]/2)/51}, {
         53/68, (1/2 + Sqrt[3])/51}, {157/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 2 Sqrt[3])/51}, {157/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 3 Sqrt[3])/51}, {157/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 4 Sqrt[3])/51}, {157/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 5 Sqrt[3])/51}, {157/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 6 Sqrt[3])/51}, {157/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 7 Sqrt[3])/51}, {157/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 8 Sqrt[3])/51}, {157/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 9 Sqrt[3])/51}, {157/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 10 Sqrt[3])/51}, {
         157/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 11 Sqrt[3])/51}, {
         157/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 12 Sqrt[3])/51}, {
         157/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 13 Sqrt[3])/51}, {
         157/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 14 Sqrt[3])/51}, {
         157/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 15 Sqrt[3])/51}, {
         157/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 16 Sqrt[3])/51}, {
         157/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 17 Sqrt[3])/51}, {
         157/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 18 Sqrt[3])/51}, {
         157/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 19 Sqrt[3])/51}, {
         157/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 20 Sqrt[3])/51}, {
         157/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 21 Sqrt[3])/51}, {
         157/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 22 Sqrt[3])/51}, {
         157/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 23 Sqrt[3])/51}, {
         157/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 24 Sqrt[3])/51}, {
         157/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 25 Sqrt[3])/51}, {
         157/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 26 Sqrt[3])/51}, {
         157/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 27 Sqrt[3])/51}, {
         157/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 28 Sqrt[3])/51}, {
         157/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         53/68, (1/2 + 29 Sqrt[3])/51}, {163/204, 1/102}, {
         161/204, (1/2 + Sqrt[3]/2)/51}, {163/204, (1/2 + Sqrt[3])/51}, {
         161/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 2 Sqrt[3])/51}, {
         161/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 3 Sqrt[3])/51}, {
         161/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 4 Sqrt[3])/51}, {
         161/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 5 Sqrt[3])/51}, {
         161/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 6 Sqrt[3])/51}, {
         161/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 7 Sqrt[3])/51}, {
         161/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 8 Sqrt[3])/51}, {
         161/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 9 Sqrt[3])/51}, {
         161/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 10 Sqrt[3])/51}, {
         161/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 11 Sqrt[3])/51}, {
         161/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 12 Sqrt[3])/51}, {
         161/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 13 Sqrt[3])/51}, {
         161/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 14 Sqrt[3])/51}, {
         161/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 15 Sqrt[3])/51}, {
         161/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 16 Sqrt[3])/51}, {
         161/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 17 Sqrt[3])/51}, {
         161/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 18 Sqrt[3])/51}, {
         161/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 19 Sqrt[3])/51}, {
         161/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 20 Sqrt[3])/51}, {
         161/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 21 Sqrt[3])/51}, {
         161/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 22 Sqrt[3])/51}, {
         161/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 23 Sqrt[3])/51}, {
         161/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 24 Sqrt[3])/51}, {
         161/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 25 Sqrt[3])/51}, {
         161/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 26 Sqrt[3])/51}, {
         161/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 27 Sqrt[3])/51}, {
         161/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 28 Sqrt[3])/51}, {
         161/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         163/204, (1/2 + 29 Sqrt[3])/51}, {167/204, 1/102}, {
         55/68, (1/2 + Sqrt[3]/2)/51}, {167/204, (1/2 + Sqrt[3])/51}, {
         55/68, (1/2 + (3 Sqrt[3])/2)/51}, {167/204, (1/2 + 2 Sqrt[3])/51}, {
         55/68, (1/2 + (5 Sqrt[3])/2)/51}, {167/204, (1/2 + 3 Sqrt[3])/51}, {
         55/68, (1/2 + (7 Sqrt[3])/2)/51}, {167/204, (1/2 + 4 Sqrt[3])/51}, {
         55/68, (1/2 + (9 Sqrt[3])/2)/51}, {167/204, (1/2 + 5 Sqrt[3])/51}, {
         55/68, (1/2 + (11 Sqrt[3])/2)/51}, {167/204, (1/2 + 6 Sqrt[3])/51}, {
         55/68, (1/2 + (13 Sqrt[3])/2)/51}, {167/204, (1/2 + 7 Sqrt[3])/51}, {
         55/68, (1/2 + (15 Sqrt[3])/2)/51}, {167/204, (1/2 + 8 Sqrt[3])/51}, {
         55/68, (1/2 + (17 Sqrt[3])/2)/51}, {167/204, (1/2 + 9 Sqrt[3])/51}, {
         55/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 10 Sqrt[3])/51}, {
         55/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 11 Sqrt[3])/51}, {
         55/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 12 Sqrt[3])/51}, {
         55/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 13 Sqrt[3])/51}, {
         55/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 14 Sqrt[3])/51}, {
         55/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 15 Sqrt[3])/51}, {
         55/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 16 Sqrt[3])/51}, {
         55/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 17 Sqrt[3])/51}, {
         55/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 18 Sqrt[3])/51}, {
         55/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 19 Sqrt[3])/51}, {
         55/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 20 Sqrt[3])/51}, {
         55/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 21 Sqrt[3])/51}, {
         55/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 22 Sqrt[3])/51}, {
         55/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 23 Sqrt[3])/51}, {
         55/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 24 Sqrt[3])/51}, {
         55/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 25 Sqrt[3])/51}, {
         55/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 26 Sqrt[3])/51}, {
         55/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 27 Sqrt[3])/51}, {
         55/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 28 Sqrt[3])/51}, {
         55/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         167/204, (1/2 + 29 Sqrt[3])/51}, {57/68, 1/102}, {
         169/204, (1/2 + Sqrt[3]/2)/51}, {57/68, (1/2 + Sqrt[3])/51}, {
         169/204, (1/2 + (3 Sqrt[3])/2)/51}, {57/68, (1/2 + 2 Sqrt[3])/51}, {
         169/204, (1/2 + (5 Sqrt[3])/2)/51}, {57/68, (1/2 + 3 Sqrt[3])/51}, {
         169/204, (1/2 + (7 Sqrt[3])/2)/51}, {57/68, (1/2 + 4 Sqrt[3])/51}, {
         169/204, (1/2 + (9 Sqrt[3])/2)/51}, {57/68, (1/2 + 5 Sqrt[3])/51}, {
         169/204, (1/2 + (11 Sqrt[3])/2)/51}, {57/68, (1/2 + 6 Sqrt[3])/51}, {
         169/204, (1/2 + (13 Sqrt[3])/2)/51}, {57/68, (1/2 + 7 Sqrt[3])/51}, {
         169/204, (1/2 + (15 Sqrt[3])/2)/51}, {57/68, (1/2 + 8 Sqrt[3])/51}, {
         169/204, (1/2 + (17 Sqrt[3])/2)/51}, {57/68, (1/2 + 9 Sqrt[3])/51}, {
         169/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 10 Sqrt[3])/51}, {
         169/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 11 Sqrt[3])/51}, {
         169/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 12 Sqrt[3])/51}, {
         169/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 13 Sqrt[3])/51}, {
         169/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 14 Sqrt[3])/51}, {
         169/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 15 Sqrt[3])/51}, {
         169/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 16 Sqrt[3])/51}, {
         169/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 17 Sqrt[3])/51}, {
         169/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 18 Sqrt[3])/51}, {
         169/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 19 Sqrt[3])/51}, {
         169/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 20 Sqrt[3])/51}, {
         169/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 21 Sqrt[3])/51}, {
         169/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 22 Sqrt[3])/51}, {
         169/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 23 Sqrt[3])/51}, {
         169/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 24 Sqrt[3])/51}, {
         169/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 25 Sqrt[3])/51}, {
         169/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 26 Sqrt[3])/51}, {
         169/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 27 Sqrt[3])/51}, {
         169/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         57/68, (1/2 + 28 Sqrt[3])/51}, {169/204, (1/2 + (57 Sqrt[3])/2)/51},
          {57/68, (1/2 + 29 Sqrt[3])/51}, {175/204, 1/102}, {
         173/204, (1/2 + Sqrt[3]/2)/51}, {175/204, (1/2 + Sqrt[3])/51}, {
         173/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 2 Sqrt[3])/51}, {
         173/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 3 Sqrt[3])/51}, {
         173/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 4 Sqrt[3])/51}, {
         173/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 5 Sqrt[3])/51}, {
         173/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 6 Sqrt[3])/51}, {
         173/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 7 Sqrt[3])/51}, {
         173/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 8 Sqrt[3])/51}, {
         173/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 9 Sqrt[3])/51}, {
         173/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 10 Sqrt[3])/51}, {
         173/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 11 Sqrt[3])/51}, {
         173/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 12 Sqrt[3])/51}, {
         173/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 13 Sqrt[3])/51}, {
         173/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 14 Sqrt[3])/51}, {
         173/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 15 Sqrt[3])/51}, {
         173/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 16 Sqrt[3])/51}, {
         173/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 17 Sqrt[3])/51}, {
         173/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 18 Sqrt[3])/51}, {
         173/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 19 Sqrt[3])/51}, {
         173/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 20 Sqrt[3])/51}, {
         173/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 21 Sqrt[3])/51}, {
         173/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 22 Sqrt[3])/51}, {
         173/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 23 Sqrt[3])/51}, {
         173/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 24 Sqrt[3])/51}, {
         173/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 25 Sqrt[3])/51}, {
         173/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 26 Sqrt[3])/51}, {
         173/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 27 Sqrt[3])/51}, {
         173/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 28 Sqrt[3])/51}, {
         173/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         175/204, (1/2 + 29 Sqrt[3])/51}, {179/204, 1/102}, {
         59/68, (1/2 + Sqrt[3]/2)/51}, {179/204, (1/2 + Sqrt[3])/51}, {
         59/68, (1/2 + (3 Sqrt[3])/2)/51}, {179/204, (1/2 + 2 Sqrt[3])/51}, {
         59/68, (1/2 + (5 Sqrt[3])/2)/51}, {179/204, (1/2 + 3 Sqrt[3])/51}, {
         59/68, (1/2 + (7 Sqrt[3])/2)/51}, {179/204, (1/2 + 4 Sqrt[3])/51}, {
         59/68, (1/2 + (9 Sqrt[3])/2)/51}, {179/204, (1/2 + 5 Sqrt[3])/51}, {
         59/68, (1/2 + (11 Sqrt[3])/2)/51}, {179/204, (1/2 + 6 Sqrt[3])/51}, {
         59/68, (1/2 + (13 Sqrt[3])/2)/51}, {179/204, (1/2 + 7 Sqrt[3])/51}, {
         59/68, (1/2 + (15 Sqrt[3])/2)/51}, {179/204, (1/2 + 8 Sqrt[3])/51}, {
         59/68, (1/2 + (17 Sqrt[3])/2)/51}, {179/204, (1/2 + 9 Sqrt[3])/51}, {
         59/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 10 Sqrt[3])/51}, {
         59/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 11 Sqrt[3])/51}, {
         59/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 12 Sqrt[3])/51}, {
         59/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 13 Sqrt[3])/51}, {
         59/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 14 Sqrt[3])/51}, {
         59/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 15 Sqrt[3])/51}, {
         59/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 16 Sqrt[3])/51}, {
         59/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 17 Sqrt[3])/51}, {
         59/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 18 Sqrt[3])/51}, {
         59/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 19 Sqrt[3])/51}, {
         59/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 20 Sqrt[3])/51}, {
         59/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 21 Sqrt[3])/51}, {
         59/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 22 Sqrt[3])/51}, {
         59/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 23 Sqrt[3])/51}, {
         59/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 24 Sqrt[3])/51}, {
         59/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 25 Sqrt[3])/51}, {
         59/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 26 Sqrt[3])/51}, {
         59/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 27 Sqrt[3])/51}, {
         59/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 28 Sqrt[3])/51}, {
         59/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         179/204, (1/2 + 29 Sqrt[3])/51}, {61/68, 1/102}, {
         181/204, (1/2 + Sqrt[3]/2)/51}, {61/68, (1/2 + Sqrt[3])/51}, {
         181/204, (1/2 + (3 Sqrt[3])/2)/51}, {61/68, (1/2 + 2 Sqrt[3])/51}, {
         181/204, (1/2 + (5 Sqrt[3])/2)/51}, {61/68, (1/2 + 3 Sqrt[3])/51}, {
         181/204, (1/2 + (7 Sqrt[3])/2)/51}, {61/68, (1/2 + 4 Sqrt[3])/51}, {
         181/204, (1/2 + (9 Sqrt[3])/2)/51}, {61/68, (1/2 + 5 Sqrt[3])/51}, {
         181/204, (1/2 + (11 Sqrt[3])/2)/51}, {61/68, (1/2 + 6 Sqrt[3])/51}, {
         181/204, (1/2 + (13 Sqrt[3])/2)/51}, {61/68, (1/2 + 7 Sqrt[3])/51}, {
         181/204, (1/2 + (15 Sqrt[3])/2)/51}, {61/68, (1/2 + 8 Sqrt[3])/51}, {
         181/204, (1/2 + (17 Sqrt[3])/2)/51}, {61/68, (1/2 + 9 Sqrt[3])/51}, {
         181/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 10 Sqrt[3])/51}, {
         181/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 11 Sqrt[3])/51}, {
         181/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 12 Sqrt[3])/51}, {
         181/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 13 Sqrt[3])/51}, {
         181/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 14 Sqrt[3])/51}, {
         181/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 15 Sqrt[3])/51}, {
         181/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 16 Sqrt[3])/51}, {
         181/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 17 Sqrt[3])/51}, {
         181/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 18 Sqrt[3])/51}, {
         181/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 19 Sqrt[3])/51}, {
         181/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 20 Sqrt[3])/51}, {
         181/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 21 Sqrt[3])/51}, {
         181/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 22 Sqrt[3])/51}, {
         181/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 23 Sqrt[3])/51}, {
         181/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 24 Sqrt[3])/51}, {
         181/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 25 Sqrt[3])/51}, {
         181/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 26 Sqrt[3])/51}, {
         181/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 27 Sqrt[3])/51}, {
         181/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 28 Sqrt[3])/51}, {
         181/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         61/68, (1/2 + 29 Sqrt[3])/51}, {11/12, 1/102}, {
         185/204, (1/2 + Sqrt[3]/2)/51}, {11/12, (1/2 + Sqrt[3])/51}, {
         185/204, (1/2 + (3 Sqrt[3])/2)/51}, {11/12, (1/2 + 2 Sqrt[3])/51}, {
         185/204, (1/2 + (5 Sqrt[3])/2)/51}, {11/12, (1/2 + 3 Sqrt[3])/51}, {
         185/204, (1/2 + (7 Sqrt[3])/2)/51}, {11/12, (1/2 + 4 Sqrt[3])/51}, {
         185/204, (1/2 + (9 Sqrt[3])/2)/51}, {11/12, (1/2 + 5 Sqrt[3])/51}, {
         185/204, (1/2 + (11 Sqrt[3])/2)/51}, {11/12, (1/2 + 6 Sqrt[3])/51}, {
         185/204, (1/2 + (13 Sqrt[3])/2)/51}, {11/12, (1/2 + 7 Sqrt[3])/51}, {
         185/204, (1/2 + (15 Sqrt[3])/2)/51}, {11/12, (1/2 + 8 Sqrt[3])/51}, {
         185/204, (1/2 + (17 Sqrt[3])/2)/51}, {11/12, (1/2 + 9 Sqrt[3])/51}, {
         185/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 10 Sqrt[3])/51}, {
         185/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 11 Sqrt[3])/51}, {
         185/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 12 Sqrt[3])/51}, {
         185/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 13 Sqrt[3])/51}, {
         185/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 14 Sqrt[3])/51}, {
         185/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 15 Sqrt[3])/51}, {
         185/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 16 Sqrt[3])/51}, {
         185/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 17 Sqrt[3])/51}, {
         185/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 18 Sqrt[3])/51}, {
         185/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 19 Sqrt[3])/51}, {
         185/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 20 Sqrt[3])/51}, {
         185/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 21 Sqrt[3])/51}, {
         185/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 22 Sqrt[3])/51}, {
         185/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 23 Sqrt[3])/51}, {
         185/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 24 Sqrt[3])/51}, {
         185/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 25 Sqrt[3])/51}, {
         185/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 26 Sqrt[3])/51}, {
         185/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 27 Sqrt[3])/51}, {
         185/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 28 Sqrt[3])/51}, {
         185/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         11/12, (1/2 + 29 Sqrt[3])/51}, {191/204, 1/102}, {
         63/68, (1/2 + Sqrt[3]/2)/51}, {191/204, (1/2 + Sqrt[3])/51}, {
         63/68, (1/2 + (3 Sqrt[3])/2)/51}, {191/204, (1/2 + 2 Sqrt[3])/51}, {
         63/68, (1/2 + (5 Sqrt[3])/2)/51}, {191/204, (1/2 + 3 Sqrt[3])/51}, {
         63/68, (1/2 + (7 Sqrt[3])/2)/51}, {191/204, (1/2 + 4 Sqrt[3])/51}, {
         63/68, (1/2 + (9 Sqrt[3])/2)/51}, {191/204, (1/2 + 5 Sqrt[3])/51}, {
         63/68, (1/2 + (11 Sqrt[3])/2)/51}, {191/204, (1/2 + 6 Sqrt[3])/51}, {
         63/68, (1/2 + (13 Sqrt[3])/2)/51}, {191/204, (1/2 + 7 Sqrt[3])/51}, {
         63/68, (1/2 + (15 Sqrt[3])/2)/51}, {191/204, (1/2 + 8 Sqrt[3])/51}, {
         63/68, (1/2 + (17 Sqrt[3])/2)/51}, {191/204, (1/2 + 9 Sqrt[3])/51}, {
         63/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 10 Sqrt[3])/51}, {
         63/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 11 Sqrt[3])/51}, {
         63/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 12 Sqrt[3])/51}, {
         63/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 13 Sqrt[3])/51}, {
         63/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 14 Sqrt[3])/51}, {
         63/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 15 Sqrt[3])/51}, {
         63/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 16 Sqrt[3])/51}, {
         63/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 17 Sqrt[3])/51}, {
         63/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 18 Sqrt[3])/51}, {
         63/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 19 Sqrt[3])/51}, {
         63/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 20 Sqrt[3])/51}, {
         63/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 21 Sqrt[3])/51}, {
         63/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 22 Sqrt[3])/51}, {
         63/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 23 Sqrt[3])/51}, {
         63/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 24 Sqrt[3])/51}, {
         63/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 25 Sqrt[3])/51}, {
         63/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 26 Sqrt[3])/51}, {
         63/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 27 Sqrt[3])/51}, {
         63/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 28 Sqrt[3])/51}, {
         63/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         191/204, (1/2 + 29 Sqrt[3])/51}, {65/68, 1/102}, {
         193/204, (1/2 + Sqrt[3]/2)/51}, {65/68, (1/2 + Sqrt[3])/51}, {
         193/204, (1/2 + (3 Sqrt[3])/2)/51}, {65/68, (1/2 + 2 Sqrt[3])/51}, {
         193/204, (1/2 + (5 Sqrt[3])/2)/51}, {65/68, (1/2 + 3 Sqrt[3])/51}, {
         193/204, (1/2 + (7 Sqrt[3])/2)/51}, {65/68, (1/2 + 4 Sqrt[3])/51}, {
         193/204, (1/2 + (9 Sqrt[3])/2)/51}, {65/68, (1/2 + 5 Sqrt[3])/51}, {
         193/204, (1/2 + (11 Sqrt[3])/2)/51}, {65/68, (1/2 + 6 Sqrt[3])/51}, {
         193/204, (1/2 + (13 Sqrt[3])/2)/51}, {65/68, (1/2 + 7 Sqrt[3])/51}, {
         193/204, (1/2 + (15 Sqrt[3])/2)/51}, {65/68, (1/2 + 8 Sqrt[3])/51}, {
         193/204, (1/2 + (17 Sqrt[3])/2)/51}, {65/68, (1/2 + 9 Sqrt[3])/51}, {
         193/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 10 Sqrt[3])/51}, {
         193/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 11 Sqrt[3])/51}, {
         193/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 12 Sqrt[3])/51}, {
         193/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 13 Sqrt[3])/51}, {
         193/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 14 Sqrt[3])/51}, {
         193/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 15 Sqrt[3])/51}, {
         193/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 16 Sqrt[3])/51}, {
         193/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 17 Sqrt[3])/51}, {
         193/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 18 Sqrt[3])/51}, {
         193/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 19 Sqrt[3])/51}, {
         193/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 20 Sqrt[3])/51}, {
         193/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 21 Sqrt[3])/51}, {
         193/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 22 Sqrt[3])/51}, {
         193/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 23 Sqrt[3])/51}, {
         193/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 24 Sqrt[3])/51}, {
         193/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 25 Sqrt[3])/51}, {
         193/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 26 Sqrt[3])/51}, {
         193/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 27 Sqrt[3])/51}, {
         193/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 28 Sqrt[3])/51}, {
         193/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         65/68, (1/2 + 29 Sqrt[3])/51}, {199/204, 1/102}, {
         197/204, (1/2 + Sqrt[3]/2)/51}, {199/204, (1/2 + Sqrt[3])/51}, {
         197/204, (1/2 + (3 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 2 Sqrt[3])/51}, {
         197/204, (1/2 + (5 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 3 Sqrt[3])/51}, {
         197/204, (1/2 + (7 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 4 Sqrt[3])/51}, {
         197/204, (1/2 + (9 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 5 Sqrt[3])/51}, {
         197/204, (1/2 + (11 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 6 Sqrt[3])/51}, {
         197/204, (1/2 + (13 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 7 Sqrt[3])/51}, {
         197/204, (1/2 + (15 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 8 Sqrt[3])/51}, {
         197/204, (1/2 + (17 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 9 Sqrt[3])/51}, {
         197/204, (1/2 + (19 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 10 Sqrt[3])/51}, {
         197/204, (1/2 + (21 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 11 Sqrt[3])/51}, {
         197/204, (1/2 + (23 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 12 Sqrt[3])/51}, {
         197/204, (1/2 + (25 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 13 Sqrt[3])/51}, {
         197/204, (1/2 + (27 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 14 Sqrt[3])/51}, {
         197/204, (1/2 + (29 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 15 Sqrt[3])/51}, {
         197/204, (1/2 + (31 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 16 Sqrt[3])/51}, {
         197/204, (1/2 + (33 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 17 Sqrt[3])/51}, {
         197/204, (1/2 + (35 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 18 Sqrt[3])/51}, {
         197/204, (1/2 + (37 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 19 Sqrt[3])/51}, {
         197/204, (1/2 + (39 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 20 Sqrt[3])/51}, {
         197/204, (1/2 + (41 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 21 Sqrt[3])/51}, {
         197/204, (1/2 + (43 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 22 Sqrt[3])/51}, {
         197/204, (1/2 + (45 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 23 Sqrt[3])/51}, {
         197/204, (1/2 + (47 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 24 Sqrt[3])/51}, {
         197/204, (1/2 + (49 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 25 Sqrt[3])/51}, {
         197/204, (1/2 + (51 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 26 Sqrt[3])/51}, {
         197/204, (1/2 + (53 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 27 Sqrt[3])/51}, {
         197/204, (1/2 + (55 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 28 Sqrt[3])/51}, {
         197/204, (1/2 + (57 Sqrt[3])/2)/51}, {
         199/204, (1/2 + 29 Sqrt[3])/51}, {203/204, 1/102}, {
         67/68, (1/2 + Sqrt[3]/2)/51}, {203/204, (1/2 + Sqrt[3])/51}, {
         67/68, (1/2 + (3 Sqrt[3])/2)/51}, {203/204, (1/2 + 2 Sqrt[3])/51}, {
         67/68, (1/2 + (5 Sqrt[3])/2)/51}, {203/204, (1/2 + 3 Sqrt[3])/51}, {
         67/68, (1/2 + (7 Sqrt[3])/2)/51}, {203/204, (1/2 + 4 Sqrt[3])/51}, {
         67/68, (1/2 + (9 Sqrt[3])/2)/51}, {203/204, (1/2 + 5 Sqrt[3])/51}, {
         67/68, (1/2 + (11 Sqrt[3])/2)/51}, {203/204, (1/2 + 6 Sqrt[3])/51}, {
         67/68, (1/2 + (13 Sqrt[3])/2)/51}, {203/204, (1/2 + 7 Sqrt[3])/51}, {
         67/68, (1/2 + (15 Sqrt[3])/2)/51}, {203/204, (1/2 + 8 Sqrt[3])/51}, {
         67/68, (1/2 + (17 Sqrt[3])/2)/51}, {203/204, (1/2 + 9 Sqrt[3])/51}, {
         67/68, (1/2 + (19 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 10 Sqrt[3])/51}, {
         67/68, (1/2 + (21 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 11 Sqrt[3])/51}, {
         67/68, (1/2 + (23 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 12 Sqrt[3])/51}, {
         67/68, (1/2 + (25 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 13 Sqrt[3])/51}, {
         67/68, (1/2 + (27 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 14 Sqrt[3])/51}, {
         67/68, (1/2 + (29 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 15 Sqrt[3])/51}, {
         67/68, (1/2 + (31 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 16 Sqrt[3])/51}, {
         67/68, (1/2 + (33 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 17 Sqrt[3])/51}, {
         67/68, (1/2 + (35 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 18 Sqrt[3])/51}, {
         67/68, (1/2 + (37 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 19 Sqrt[3])/51}, {
         67/68, (1/2 + (39 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 20 Sqrt[3])/51}, {
         67/68, (1/2 + (41 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 21 Sqrt[3])/51}, {
         67/68, (1/2 + (43 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 22 Sqrt[3])/51}, {
         67/68, (1/2 + (45 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 23 Sqrt[3])/51}, {
         67/68, (1/2 + (47 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 24 Sqrt[3])/51}, {
         67/68, (1/2 + (49 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 25 Sqrt[3])/51}, {
         67/68, (1/2 + (51 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 26 Sqrt[3])/51}, {
         67/68, (1/2 + (53 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 27 Sqrt[3])/51}, {
         67/68, (1/2 + (55 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 28 Sqrt[3])/51}, {
         67/68, (1/2 + (57 Sqrt[3])/2)/51}, {
         203/204, (1/2 + 29 Sqrt[3])/51}}, $CellContext`MeanPath[
         Pattern[$CellContext`A$, 
          Blank[]], 
         Pattern[$CellContext`pt$, 
          Blank[]]] := Table[{
          $CellContext`Meanx[FE`\[Beta]$$406, $CellContext`A$], 
          $CellContext`Meany[FE`\[Beta]$$406, $CellContext`A$]}, {
         FE`\[Beta]$$406, 0, 2 Pi, $CellContext`pt$}], 
       Attributes[$CellContext`A$] = {Temporary}, 
       Attributes[$CellContext`pt$] = {Temporary}, FE`\[Beta]$$406 = Pi/4}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.662954332318384*^9, 3.6629543331621237`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "4"}], ",", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", 
       RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
      RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Covxy", "[", 
         RowBox[{
          RowBox[{
          "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(xy\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Covxy", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734606196453*^9, 
   3.662734645344198*^9}, {3.662734724148766*^9, 3.6627347251648083`*^9}, {
   3.6627347852861853`*^9, 3.662734882680832*^9}, {3.662737507940373*^9, 
   3.6627376306413794`*^9}, {3.662737692117481*^9, 3.662737710261557*^9}, {
   3.662737826227929*^9, 3.6627378906333714`*^9}, {3.6627379481755466`*^9, 
   3.662737973727108*^9}, {3.662738011090568*^9, 3.66273820227133*^9}, {
   3.662738582147222*^9, 3.6627386102500067`*^9}, {3.6627386565494556`*^9, 
   3.662738675730899*^9}, {3.662738735220784*^9, 3.662738743725926*^9}, {
   3.662738801751446*^9, 3.662738803326022*^9}, {3.662738894290978*^9, 
   3.662738904788496*^9}, {3.6627389639501534`*^9, 3.662739160753665*^9}, {
   3.662739226020411*^9, 3.662739241707203*^9}, {3.6627393045579443`*^9, 
   3.662739369430656*^9}, {3.662739431441307*^9, 3.662739465112954*^9}, 
   3.662739588444475*^9, {3.662739980093663*^9, 3.662739998145885*^9}, {
   3.662836734011841*^9, 3.662836752471727*^9}, 3.6629543798481407`*^9, {
   3.6629547070306053`*^9, 3.6629547230028563`*^9}, 3.6629547775117397`*^9, {
   3.662954817832773*^9, 3.6629548240998783`*^9}, {3.662954856262835*^9, 
   3.6629548645348177`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
pR9TU2J4op115rpwWeX/AE6fgvE=
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nc01f8fB3Atyqhw7ZFZ2Q1KRi+Neysjsy17NCQpMyKjjJLMuPdTooyI
9CVSeWeGVAoNhO7nc6/tUpqK3/v3x+fc8zjnc859n9d4ft7KbqftPBfy8fGN
4ef/v3LuklXubjbwUzmcXq4kgrY7XN0X5r0PjHLCjxXwi6Nj9MUzaT6HIaTM
RPdHmBTqFQ+Rdjd2g1mvz32t+kpo7Q+vfWl0HwiOPXLMW1kDuR697T2rHQxb
vhSDbbgBmkuunSpVugSyKxy0GMU7ULumVWWcbDoIrl5726zeDkVvafHOP30X
Fvq8hhERd1R2qvGAW1YZVPMW7U2W9EGjL9enCLZUgFNYzbfxYH9EbWO6hOnV
gJKirX8BIwhx588oMY0QbN3nyWdbfx4ds16vNnKwHl53aSkttY5ERxztTtcL
NIHt4De35PIoZCeiudE/7gVcfBSqs3IsBj0rXa6lC21gx5zqyHa4jLRnipjP
X7TDW3P1v/Lp8Ujm56mG5B1v4E7v2rZdbYloa8Cta4/+dID0ebkz4XpJaMqM
/H3N5B2w/LnW3QbJqC9G58LprE74W/rIfvrkdRS3Rrh/gtcFAo6Tha6sFLRJ
nhF6QO89HPddUm9VnYoU4y+texH/AWSXpu2C8TQksFtFVeXVR1ARWHi9RCgD
aUY06kVr9UDo1SHGqh2ZSERiVio6uhdeJOVeR6430Ne/V0x8G/ug52iORfee
LLTyqPp5Z6V++FUTV3hWPRutWyHzw9hzAIjKo5nmn7LR0mSb/F7bQbDuKDxz
O4CJ0rsynVhzg+C/TVRyozALqdYLV7679QWWHDc77xnPQq/HYqSv7GWD3Eyj
X8NCAm343mpsZMuGfy6/tGMXEyhjbrnzsD0bTHhjqgx+AjmLZt3deYgNN00H
G5qWEWhq0/0N/9zZ4DUc8/HJSgKJRnVb+oawwd57uCpakUAO0qsv2txhw229
2gOxWwhUrXzyzlw+G45wZel6xgSS13rwoqSIDYdVF53/aEIgytRo+bIyNgRK
yNWvNSNQgPteZt1jNvgV9bQ8Z+DzlAZWbnjDhqm6DeJv7An0aeeLEdofNhBO
Ok3PfQjEXhxLpv1lw+KN/RwZXwKNNm7/TJtnw6dg/yenTxPoz87aDtpiEoLO
BsaL+hNIll5ZRVtOQpu6wmudIAI50vNiaSokhOjqfGmNJJDHEteINDUS+AaO
t09eJJBPk2IIbQ0Jyby5sJXRBAqnZ/vQtEnwerp5g3ksgW7Sr9vTNpHw5hpn
aWY8gQboEco0cxLU5sXomdcJNLzEVC7NkoSqlQr/4lJw/Zr+0GjWJEzJ7UkI
SiUQHyNwKc2BhLBy9hqLdAIpMU7xxJ1ISBn4ldB+g0Br+bVGUl1IMLKc4b+b
RaB1zcNscXcSHuhWO4dmE2gbw+O9+DESJkJdiuVYBHJjHHkm7k/CrYGLTYa3
CHSCX6Yq9RwJ8wq07b+w/ZvfPxAPIuH08/HcihwCRTPs7oiHkSDGUJNQyyXQ
HcaeRPFLJHzQPd39+Q6BSvgFYlPjSAhtnr0ac5dAFc2NF8QTSQj4qLZhbT6B
Ghlm/uLJJES2jpl5FRCIw9h8SDybhKZ9l64/KyJQv7iGcyuLBMZXt5sH7hHo
/aCsZ8Qt/P/8LNokdkvonN/YHRJuqxdtW1lCoHulTXENZSQ86Sl4plFKoLzz
VUkhD0mYzOPqF2Czdhel6VWSsDs5SFG5jEBX2VdymDUkLBSftRR8QCA/SYfq
s00kbBcw3/SwnEDHSHqtRgsJCqODTuIPCeT6YHPjQBsJr1wSF57BtjOX67Do
IOFUgA9S/o9AFlIi7xd0kqDY1tpzDnsnNddb1U3CW6W4gEZsgwvsIdVeEr5H
+egcqiCQrkXXxKfPuN6jDy1vYq+Wbv52bZAE/eVM3gD2Kk7VbzpJwknVjVKK
lQSSflg0P8vB9c2IazyIvTKCueThMAnnhAt/XcNeZnlV6NgYCbYuREUD9h+O
n1TXFK6ntkGL0iMCfX3oppDwDc9L8JiyOfZYhIOq2Q8S2HtuCfhhU5YMjR+/
SPiVfTA0BbtPxlCvZJYElRzF8+XY3VwNA7c5El62/BR8hf36Pzlj6QUU1KIR
TQ52c6TItteLKLh28nfvb2xkNc+I4adgPU9zlVAV3mfZaUujZRQI3Lv4XRr7
wRDbbkqIgpuGfC6q2EUVXQfzl1OwKKDQWRM792Kzk6MoBY5B57/rYGfvrfYQ
o1HQmx6iooudKnfvRIskBZmeuUP/f//KMNPvggwFwzUzdDXsmMqrgfryFNwq
8t0qix0WFRE2qkhBSqzIO2HsAOszUTnKFEiRrxb8xef1lXeP269GgWxm8esh
bK8RhyThNRTwVd/e0oHt/IiRVq9BwRPi3o5K7IPRhtnB2hTostFEBraNjWaO
rh4FNa49hgHYexTk86n1FCQbf1W3wd4+KlKSrU/BindzlWuwjarmy202UxD5
8sfILO7XxpjpKn4jCu6KdtS3Y2vbks+emlCg1RmxLRtbTbG7wR8ocI/+4+WB
rTDW3Lp2OwVRPRv1tbCXx97rTttFwbKn91tL8fzcWyrxUN6cAqHHj1f7Ye+6
EpF0x5KCzzUDLF3syFSHXRW2FBSXX/qQi+dTQQqpmjhQ0FdzhTiIXZOtwde4
H/d3+lGEEPa323PVnUco8BELYx7D85+sfjz9iBMFJZWZ78WwtYs6z5AuFPB+
f1xXg/fH60Gh5jdPCvw4L+h82B9r7VhifrjfuTL8J/D+BWx/FpztT0G3/1rr
f3g/xZrX7FMJoEBigv7sKrbFq78iG0Lx/JhmCuXfJ1Btb36EbQwF9LX9MRXF
BDrsLOr46RIFLYMPBNdj/2SfN3SNp8DJ5NCTezgf1o3aTPslYR9cnJOO8yTv
1x+35BsULDXLStiD88YszBOkmRTk9E6HluE86pt/I5dDUGAe1cQUw5YUuNtV
lksBsyX/TAfOszgJa8abEgrkGQ8vauK8892Qp7G8Dp9PbVf7QZyfgo9E+DMa
KCjoa5VMYRKoYEswW6EZny+vjNWC83bQzIqp85KCozmWR3VwHttb/xS26qYg
gWbe2I3z29DHYipxhIIbzjef5CYRKEX6lKDAOO43y+pTxVUCjTcmqUVNUmAg
NH+g8QqBchTeHQz+RsFEwsvQ3gS8/28O1nn8o2BMq8Br9BKBetZ7pZiKcsBa
4u3hxAsE0u+/XFItzoHkKZs3Z8MJlJRQ1LxRkgMChlqlh8LwfJLjfzTkOJB7
1eC+QiiBitPOukuqc0B6R+DzSwF4f35G6vMMOaD7bqD680mcx3m5e08YcwAu
uUoSJ3C9bRqPcUw5UPlbbejQcZwnhQJE73YO7G1mUi+9CGR1OGlJiyUHmkOO
OF13JZDiM+b7HBcOLHW0aczdT6C6qEfBdnEc6Mwy/MfeSiBhE+FbixI58K8x
OlbPlED7v7s2VVzlwMUftUoh+D4w7i0iJpXKgUNTMSmLDHG/rDyKewkOvBgp
Pvd9Hf5+SYn1e/zHgVOBvk+tVAhEKzm1I6ifA7WmoTFd+P7i5NlwfO0XDhiL
96U38uH8UZRJ/kRyQFhF6lX5HAttvd7YZzzCgfYum7LoPyx0PFAukG+GA3lg
bLfkKwvVmrUWxi/jQvom78TIQRby7lZbztLnAl0sPPTwExbaT/8muGozF4qL
/F7LPGahnZV1ArlbuOC836ry/SMWUkl3WlC4lQueDgdM9zxkoT6HGzP/7eZC
nfL9baJFLGTTJdT70pELFobL/HUyWMio82vBbAwXSqd6RLN8WWj52+fbjnRz
wYXtvthWmoUmrBrMaR+5ME20XDGSYKH2tib7Vz1cqKg9u09ZjIUSGts8YZAL
kzNKRVwhFuKv7opXHeNCe6m9h808E83fHH47xjcEHrWmYTkcJpryWekWpj0E
iwQZBQYPmOjdUpcoInoIVHYUdtFNmShzRNt13+phmJ7dvUvSPBs9/d1wv69p
GCK5Bo8FDbPQHN1JYMh/BN6MRmjLDmWibcar571oo9B8oclJ4nIGuu0zvehE
wyg8+SIxWDWQhlxeXQo0OT0GojUnN42KpyKlD3sux6wYBwf9Zpq06XX0T37l
Xetn47Dsp9l8iUwS6hVa7JrsPAE0+aC8xUx8P9esT8iZm4AsdmDlqroYdC4m
um5j8STe8VW+svXhKMrsA1V1fxJU4xMjnVLD0bW/mktNHkzCZJbGaIJHOLp3
7t3enZWT8L4r3JTFH44GPZT7HNAklHjnqRN7wpAFHf0I6JwEE4VP4b/aQpEK
/6xW9ewkdFiHh/x7HIQ6LvtnmFjyQPFCT9rqrWeQ9/fxPCFrHtycV1JrXXAG
zbl5l/fY8kCvVL7QpMkP6Wx1bA8+wIMQWb7jaRZ+KGGGvrDSjQd5PzMmJ4p9
Ed1VxlcnhAfyTk+zftSdQDVGz+mK+TxgGSTK1Ka5IdtCI/uJQh4MxPt1uom4
oWGJSpenxTx43Twx6hvriqSmi84fLueBxtPLpWVnXdC5gtTyjKc8sMkxG+5M
dkS6NG+FFZ08gDkLMxXCHjVd/KLZ380DB8cUO9kgO+TIO2J4/yMPFtce4Wlb
26LENht7i34e/OCKXEv/aoWGI43iL4/w4KOW6uPHHjtR5GRFxv5xHsRqTa3Z
PrMNSTnq3VHn8UBwSvFV6uxWxNishhpmeKB6asnbjl/66POdm+0pP3kwo9cz
I4T00DkxmR7XPzyome5/v8dTHQlHpg6t+8eDpgTj1YIVEihvQuT7/DwPOouD
8nPYBrX/A66AtE8=
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
y8TlC+Tx2uDC7zMzIrimXR+U/nnjs/8BPciP/A==
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13k4VO8XAPApewuKsnyJbGVXqYQcZYtkizZLoWzZkrUoIctYZiZ9aVGW
qL6IFGmRE1GyM7aiRYvmzmCyRFH87u+v+3ye+7zPc9/znnPec9d7BDmcWEqh
UKSWUCj/f/7jubba08MOZtfHmFXIr8TdjulO0d5OoJ8X43OHXwx9zHinL/sf
gahyQ62ZaAkcFIuS9DTwgHmv90NvdOVx44yX02Uzf4i86OzjvV4V3V3zvec1
ImHHcAnYx2zFBXrtjzL5RJAWcVQ3LzHBVrV9VcnS/8IylY35xvUOGL+jyft2
UBEs9W8HYqUnlgc0HPS4Wg6PuTw29LX+yG7ZdGlZUyW4RT+dGo0Mwa+7rh+L
1n4K8uvsQ+6YR+DI4in56/oIRk4nKPb1Z9HHdpMScage2nvU5QVtY9HZxSGo
XqAR7D9NedAr4tBhpdqWkOTXcOHRGU1RTgI+LxNW14JmcLj+o/OaYxJ2/9MV
amfZDKKBN97muCYhKzmzNmR/M7QbW32+6ZWE4p6SDtXezWA1cmuqIDIJ/SQU
oozpzdD/WoKRn5OEkrFbXzsMN8OyNFRf/JyEofYunhHxLXDmA8UozicZqbXr
7l1Nb4GnSuHxacHJmKc+PPMsuwX6NJ+Np0cmYwufF5VS2gIG8wl+4cnJqPA0
qCKlpwXKLQpdPt5Jxk6F+MXryq1gXmm9QuZbMmpM/3f9xetWWPyRrZl5OAX1
eC2HyrtaocP6sn34sRQ0FWfJ5A62QpDj0GEH7xR01lW5GcNthehCe6OfoSlI
DS3I05dogwyK0fHvtBT8Pn2tqNKrDWYmDx652JCCBT9Ty+/ytcMzOBwxspGK
ZXzqP7JF2mFPn8nHWS0qPl3TrJMk1Q73mcvMebZSsWur4IMTmu2ATa+0BXdR
kRKeUKng1A5XG+xsWg5R0W0m+klOYTtElSi570yiotRswEu6SQdEn3V4wPOJ
iiP673UP2XTA85WWIgPfqFh5zvq23OEOuGvc63ubQ0U7fvWUssAOiFDI1ds0
S8XENSyb1qsdoPj2rDxFOBUnt3i8E/jRATujrwhS9VPxhF5JJNh0QnuWuFA8
LRWNwnJpj+Y6QWFBNSRFLQ0DEvb8fL7YCQ0vpFybtNIwJ3PiSCNvF6hOiFzk
2ZKGvytMVHqEu0BrWfONQIM0rBz/XjOh0AVBMQoBktZpqOajw9bY2wWbYdak
1j8NJZzrTG9d74Lnocuyg0rS8Ifxl980w264ULnqsqFcOlL8piN4dnfD8W3W
0VMK6SiayTcTbtENQsZ7V99RSUftbxsmXR26Ads9DvJqpWNgij9b3acb6iRN
H2YbpiOn6+e715ndoLExVEj5cDqOeAjWLLK7QanVuW2Klo5DCZrngq4yISOg
WGbdz3T0XiyNeHOTCezzczuFf6XjZJTGKcVCJux41vdrfi4dBYLUj/eXMSEr
psCsk5KBmw+rWkEDE3ROv4l3WZGBSZrKa0W4TGh4L/qGT5F83ydTVmbaA0yp
0XOlNhmYvGHFhzFuD5jeUXjSlJuBziIxCZzpHrBdbacvWJCBWrNjasTvHqiy
/yZvXpiBzFcdEV95eiHfw03p+d0MXOeVuWpQohf+5L7WulKRgZWF0mZN0Asu
vvQbPC8z8ON61dICWi8IP5VmP/magdtkzM8c1O6D4cVN+lxFGrJl5XbU6fZB
aFvuyLwyDW/I/ZpV0++DoiqWmMBGGvIqFoctmPbByY9DM5IaNGSqCp8qOtIH
Hu63+NV1aRi8vc976mIflLQXUoVMaVjs4OVEG+oDhfqmyiceNFyXkqjzOqUf
tkpK/NLMoaHAHgVFhbYBcGsTXik3T0O18w3a8erv4FDxpwPBqnRcuWZeIj5+
EEKtGEY2NnSc/JNmGNgwBK/ZL22U/eko6qp89qj8B/j1wm25RzIddUSkZgxO
fAQ3CWbohVw6CtLtbg/afwJ+IxPn6w/p+G9PtlvOwifo/+q+f/YVHRXrV1R1
5w6DW/szDdF+OrZzEiTTbD6D0IrVs8UjdHxr+poQn/sMfpEuAu7TdPxmvv2w
2LUvIL1uH5OzSEfhi8W9ly2+goVP4Gnj5QzU89/7I5X4CuzNkVffijOwLu5R
pEPyN7gZVa99WpaB3r1Kwjm6IwAq8slzygwU7nqxy7l3BLoH8xZNNBnYLXgs
7kb8d5C1jBqI12VgNqHh7qTCAscVynzP9Rk4YHb0HHMjCxZ3PD3dQ1qygHHd
Xp0Fr3pEBjmkrx2Z6d2nw4ItpoKXpQ0YmNOCVub6LNh14EJ5BOm8ew66221Y
QBSq0nQMGVh8KlJAKpwFMQLlfDd2MrDm98t7Q40sOGRXFOBuzMAxD7V+ehML
3hH2vyNJr2ulU8xaWJBD2RtDJx1703X/vU4WVK3SCUTSpiazv2IGWfDZRnFa
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
+pYnoz9vrf0fjhfkEA==
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
CkB/wK/G/euGiv8BLHmgpg==
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13k4VO8XAHCVVEILEqWQVIjKLnVSKKFQUpIshUrIkmUwN0RSKJIQ2QtZ
ipLtMLLva/laWmzRnZmKkiV+9/fXfT7Pnfs+555z3vfcEbd2Mr68lIODQ2UJ
B8f/r5tsNry1sTaEaXFf7XwxXjx8+r6Jj50JqD/ztc/g4kd7bc6pKAcz8MrV
kPvjI4R9/F4bbfZbw5ztQH+9ohju/GNrEqXtAJ63z9vbie9CqwtJdnOynqD2
JQuMfJVwIaL8R45YEIisOS2jk3UEm6QNCu+IPAJuqZ1JhxjGGKBWZ5fulAZL
HVpgnNcGc6+/N7V+kgtF7GUnIjY44ETj3ofcdQVg4VM8SXq6IOPGtXPPBwpg
pKdgYNs9F4wVShPTmSwAh725tWaJLnjcZmPurS2F4D2aEldX7YIvZhca/7oV
QrTh/SOp613RflfT8jHxN9AiaRl5PtsVx4JsvapobwGalys0fHLDctlnh6we
vIXqHRyiSybdMLqjd8Vi+lvQ95/lUuVyR50tBtHqHW/BTIX9X5qsO6YXKrzO
31kEHkkf/W95uaPtMAczsbsI8tyzOlT5b+KwZpylj3wx3OXvWvIJPLA/Prbv
+ZFiWDxzf+6ooQd2TT85021aDPuC9Q1DLT3w/csYfTmiGBQSznUlEx6YKhyt
+rmtGLQ+m1wTRw+89DNirZZLCXzizqorUvJEc/2IUOegEqjpeFI6c8QTT2eE
cz2NLQEJ31zaJmNP1LoQNv+bUQJenyyqlzp6omR96LcM/lLQOWwqdTXVE0ee
BVWsLiyFmhdXZUZWe+Hg3O39qvWlEFElX2K20Qt7ztx+c2mgFM4K+Cm+kfTC
Gp7A7LLlZcAnd2S52AEvTPe8FeN0pgw4r3N11Th4oa2hj3PndBmMTW+piav1
wtHFG2Jx6giNWWXbea57ozVj3T8PQ4TW4pvqIR7eOBCY33vaFkH6gJzjj1ve
2LXq50O+hwjl8kGSftHeWMXvvNx/HKEtd/eBp+Xe2Mav4q6oXwFhIWdEN62m
Id/voCEJ0wrQeXX982kBGur39Bits66Ah5Vi+3xEaVgXc1OO5VEBgiIftaLk
aYiib8YyUirgzY4Zc7YxDXN2KJltmquAi3FRa7yiaUiuvF23iqsSUiU7Licl
0FB6okv579pKqDq8V6A4nYZp2W783VKV4BPxcmPZGxrG7y1oCjOuhI4r6Rx8
PTQM3a8ASzMrYUbmxfu5dT5of3Kv5PhZBqhv1XObovtgfOeFkFQbBryQE3c7
EeSDbaZ3WRcdGRB7o8/i6T0fVLEcKuoJYIDKx8fnRZ74INeNRwbvcxgg1Wie
F5nvg2kPZ24mclYBEfagPeazD37trqw3yasCKZXKmWAVX9xgxpJbV1IF0WIJ
PNkavnh8UCSqqboKSrxrGLWavpg/6mpxpI/6vZas1aieLxLT2yf3cL2Hqilx
E8ZFX9wifHczj/l7CGs89XdZkC+eNzd2YqyoBlnxOOPNzdT9Eiu56nXVELf0
hRBPuy9+Fb7BrN1UDQKxGlp/unzx6ofwa83y1eDvqrDwrt8XvY2b7T6aVsPD
kpdCHKQvxhw7ZsnKqIZTqXOp4av8sEfxoJHIsRoY5Pzw5t8hP4yNNFgralwD
DUJ88gZafmjxy7x1q3kN5MgsUY456oejuTSD7c41sHO6Zo34CT/8Lf1Od09M
Ddy1zWlaMPNDAXHFwzrfakDDXnfZT1c/NOaVVnC5UwtJUsf7vyT74cfEVdsM
ImvBUMe6i5lGrb9vfP3OhFoY8J958vu5H14xff5r4HUtaBiYZ//N8UMiSeqV
7qda6PeXrGwu9sOXStv2iivXQTYPD29xux+utNgs3zZUB8Jqpzgb5/0w7Mfc
lixWHVQw1p+zWPRD/oA+vqCZOpgqazdmLaHjluexrP1r6sFuwx19zhV0VPq1
MSdDvR4Wo1/9XbmOjtZBgrvpD+pBcFF7tbckHcty+GTkoAGGhCroW3Xp2LGp
3c1QtwEWS0LCZfXo+O1OZLnLqQZwqrmuqWJARwGbjcZv7Rog2XFVrLYRHa8K
SXgdimgA6+JMf51zdNxIKNUaf2mAmMkrGv32dHQzMrfxCGiEw2aFZo5BdLxb
vuXlk/uNIKXur658h47PZL78KXncCDeuWUvOh9CxcbntXY7sRjiU2CPuf5+O
EsVO+SFdjfDIFNd7RNGxTSJgMW57E5RddFNakUxH2akXcRW1TfDLKKuuo4SO
qpy6/bntTXCf99Hxc2V01BL4tjmxrwkOF7qrDZbT8byiVIIvuwmGI9F2qJKK
xy35mbpQMyiMi+/vq6Xj2FRsWoFtM3jxl8X7d9Ix+Xdo7vPlLRB9tHpz+Tgd
c5bL/Hi8pgUOeqD0hu90LBZs2BMs3AKyS3SGHUg6tiutfHV5dwvcyZ623MCm
I8fNwAIJkxYgmbr556boaPHH5118agv8mLq8I2WBjsLT16sijrSCYnCNidQq
AkfVBxTPnmiF2b2KsY2UC/z007eea4Xe3iOKztwEGnLJhOQ4tkLjX5bD29UE
Bgl+O9H0pBW0bdNXHeQj8JeC9X8rfrQC3959hbL8BF5WzfKEE21Qf7Hr5aPN
BB50Twx/M9sGl+cakyp2E3g98NjvssU2KEocWFSVIzA+8qdZNWc70P8en8yj
PJN/RKqLrx1qLsrHJ8pT8bDGSn9KtIPuRMEyz70EStvvmZDVa4dpKf4oQSUC
hc5XaqXEtcMB38JxLg0CfxwamgnX6IDImpa+3mMEclyd8lh2uANEn8ztOqJL
4NrI5X9uHu0A24scItmU5Ud2/Lpg3AHGcUZffI4T6BjiMCFjT9lut7CIPoHf
23//VxvZAX3VofeOnKTyZb2ydHGiA7RoomdNTAjsD9zt5/SkE/ZMcluGWBJo
t5jtUZ/QCYOzI5n9lH95yd7YltoJwicL8+WtCFzhJHPpQ04nFCefneqivO/c
ruPwvhMc6K9MNtsQGLx7+4Y17E4gv7vXJlym7vdszsnR6gK7CxzH3a4SeGcH
zyCT3QW1K0mGkyuB59f4Bn6f6oKcVFe/XMpy00zp8Zku0Pjuz8Om3FnT6jG8
rBtUxUaeXXcjcItt5Lo+oW6oi7mca+9O5TdVRLsOusGgXfTOGQ8CP4nvyk4O
7wZFhUKt9TQClTfreJvK94BBkqLqen8CJ0S3qlUq9sAx25fG+pSfbv07La3e
Az08RYeDKHNuy3Rf0OqB5uEdqTOUO3fx3Ugz64Ez28adBwMIdFbpsZu83QMS
hjwmz24TmGlsaxLe3wNfR/6c4Qqh4gsJ2lMb8gG+DYfvsgmn8nVMYptE80d4
3XmvcvQJVX/6e/kAmf8gT3hjWkIKgbyCc0IBAX2wsdXjX10Wle/5exqO7/tB
Ljr7+6VXVL0vbKddFBuEzmV2f9OKCNyzRvjP/sufgGcimKu6jMCVEYbpfUaf
oR7iGaoMAh91PbaIX/gMNp6J1/1rCNzG4CnsSPwCr+Qvi/M3ENjyPXDjvRNf
4Y5WxnhwM4G9WrXjArNf4VPTL5MHbQSO6Kic448dAuXgjJqtnQTy3c7sjjo6
DGmZ/SrJ3QSqOuj9CB0fhh3F006MDwRW+r/xNL4zAus2MXgze6n+6Zbki1cc
Bb99Gkn3+6jn2ys0z3ePgpL9qmbpAQI7Vlr6Pw0YAylp2w/VgwQ+Hpe1MpH6
BsbqhwqkPhNYOlP1sr/6G/Bqrkuw/ULggrbFijGXcVg7UmKb8ZVAzf1Si7YC
EyA4e/tB6RCBSQ4/l12tmoBTE9nrO4cJtGwOuqnh9B06uc3obSMEin3QDQ5c
Q8LjioH87FEq/h8Vr/evJ0FL965+HuWTq1Q//xIgoUhBZvQ1Zb/9UmpWIiRE
NuptKKHcn7j0+4HtJKTo8V+tp/zYvuTEtDoJBXyCn0co883KbrhqS0JrZtrK
LWMESvGnHha/QsIGqRR/ccoHZDc5fbxGwvrIpDlJyg4Wq+p0bpCQVZs8IUO5
gTHitc2HhEaVylI1ykGhCQP9D0gQIBh7TSgnpApyR0WRcMN8Pu4s5cKye8p6
j0l4I3NguTnlYbZ3+Lt4EnhEu7usKR8+baoZnUFC8WN7e2fK/zavTTtZRsLr
SierUMpF5GLGRyThXJZWQBhlt1J2phWDBP8H2qkPKE+cb81zrSVBwq9p6DHl
dBl8PV9PQrrwqaVxlK3mct7cbiKhvo9LLIHy5saEd3ytJFTwfdNIovwxNqz0
cTsJE/z68qmUo676oVgXCWHsspf/f/6kuiPjRQ8JpUtDuwjK3NwW1ft6SVC/
b5NyinJNr0FdSR9lBZawAGX/FwcatQZJaGLVqjCofB/w2t3S/JmEMY7A+QuU
/x4TbT8zRILS1yy7MareBRt5uz6NkPBZAT0tKDt/m++x/0bCmjwF+SqqP2SK
yN6fEyRsF3G/K0h5NLi/35tJAktuJMSE6qdk06ZPy36Q4BTVJxtA9ZvFjtKv
936R8Ko+zSWB6kfh6awRwd8k7NoQbJZB9WtEdOj3HbOUY+x5/al+1relsfLm
KeeW9Jyi+n2F8rWfaoskFPo2HuTvp/qr+/i0HicTHl87NWZG7Rf1NPXZLi4m
ZC7Wbx+i9tNvN+l/F1YxwXft7MLZHqpfBLiXOfMxoXSQx5eX2o87h2eWz6xl
wvsLj7fqtxM49Hp8pT8/E+zeSJ/1bCXQ7FQ9X9RGJrymawY9aSRww7Z360Q3
MUHoCb9XWD2B7b+eC6SLMmFdYei8cy2Bxx7eESmSYMKh/vu5C9T5wWntKaq5
nQmmP7j7X1QQiHvtxRp2MGEfiz/ycDl1nrYfleqXZUJftlysxjsCJdeu2Meh
QsWbnt1nnEPg509/FEPUqPWMOGSvUudZXO6oynoNJgwaOv91fE7g+pM1ByQ1
mXAnK+DfoWRqvoXd1j2mx4RW3mofrkcE9q3mtIq4yITg8otHBanz/DRnVhKP
NRN4YqqnhKh50DRv9PXOJSZk7x3LX+lEYDkz0ebWFSZAwn3DAluqfq37bV1c
meD+rrFNgZpvVyNdr50Opt7/xp797dR8HgoVyW4LYcLLlOKA17sINA+sJPXv
MeGLDZEZIEngCfc1jtoPmHCi61IgU5iaX6ZZzspxTOCQYywZW0bgrMiQ+8Zc
JlxyZVv2PaejK//dN1H5TPgvxHHT2Xg6kqv3Tq8tYEK4tey6vHA6Ds77ea56
x4QPpf4hP93pyBgUoc0ymMD3Pj7l3SHqeyrZmOjvYQI5f63ApNUPhaUZd58t
MCGyzXLcsc0X/eWffjBewgIdtct1NWW+SCp6Si7nZIFWqm7mz0xfLAe58iur
WFAglShbEeiLl0xif+4TYIGHzW3Bg8q+mEe4nK3exYKbF3p7siJ8UCTIIM1D
lgUQHJMgTfPBgNCdv3bJs4DbUm0r7bIPnokeDA1TZFH1yWNGqPngXNZxNAUW
qKTLbrn/iYY6HySkJk6zIF2KFpUvQcO8/n8u8aYsaC29pH6Im4bCXz/iCTNq
/T3KMwk/vZEkw869vsgCQzPUa0JvfLh07p7PVRaMqW2Z/HqO+r+5u3OSj2DB
BO+f/cOBXugWGFCpkMWCg/MWMvsLPdD/0Ifhty9ZwHlTNfZJjAeGz0uv1Mhj
gZ3CNe0GmgdmunWc0CpkweaayMIkTQ/8fEm8/zSygEMzL16y8SbqaeMf907q
/Z1dnU263VGCa06maI4FezbIvxCodsU9jBMnNRZYsDiaEmqd7IoH/JJdKjjY
UG+r4OhDd8Wzf3Tf1S1nQ+W1l3L8aq4YNhqj07uGDRpnJ5WrX7jgTI2y1ew2
NpgvyRubI25gW7BLtIY+G9a+GglqXOmIdr/JlNUn2VBwoOyeS9Z1XLC2y//P
iA3tO/lnaAbXcfdB8yZPUza8e954Ky/cAe9OaS8ttGaDc8rSIA+ea6htJey4
24sNdiEORWtH7bC/JZI2T6PcnGgk7meHbhp8IY1+bBB4ZVTtKWiHyULLUq8E
siEnSV5pUtMWOVrI3rRwNgxOvFbreHAJi9UrtLeks4Hf4ataJbcVGj1XP8V8
zobr22NOzj2yxG+ChZalWWzIHZU8oCdmiUI/X9DM8tkwGfEqQOmSBbplROZH
l7LB+EK0fW+kGcoJ2Imu6WSDW8Yf/bgQY6y+9UV6sJvKh6zyaxlfIzRnn1d9
+ZENA512N/5eN8TQBsNTeoNsmF2QXEy7r4/fCPWQ4HE2vNr2L386+QgSrILo
MyQb1jmyztWaaKKQuXzqdjYbeFUUd6lxHEQdFUmsmmJDzIWu93LOijiQmtD0
cJqKt7RjPptXHt3WC/9nNcsGRl7JkhbO7chDRI7t+ceGp7+PsPqcBDGFyft7
cZENcZMrkkS/KpX/D5fsGiE=
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
ucetAZNyb/8HNhsugw==
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxN0n8sFHAUAPCbbCw/F+JKdvlVOz+OadG5kepUk3C6FIe7M66145apESu5
i/Ojufk5UTI/IsNsTpsR7tiZTgkXOV3Jz8M52tGQu2pr7+ttb2+fP97ee9s7
yeRQ4vUwGEzw3/xXj8cdfRvHDPXH/I8LN55RM1hU8B2yvqaEHQmWW6TZxPky
wae3E6glZDaYEV3D2nNNBWsF7zZacdlgKT5YyD9WCuaeG2I1cOrBbYkDEcyK
NvDKe8+iw0Md4PmASnoGoQu8qLuHqyT2on1DPB2Vt0TgKBqFIzIYBFNM8F7J
fAm4p9XUxd1/GOyqaarsk0jB2F+JYsHFj2C/+9WFnbuj4I3zczuFpDHwDM/t
EadiHMw/ZaxQqSfAZ20DH0YQPoPtcrM9JLmTYIMr9g72I1Ng/OMBAtdlGmxi
tWfN5crBP38XkJIGZsDm0U7psTgF2MMMu+0b/w1sKAhtkId9B5dOlMdUaZEd
RMbCsepZ8IdVnk3B9R/gL5ckSstd5IVA79sWz+fApk/fyEouz4N92EEb+Urk
/qzOVAp/AcySOZpWnVlE/Z/6AqJkyGOG9KwX3CVwudKVQXVeBnfviFtmBpG1
5BiDpWQlOMDXWZdguQKuYW8euitGpo9kPyBxVsG4yas5PLM18L6teX1ID7Lc
SJ8hiFWh/8CL8l5pkVN43H6v5nXwaE5yGemaGt27tVZrFIKsZbLap8OQ3fxo
0tQI5DwNWU/IRCYzsEluachdxD6yXQNyWCMxXNWIvGwlpHc3I1tvNqVHtiOn
vC5uL+tGdrdknTAbRx58MotXyJBp6iiflink/OHQ8CDFgXmZxNwcJXLmekfZ
zbUD82mEOic1cqC3Y69Yg/y17qW06NeB/Y5gpxm7yMaZxUse+8i1KpMtnQ75
DxTzN0Q=
     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13c8Vl8cB3ApRYUGkZAkGYWKSOqjQiT9kFVG9ua5iaIhIRmlIYXIyApZ
GYWyZ0ZmskpLivtEpCT9Tn89r/frnnuec77ne77n3A3WDH07VhYWFosFLCz/
ftfZrCm2sdbFzIYL6nkinNhvcM3wvIMhlBMuOKYtXg1H9UVTt12PwydHRebH
eT70r/bht9ltjd/2gwON8iKQ+GFveFvdFd6XTR0dNkjCyjzR4fcWb+wazoTe
BQXM33j+LVskCALcBtIamQfQLKVTGCwQiaXiEomqVfoYVyyqvXcyEh0/Ez+n
ch8Fl/r6nuyGSMS8WCfHaX4UuicmfnSdvgOpk9zlr2eOojMiUmlD511olf0Y
8NhqiL65wdKnYTEI0a/lT4kyxmire9WXuXiwX7S+wcEwAxvtMjovmYCXegOv
GGVmiPRMOBlsmIC7YkbrezjMUXSJw/9eVgI2N2llJyWb4+e9/qTK44k4yLut
eXefBc6/vPiBszgJ1d1/FxYnWSJgV4NDKiMFrK6tGOW0gYFUsLFOVApW7l8y
sGy7DcTWaR6cqkiBCL+qt4yRDerm6sX3r0rF3pq83FP3bcBeUf9xsCAVPoKR
G+ZlbBGuUW/DO5uGb82mC1fr2uGE4pWjZaLp+Jt0O17B0w5yEgcP2Ging8un
ZbdJlB3aOepF82LTIb0JnnFv7cDTUjd8GA8RrCTBJnbSHtFH604EBmZAoN85
u+i8A5zVgv6TfpSBXZXyHy7ec4CyggY6ujMw8fZNzLOnDhhYUycssjkTSn/L
Qx5MOUC4r3awtDET0ZPJKgxbRzCbLrdYT2biq7XL/PaLjqgoVX/GsS4LZzMW
T/hHO8IqrjbW2DULHk31xe3Njki2rDX9zvUIb05JL2XIOMFL77J2jOIjVLB0
C7xWd4LGfvXd+ywfQejjauV3Zk4Y2VgrcD3vEdLMdUdehzhBaqTmtZRBNl6v
S2mLfOOEHLcaY+voHIwnD8e1nHOGyZcfonsqcyDr+XNr5jVnsDhI0nyjOVgi
z5hRj3eGpNzBKnvBXGyr3mb6pNIZZyWzTARdcxGzq6ggf6ELBAVPX76yLA+z
Ktqff553AXWc+6vn+jyc77Q1UQhzQU1Uuq71jjyo8D93Vo12gRtv/7o9pnkQ
Sv7zp7bABc+5VPMnM/JgGCHslzrqAqsFS9+YH8oH/6nRFS7arijCAzVti3yM
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
kX9Y
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IHZiSaLE1117/wc+Nn8l
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
EIQKxw==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
bzL+H/BAVzc=
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
RsS/Tk8L0FEQmpPFW7Xuf2t9P28=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
HBuT4LFOdsoF0SLb/wEtc/wQ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(xy\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1, 3], 
       Rational[-1, 54]}, {0.3333333333333333, -0.018518518518518517`}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[23, 51], Rational[1, 288] 
       Tan[Rational[1, 8] Pi] (-12 + 
        Rational[2601, 529] Tan[Rational[1, 8] Pi]^2)}, {
      0.45098039215686275`, -0.016045606984367165`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[29, 51], 0}, {0.5686274509803921, 0}], Background -> 
     Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[35, 51], Rational[-1, 288] 
       Tan[Rational[1, 8] Pi] (-12 + 
        Rational[2601, 1225] Tan[Rational[1, 8] Pi]^2)}, {0.6862745098039216, 
      0.016734954615142843`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[41, 51], 
       Rational[-85, 10086] (Rational[-26669, 2601] + 
        8 Rational[15, 17]^Rational[1, 2])}, {0.803921568627451, 
      0.02308022712726213}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 1}, {-0.03046295022758442, 0.030462950227584367`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6629547324873037`*^9, 3.662954779229392*^9, {3.662954819588317*^9, 
   3.662954825521956*^9}, {3.662954858136798*^9, 3.662954865907774*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Av", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{".1", ",", "1", ",", ".1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "\[Beta]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Covxy", "[", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{
        "Av", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "Av"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(covariance\), \(area\)]\)\>\""}], "}"}]}], ",",
    " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "Av"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "Av"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.04"}], ",", ".04"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
      "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
        "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{"cov", "/", "A"}]}], "}"}], "]"}]}], "}"}]}]}], "*)"}], " ",
   "]"}]}], "Input",
 CellChangeTimes->{{3.662954413223871*^9, 3.6629546764768248`*^9}, {
  3.662954900399221*^9, 3.6629549168658533`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJxN13k8VO/7P3C0zBj7DJmpCEmIQrSoXHeUJSKypaKsyT7LUZIWyi4pCpUW
kT2JkNzZSfVGpdCCVNpXYxnLb75/fMzvr3k8H9d53Oec69yPe66XsnuQnZeI
kJBQo7CQ0P/9zsGUp+8NThjt5VVST/1ZU6u0QElN8ZwbTCeotqSKy+GRN8nW
PSlBsChx6sc3sWW4f3PbYEXKMfCjzdP+ImqAX7A+FN5MOQOHd28XWyWyFXck
/JW5nJIF8ckv4z3e2+O0Z6Va75uugkEkTh5f4Ygb+307QuuvwUO3oH2xLCes
zOuRv3b/BoTkeGg6z+zCvauqc/4W5YI526NkiuSGt6eHNV5MKYGsLB3Hbh9P
bLSTcTfN7DZcmAh+ZiLkhV/sGpk30HQbChUfrL99wQvP8SnK49SXgv5Hx0Kv
Bm+874TC7yv3y+BHvarvfglfzKiYOva76B7Ut8v/DPMMwLdrejo3aFXCs5TW
VPLnAGzeUL70dH4lnPQzXEj1D8RER0DLwtwqyNSfKxoaEIS7vryR3HL1Poyv
TTy4vTgYJyypvZyWgiHWYJfzPiYTm7Zn6j6UeAhDNjizN5+Jm087yxrYPYTE
2E1PFQeZuGWqs0ex7yFkEF1iP6xY2Lwqqebckjo4ltYVG3CchVvZlllkzzoQ
tmO/zrrD99dGzz/f6qBOqvfMPBobm+eeMPPRrQeRoHhV7c1s3OpupPmaUw8J
xwJGfgawcVvPvZ9N0/Ww82ey06oGNt6Wyu4yNGkAvUWiPVlf2fjRDt3ykugG
sCU6iXNUDn7Ukh+WLt0IMcvnnfq6m4O3RfrslXRoBMsWycsmEfy6kSqKTG8E
EW97pflZ/PpEv8rYm0bw/lT2SKuWg9vLL88LUGmCjmRt69I+DrYKcRke8G6C
rgPVdomjHPxYS77dsaAJvq9VIaplCPz4RnIy0m8G3flFe34gAlu5bWeVH2qG
JtkvasMO/PpCiqPmg2Zwin6nwPDl17ub12UJt4BtfF9eWBi/fjZykaxpCwx/
5S6fH8evb0fTMXEtMGkx/PnuBX6dPNU/9bQFRj92Gxy/wa83VjUwaa2QL6Rt
ur+IwE+OETmfnFphU42vhW05ga03rI7dc6kV9l35s9/iPoGfcn/6dfa3QmnS
0E1jzK/fKbQ2XdYG9p5Dimvq+PUAX937vm0g71+3wP//PDTIzf7z/3n3npqk
I49m/Z+FjZl7YvusO9YadxlkPZ51F019+HX901l/GZ0/s5nVMeuzYY9zJ0Ke
z3rd1NkdZcGvZt321jlSZGn/rJGxPS/HfWjWLsEWv8p3Dc+6Vlnz5MOb32Zt
f1HzxpvAX7NeNO+BSbL3n1lHr2668zDm36yJQ2qKhuSRWXs/iI4tixb4uuS+
obO5Ar91WwfBLQKHx2T7u70UeGGpdIb1J4F9m5p1TH8KXNkT3rJpVGDSDz1X
g5kRKJKW7//3kMCOIp//aZG4YO4iWdBWS+CbC7LiVaW40GX2MOptNYH/aTqo
LJbngjEpnrKe/71NQKyKtoQLd0RCOt7y90PKzjobseVcMJMy3P8im8ADPqEf
RVZxoc/6vJFKBoF1wrWPTqzhQmCT/sCjRAIfS35P+2PEhfs3RiufH+N/7+z0
/M+mXPhkJqS9NZjAClU2mwesuVA+8ipT2Y3A/k/mvXrlyAUNs5TdQVYEvj9w
P7DDlQtvHQerVq8jMIUbMq/VmwurbppMslQIvIuifgkHckGnirbPQIzAtxTf
6t0juFAVUbrw6B8O3mq2bV/OaS4s0U40vlvDwTa/PF9ykrjw7/TuVJOrHLwr
/Zj11jQuPA2af/HISQ4O+Hp349BNLqzhddwbM+bg0PP/lZUVcaH/QIaFmTIH
n9j0RTOynAs1xS1s22k2Tj2zhKHSxIWw+cLrC+6ycdY6w+Tfj7mgVqpEm5vE
xnkD9qS65/z7RU2RV3iz8YPVcSNuQ1wgVbSdHqGy8YeX/zovzxkFryXrDHmu
LPzzuJRFgNgoMC27E0xWsfC4hubDjbRRsHPY+P7oNBNLhLsV96mMQu7fFrXe
dCY2UHoUxzAeBRmHm1X5jSH41IEsk9TjoyCr8XL/s9dB+IxMdbVnzCjcuJjS
XegWhNOrn+vqJ4/CNc9Bxz/9gbhInKL0LGsUJJ20rAbfBuAXt9mT0ngUfHSn
lA3b/PCycYvyhKlRuN5na/bM1Qc3xf5Tiwobg3AiQ/9I7G7cLWqROnVyDD7R
exTua7vgj7GX54TGj8H0Td195zucMTnOtN/30hjIZdsy9lEd8ba4i+k2tWMg
/SjvMxGzAz+N2yi+SGQczFkvDRI3GeBX8VG/S2PHITznCdlTzxaGxXrcVqSM
g9F5l/pvqXYwHq/9NDtjHLadCZM+PLYTFiZ0518oGIdjQiMlNtWOsCdB3fPo
k3Ewth5g9a7cAwMJj7vNZSYg/tXBgQ1eHvBHXHlrPWMClqvHyaVRPEEkkVO2
QWUCGLKm9d3FnqCaqJi8cvUEVIeKj73/6wXeicEWsg4TsGq+ySH5oAPwJVG2
5t3FCahxU1eQVw6AZGGPmZarE/DVlTn3ek4ArOGUGt++NQHJuzuvFmgGwsk9
1m3HKydgnnWBGmNlEDBWxHQrv5qARYvGWfeSg6H2SjeD0j8B5icK0oSeBIMn
ddneP58mQFdb46U3OQRuj9e9rx+dgEKXanQ4PATMW3m/POR50K7SdNFwFxN+
bNimb7WEBwd6ggt+JzLhfMnFUP3lPHihK370eh0T+tMMpueu5cHLyD3b3y1j
QahXkFiOIw/eX7slYjrAgsU9D6yTXHlQzDA7aynBhnor8RTCmwcBG+NWqq1j
g6R+Ht2M4AHbZ/yJWRwbckTeLxtO5UHF0LbOe0s4YEXo+nZc5kHUi0OrBjZz
4M/nY4WVN3lAqbt5oMqdA0adi1fHlvOAJt39zP0qB4a2+BEhD3jA0V6jrvmA
A3GVVVW7mniwwFr+UsIrDrzIckSaL3jgHEC8lBQjIIx2M5L6hgfB83pOq6oQ
oBT9t3liiAe7kq2W1a0loHliM+X9Nx50Nqefe2dJgH9g8vb2fzz42pCfH+ZK
AHXwbXLZJA9eRQdsSAwioNJB+3nm3EkoW18hST1GgGvbEfko8UmQWa78YU4i
AXM3PXLxl52E+OP/iL3pBOTfpl+xXzwJw53CbEY2ATtUfQY2qk4CxSA6Uq+I
AO6FctVlWpOw00h6y427BGSKzT0goT8JidccLb2rCUDH7ApGNkyCZpKKGlFL
wMc/V3+8MZmEy3Wazk8eEpDg/VO32XLyf+c16PVu4hTvFPjRrdCTNiyB94eW
nvmVIvDPx9X9a29OzfqoSqPusXvTs145fZQr4iuE/ueWvc5/lTyFZ617JeDl
UbbIrLfY1rmUM+fMesUHm6YVp+fOmikdsvHK+Xmz9ijusPuaPH/WstZr7axf
CNz4/bJtKYM060ubbDsHNwjMSZxrK+sqsLvBW2ntIIGt39zr2HpcYAuzYqGE
KIG3lGbrdMUIDIsy99ETBTY8dTbZ9SwJZXzZYFXI77fBz+iH2akklLojUPXz
AwJ0dkX8+pJOQgqJzaKqVfz3bWAr6V4hocc92sMedwhQ0/bbEXqdhOJ3GGSV
5BHwLfntF3YOCeWIiZZ2ZhFw55/tKWY+CTGecDZYnifgkHPTkuBiEiJrWlYr
RxP8uWlddcAdEkLpx666HCJARKnQ3q+ChJov7nDm+RDQGrnk54FqEroe524i
6kiAveV8Vc96Emo9nCF1UpuAhSWHa/c3k1BFolrc6AIC3lG/O7s9IiHPM1MH
f05z4GDvs0SXLhLatzZ9/ZFHHNAxMlN37iahX0ufHWcUc4B7rbreoZeERMwj
BqyTOXDC99rojkESYn8Ktz63gwOmT2RTrD+SUMJL6UOFKzkgrhujZfWFhD5V
dIwEi3Hg4ljgfrM/JKTV+qBHqo4NxdEb2zeJkJFX+Ic1qxTYwP5a4rVhPhk9
Gyldrv2bBYY2S4XWU8jIUychdaqBBU0LKAb6VDK6XXBERMObBa9vvryiqUJG
shWR0SsvM+G6qOV6dTUy2jlf4++WA0w4EFD7bJkmGWWl/SZ26jHhr/5NsrIe
Gf1IaNHwawgBSiOTKW/Mv7+zxpO5vcGwblDCdK47GcWHrRHKrAqA6a0n+oW9
yaiN/oA1b3UANOb9C5vxJaPryxmPf+T7g01IX8lECBm9TO25tS/ND7yF8hi/
T5BRRjtj4PYeXzinuOX7m2tk1HpAbr0f//+g4vHn0JabZBQlObTi8QJP6A07
I1KaR0Ya586Fb4zwAKWXvfJRpWQk2XXQ6OA2dyg8E2KsWUdGPU484ZulbtAs
lHWB6CejuVL6kQvyHGBicHyz1BJRxJEQi7BaIQUKZ7Mej6mIonWP3fa4LBmp
RbDVaVBNFJ1e2/x0wbKFODoz2b98pSh6R4/5r5Wrg2Xtl1/YbSSKFDyW9Hm/
N8baTfbfcveKIklecfv5up14X25JGrokikQynhxPaffA8zf/WXzsqijyBLcv
p4I9cVGv/o0H2aJI43LiPWdZLzwhUV1iWCSK1i+bKmA7e+Pz7MZW/VpR5Mpy
xwGdB3Dr5p4J9X5RlDaqtjr2aAAO7Ft0wmdIFGkHLy2tFAvEchxXUs6wKPob
JXJf9WIgdr/1nrb0tygClbAjMQVBeFLyh5aCCAXZ3ZI0L3gTjHVei7jJqFLQ
XQnO965qJu7mbP1go05BsStlq7b/ZuKjUjF+SVoUdC6je1WyGgs/MpY4JGZA
QUa2YmcdElk4+LXNtMV6CvIPFlV5UsvC8kRKVMwmChpy4+WP/GBhzzz5s/NM
KWhZvshlY0s2ppi4yG/ZRkHrbTYF7g5l49LXly6ftKYgbZ4/SfI6G09LqeTP
OFLQO8l+/g5k4+w8Tx2j3RQ0oGCVcorBwZYmuRXhbhTEq7mzytOIgy8SWg3j
PhSkmKgTeyaSg42kgyzW+VPQJ717Kh03OPhDXul/RDAFBXJbY8LqOTjB5J9D
OZuCDpQcSYl5x8F6b9a8/nuIgjbFakj8m+DgV8Rhd72j/OfLMq+pkOXPy9I1
w8EnKMhpo/GuR1oEVsufDiw5RUHWDyzOqZvw85rJ5pHvsRS0lLZaqt2JwMw3
kUe0kigodcjcp+AggRmhzcJ+KRSUbKWyouEIgR9Ki8bkpVEQTf/QO7F4fv7I
t5QczqCg51snpiIuElh8S9J5tSwKwoeXjsjx5/myNx0LvW5QUMYaSfVH/Hnf
JZR27UYuBf0lmf84z88DQjKOywcLKOjax+xzQfz8F5ItR39VQkEjt3ZfV+Ln
v8G1L8hPyyioq3fJxgX8/LGz/fx4wz3K/85j3Ohq/6XqvsA5p56132wQOLbQ
ruhsu8DWEzuCffsEpprbrN78VeDM95ZVvyhis1Y9Zg5XNQVeU7HZcsZXYIvv
hk6ueQJ3tz8avK8nPmvPfJdARo3AA9PiKR1tErOe3zxl794kOeuZAI0ZvW6p
We9otFANOig9a1sF8/+MPwlc8/H99/JAmVkf+ay4Z8F3gftHdzmvmRZ46/xU
e0cpquD9Dyy2D5OhIk1Y2XeAn+fett3YeYVGRfHMsbHdDwhcsGLFzno5Kgq+
0+dnVUngQ4l37D7KU9Hus21qm0sJvOXnejvKQipyd9wuvfkWgWVs62xXLqYi
Ecf7Ijsv89e7Y25rp0hF08/dHh9NJnC+bMcOQomKJomiVa0n+HmWcNqRoUJF
g4Z+79eF8PPhq7c2tapUJEYaTOl2JbC0obfNoBoV6bSIvs3dRuDXmd+t52tQ
UYFCxa4yfQLnTbGtNVdQkUx+/ZmZxfz13Ca3W2tTkeMno5mUOQSWWiq2PU2X
ij6KP7bNa+fg11EpVtWrqYjtGzW9roiDb31kWL01oKKjLjsOaSRysHG+uqWa
IRUtjCsd3WrOwZLit7dt20hF0R5rQiOWcnBfwNptgUZU5CklVKkzxcZsXVOL
CmMq4tRcEF1UyMbo3BPz3i1UFGNZa+F2go0lRuzNp03568lq5hs4sHFOpYeZ
qSUVWciXtd0eY+EeOLG1eycVBdAMr5zm57Oca+StEw5UlNujvl5kgomZc5K3
KDpTkcoSlYXQwMTiLVdMvPdQ0Qs7/UKaHRMbWdds5npSUQQ+EtCyPwTf2DO6
aQHB74fWyakjlwKx/YYHf+QOUdHFjtb3tvRAPH9hZK5cGBXdkAsMTEsJwAdf
SsrIRVARVU1kZ9JJf6xnpzZEO81/XkWb5ytsD+J6M4c4mTQqErf43J9+2wsP
6pV1i1dQEWvqR1u9lxM+L3M4XrySirbzVph/Yjhi019GSLyaijKnd2bOPLbH
+UWP8sRqqeilBs/MSscOM9UHwynNVHQ4zfmpTq8FFlaUWUrupqI1plKL1P1V
sJJoUNAcLhURQqJpbh/tQFjCevH4KH9/5FDPLVtpD4PS2m0/xqlocV1rqRDH
AW7Qv6r0TlGRg5/YqaoZJ1BT9+m+PY+G5nEjq+NIe0HLzG2TqxwNKRmlZV31
9QAJS6MvO+VpKOBRY0SaiCf8sFa4YMGgoRWD+h8zMzyhxLHvl74CDRlx/UUq
WrxAz9spW2wZDZ21TtlmKXcA1p6yEavSp6Hvbm7zSKH+QI9dWVm8hoaWMYej
YMofxhIkvLLX0RCn27+XdDIAqs+3157ZSEP5EZWGy6MDYWO2GdN7C9+fT7ft
gWBQuKW2ZI8pDTm8Wdi3JTwYpgvmPbY1p6HLZm9zdlYGAy5rWLbJioYGHeSj
n2uHgHED9NDsaaj3vLLGNwkmLG1RPC3qSEPFabrDKSZMmNs+pTfjRENz9QeW
GB1iQlPX/YQvu2loq3n10eS3TDAfXIvqPGgozD2LlXeFBRofF3yv8KIhV2HR
jLF2FlC+jKQX+tDQusEXVepjLGj/Xfb3gh8NVaRGP2BsZ4O1sE5uIIuG7F4N
M2uH2fAr7E1nEoeG9FXjg85IceDcv7jJ4lAaurey/MmgPgdeffpg+/MIDT0z
pZ4cC+NA2P5z4VIRNJSVOZNfnMmBxX0od9VxGhr2zuh9Ws2B/U8zJ4OiaMgw
pTVO/x8H5ppbLE8+zV/f3/RsgCQBOXVc29sxNCQuOZI3qkaA+Ybs8I44Gips
jIx4vImAL3dtc38l0JCa0obiD3b8PLRyplP6DA0tfN71ZKM3AatuFU7qnKWh
U/pmPu2hBHQpuyy3PUdDNtuLx+P48zU7k2QXkkrjz2Pi4+xUAhbIlYefvUBD
F1ZoPD15jYCqJPfc0nQaYj3a311UQMAesnRXZyYNLV4a4fGzjIDpEw8mf1/m
X//15H3Ez2tXeQeXU6/S0JWgKHomP68Zc+h2etdpqLz00K1Rfn4Y+tEUbpdN
m80X0QdYucwcgaVtNOz+FgucYfBuknVP4If/VeQSPQJ/8E2yO8wTuNdQYseI
oeysO8QStoeECbxMcXkNea7crDXDxXQV4wWOop0ZURJdMGuzRbe1G84K7Lon
uNxORn7Wap8Pm+xLEtjpo9JWiQX0WY+xmD1lBgJnCDcGuDgIzF4o+tLeSWDr
1dbIZhcdrTmT6vKb3y91q3N5FrvpyHa49l4zv58iXq+oW/bSUYn2ZZNBfr9f
H1UIN3KjI4XVphEW5QRUpLl/WLefjqitd98KFxOQXJJrvdqDjmpah7ukbxLg
1/rtnrYXHd0dmv/wSAYBpgO6yuo+dFS3+JCIeRIBShNEnIovHUWPkX+EHSdg
glrzd7EfHR3kkJ8yQgh4vkJ4r3wAHd0p8f6gsY+A4i2mzTJBdKRh9izw9nYC
YvbGrxIPoSOh432X7qwnYOMZORFhDh25UHkxRhL8/XXLxY9H0NHzioSoLv5+
//Uw6/nIITrKEP+cxe3lQPYfjdwv4XSkVC+0d84NDkSIBUl/iKCjkcbKmZEo
Djir3j387jgdXbAOaEzw4uctRyOr51H8+2fe8a5W4cDHwMjyp6fpSIKwFN89
w4aH0a2KbTF0VNq+3LOsl5+3qux+P0igo5Qkj+AriWx4s9gnLfc8He0R/RP6
fogFjss2fnidxu93YNouzh0WdGjL6FPT6ehnrf68KxEsqDe63xl+mY6a5/cH
PqGy4NY+KQm7HDqa0WpIdlzBBGb2vcjJe/x+xn1YHa0SDF8LE7p0q+lo7erW
RT8rg8CzfL+yTw0dfd6lmdegGQROzWK48yEdbfvNGQol88/LYbeJnDY6Mrxo
re9U5AckLXKIbR8dxRFuzoq53nBc/w0+/YaOzBq1Ou/NeMHExjuSNe/o6F26
ufO0oxd8276nUG2IjlaFu8dhYU/oCrr9ifeNv/4ch3RLi/1wqczZNWeajmRi
PTcdtncCuRrtoj4hBpJ/tfZT9QcHSGoUmZSew0ARu6/ureTYw4kXhelHSAxU
khBVsCnFFrxHhV7skGagr6E7HK4fM4P+mRdLT1MZiPm+MedayhbYRS5g3pdl
IJWo+vWs7M1gxXCQVmMwkH2Tx0lW3FpoUtZ0272IgXSe5H8RzdMFI82ZomQF
BkoInnNnQ+JyqNR7Ptm0hIFIJ8KH5JLkQXdDniVPmYF+DXvTTv1ZY/T/AJ3o
7kw=
     "]]}, 
   {RGBColor[1., 0.7508478000000001, 0.10824136000000001`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF13k4lN//P3ChsQwxTGaUJBFvW6FUktchkkRISIVkq5Q9S29ZZuaO8kaS
CCmJKNmyZDuIqCRkrZREm0j2rN/5/a7rk39mrsd13feZc17nde57nhsc3M2d
ODk4ODayP/7fNxfmb/68LVR7aqFUhDWmUSUlJrVJ8podyDGqm4oEVuPJ3hiT
nlh3aNnA4jwrIIv7dJ73F8cGw24hj8Af5G24w3vw4b3YaCgqdLm6hV8ft0SO
U1JiU2H33WMn3bkOY+PEwLqE2FzgkF5z6OQ3R6x9SPxxvEEeOOs/Vtz3nxPu
ODK58lN9HiQeFCieUHXGXC45Wb61+aBiXNWeEuiC7UPX/b5VXgi63zamL/Ke
xuLFC8G/c0rgSFmS7im6O45cX5USH4vh9d2ZnyGBPnjvyyTVasFqsDQsPrCp
2Qc/I6yp28yrwVVNM+LSBl/csNDaI/muGuI+OIb5N/jixqE6x7GfNfBHrc5n
VMgPv2jIDkwUrgN9ZSF+kdgA/Cr4fMZXq0bolgr/6m92EZvsUo84ltwIhUgu
dT7xIm6e+nWmta8RAjvUzgr1s332lGr5qeew5uIl3vcewbj56LGKqAsvYOC5
kI2XXghu2a7bti21CeZGhMPTTEOx6fji4+zPTfBN+d/Xcx6huOVR+Y318q8g
tSzhuNDVUNwqu+04X/4roCBzfKIlFLeJyn97X9sMw6Exe28aheEf06QlHe8W
OOSiqRqhzsBLG43rtl9rgdTBLBkDYwamml6LUC5sgbAQQ7lyZwaG++up4uMt
EN6wQKpNYOA46x3/jHq1wqMr+5nqfxg4i3lxZDC2Ffrir5ldFmbiqry6wncF
raD5O9cqRo6Jv/OaaTeMtUK95auLGRZMrP3k1KFbXm3wjxDz7adsJj40mEuP
i22Doxlf1yViJnalTPVGFLTBPqES/Zk3THztVJir71gbBEzLe2TPMfE38aSg
A15vYOXmU2O1e1l4Qf+Trm7sG7DegxRuWbOwiJcc746CN6Dws8VZ/DQLa70o
jN049gZ629+0Dl1h4auBTZmznu2wpf/s+s8vWDgjQ+Ts6NV2SBEr3n2nh4Ur
2qzVvuS3w3m6ytepryz8RWGwovV3O0Re7zjryEXgOUvFsAZKB1zRshEMFCaw
MMPToFK1A6beZFZIryOw5ruF1vueHfDP1Ic8+W0EPsijd+PW1Q7ofdh2h4EI
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
PL7I6RCDABVTcgVXJQ3Z79hwPiuQ3b/hdBmdGnY9XLPKqlwIEJRZ3233lIbS
otW/hRwngLNaNvJiPQ25uue6YHMChqbVJsqf0xB3erFMyS52v7oY12m00dAu
8rT2Ex4CCrks/A+309ATpIVZ7PN/P9VGyaeThjaOcNf2/GDB1S6XuPy3NORF
f3p3XRMLHA3CHJU+s+cncffMzggWHPkcTjcapKFeg+0Pnf1YYBIc3XTqKw29
eqddK+vEgu0lyVszh2jIrmP7UVtgAb9cCbf0BA0dCWld9W6ECUu1laVoiobM
OkU+lvawn5+2dW52MzT045/Nwmp1TOiNb21Pnqeh8Hs9G+duMCGP9DOdtpKO
1jBV7Xl2McHqi5S+oBgdVeVFC826M0BtyekRD52OGjP1gvosGSBAf0DjXENH
mvN19Iu7GVBtuO3H1Do6aqEJCPTzMUA+xzC6T5aOiD7yD4fUMJjx9uop3EZH
B7YFnx2vDIWbK+rO2hymIyOpmwfzk4PBZw1fl4UVHYXr5zjKHw0GE3UTdPAI
HSVNVhvvEg8GTqduEb3jdGSVtSV5Z9xFONP4s0TZiY5+q93PK2MFgVb0as4V
vnTU5MnN8d7qAvRKuMRnxtGRK1OXdLv6PFjKag2+j6ej1yvWS3O5nYcWZcpW
kUQ6OsT94ZUY7TzUape3/ptCR5zP10YcdvOF+/ZCguYZdMR32pxkLeoDXukl
jPkSOkp2YZ3OsPAEHiVeT7N3dBSWQcr0POoCIVt7MdFLR2/XSnQm33WGWa2C
VRUf6Wjf6p0NQUNO8NP42MNNA3Q0ZH/g9elAR2hzz/s695OO/Nb8p6xx/QQk
F1rbZizSkf/DF8OOoVawukI55x2HOIo+92axgt8Souo454W5xNGEw4Rk8zUL
CO14mHiBRxxxLkTfULlnBs7THB2mwuIo+WN46dvLBtC31LGREBFHxzd6Nsne
1IMjvA+8yqniSHDTpV6VLB04IH5YeJO4OBLW0D2v8992qN+gYHd0rThSZyk3
7chWBW2FpZyYdeJoQcFP5dd/clCq1j5fv14cZeSfr9ONooHqriyjuQ3iKHzI
WZQ1pqH9f+bNGEg=
     "]]}, 
   {RGBColor[1., 0.6815686, 0.08952772], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
eJ6QQG6fnxu69rKxlMFA4rMQCeRsIYs1BTlY6OW2s5QwCbRzAmqeKXLwr1xB
p+TzEqhf3YC/3oKDC7IDxd+mSiDxiPaPnvc42O2+0zH5fAnUsuhTV9AK8r7t
93OrdYEEsogqOq+kTWCR9UHLoosl0F9lU/0UIwI/rE7ijVRKoHyV5ByqFYFH
Rmpsa1ok0H/uPmvyfAi8+Y2LhnCbBKrxHfMfOknglOhf4sZdEuimYcGJ8bME
NlKQePfglwTKVh845scl8Dkw042elUC5U6fzJR4RuE7ki/QbARpKdFuZkvWU
wEtr3QZHhGlo1e4F3iqvCFzhFn7PlU5DKy/sO+9SSvp7dcmoVAYN1f3YG77q
A4GPjV1zrZGjoXsTfV2FtQSWin0931iFhpYFjJptaiGw2w6LcX9VGnqvvrR3
dRu5X8WmugcraMjeftPmVtJviXR5ZLWtpiHTV/PTd/QS2OnxOEtei4ZUN+vu
Yg2Q+w+K9rReR0NEeNWd2N8EntkgaxZtQENcmbefto4R+GadNmV0Iw2dodi3
02dIfdLeNq80o6E2tcebZUi/uPmQzUvXbTSkq1fObhDg4pQ1vKRUKxpqFDP7
40z6zZ6JY741O2joiqXxs6ukHzUqmrYUdqShwq5VfFdJv8qOj19p7ExDOjoD
Ek6kn+XZzxcJ2EdDq7VzRWpJv6u18H7HAzdyPd7TKlTSH0d06xW2HaYhh+qw
c8Mkf8kqTZP3oiFhLS37VNJPLw9xCLb2oaGqDvX8cZKDTTodogNo/79/YqWv
/PTR03P81kO53DVqjm2fJmfKZ8zx9xmJhJryOfZ3jfRLNfvvHwuVTNu5vpvj
Wa8Vs1pf5v1j6+ItS7w96f+YcBKddztmjmsGyybqM+ZYp8ffvPL+HKe0K1/E
D+d4qrmyM/vRHO/7EqRz9wkd9X9y4fzveUNx9ZJzqdl0JPzndM3/njcsL6/5
GP+Ujj52LPX0Jjn+7SnlsFw6ehPiL15M6jf4arm33ws6WqdxaH/zf1xs96zu
tXseHflt75d9Ser/4lGYhFM+HbEW99T9Lz6KGat2b39DR6rC6ze+JeMXdqP+
Hiqgo/WmZQKDZHw7LkWMa7+lo0t/TuR3kPE3T1xjtqyYjlbkmdNuCHLxQ1Zz
kkIJHdXbWyap8nMxPfp8B62MjjYZ5w35zhLYP0xHm6+Cjl5Q217HTBG4/iTv
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
     "]]}, 
   {RGBColor[0.9939926, 0.5927594, 0.07059434], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9819778, 0.48442019999999997`, 0.05144122], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
cHk=
     "]]}, 
   {RGBColor[0.969963, 0.376081, 0.0322881], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
cTp2CuyzHiYi7hL0OCE8rsrBEfOJW6l231+KSheEWj/7BuG937da22ULozT3
FKOVm29ixxxbV+lSEcRKWNq9IjgOd82LxDbUiqLSRb8LLxml4PkKqdYXb0XR
Rt5HsUvWKVjmmpJ8XqMokinedNPTJQVbCOs/CG8VRf03B/dbJqbgV8vP1RkN
iqJLzbOjtYMpOEe3llYkxECu6xs2HY9KxZ4O1y6k7Gagb6afh8abOThaOabk
+n4GGupN/fmtn4PzBrj83qYM9DZdfmftLAf3uRZGmVszkPeNtE631Vxsc+nb
fWEnBqq+qSOp4sHF2+MNewJCGci48dG+vyI8bGt9QNPlBgNlX7JPoMvzsLfM
EQ/bSAYayEh+VbiOh/PT3Pn0EhloywnBO0LWPKyYR678cZeB1iWjosscHjZw
v3/yazYDndF32fLiPg8fXf80500eA0nefhJw9zkPxz+r35xdxEDxltOHXdoo
Xns1Z+FQzUCRDh7buyUInOmZmXS3loFmi/7IX1ck8K7Vpm0DbxnIpDzw5itd
AocGpZ1w+8BA7hPZomwTipfW7E0vaGOgZ6eNclWOEPhV+8+eia8MpPWwpqPp
FIEFtu1w9u9noPHGg3PzAQS+Mzici4cZqPS0ul1gOIGNk+PHaD8Y6IJgniE3
nsAhE72e4dMMJIrzzuRmE1jpTuTTN38Z6KXwHok0iudemuvNMPmZyP1lHWNt
GYEX5YcFJi5hIoWb/o8031H57dZWtopS6xzb/ISPVH7RtkWrljHRD5OrD3kd
VH5nzRsZMkz0kaWxN2yUyi/d8qZPlolSRLS0zk1Q+V/7MzVWM9Gv91fTRmYJ
TFeuj8/XZCJ6dPqz/wRJnN7s/fHXGiY67vYnSZ3iNaNgORm9DUwUWlzjp7KM
xN26Ncf8NjORoaeeXyXFb8Ed7mSZPhPNfIjPnaP4TTFSupvPkPI7eETl//xW
qV+pZLyTiVouqs4covjNYdjZ6fpeJtqy5O3mcxS/0VIlcuoOMNG6Gzt+rqZ4
J31P6YioOROdXPFI15/iN6MpxzWHrCgtfJbmSfFb911Rj3hbJgr/Z8RNmOKp
YIsnhR/tmKjDdCjIiOItRfqJKZmTTKQSjbZJUzxW+Uhwq50TEwXlzKZH/Z/X
7PP9b5+j6lW2LrlLaX7mEdzjxkS3MsquHKV0Whk/Tc2TSf1/10zlU/mQS47x
OV8mGi4wlM6k/DplDl9/4M9E0jVyXVspfguqna39GcREbcHhe9wofpP3vSOy
8RoTneE079qhTvGnygFT33AmEigJanxC8Zv9+4mY57eYaG4Kfaml+I0vhGiZ
j2GiO/t/2vjLU/7rdi83SmSi5PZUvXqK31DX2JFrqUyktcfjNP4/v0Ulc2sI
qp/yD42mkpS/gWGHcAYTRasfcgxkUv7fBxVMs5gIxOIWH1xK+XNiHWPvM5Fk
rBf5fBHl9+fboFQhE7l5wu4LFM+nZUVoHSum6n0eJ1NG8T6y2uhGljJRXNKJ
f+8OETjocehv5WrK72yOwKHPBJZ3WKN3tpaJfG9y+CSbCVwu9uli7lsmMmD2
9nrWEXjhX/WFdR+o85UWUc0sJrAz2zRXu43av7UiA+MPCNzywvOI2ldqvqT/
dOBdAucwyx+v6qPO09YslBRDYItHVmeEJpkoIOJCdhF1v14c8WfRZ6jzlMl/
5Rt1/9Rp6ZVzc0xkq1HY9uwAgQOzvSP/0MSQXt6o4YkNVPxMxcDoUjGUjURf
h87xcHi9BYyIiKH7g/m3x0cp3krvTxhkiKH3S97rCnTysPp+0R09y8RQ++ZS
p1UVPDzPseG1yoihC8rlJcsCKV7bPnbopYYYWqndoRMwxMXt4sH3KrTEkKlC
3/DcBy5e1ie58EJHDB2e2erhVsXFAZFbc5+tE0MVwlYCKlwuNu+4tvjhVjE0
VHBDc9CEi/8GrXyesk8MBV6OGKTlcrDZy71Kbs5iyEBlpZe6QyouLJvwcHAR
Q57774/cO5CKpZ7errB0FUNSHUST/JZU3Jn9x07fQwxtSK2JmmGmYveo7JQl
fpQfu2qDbVkKjrZdwrwTLoac8oJ2DbNTcMOPmj+f7omhOyLu7vAqCR9ateed
Ub8YcqV/8fZZkYBL+759L3IVR2TgPqVt0ZH40qDsMfZ3ceRZx9vNeHsVZxyb
2s72XoZ+n5s0kkhwx/JL3Nzok8uQAb6RShM4DAf5dbNcL0ig63URm5WeXoTe
s5HmF2cl0GDfTG+6TRg0CEccOO8niRbVjJ6Y5sSAsqxqqdAiFlqO2wbEQpKA
eDgjrryYhZZWVT+nc5KAbVjvZCjEQunL96WOU3y22NFLwk+EhSpvZ/yt6kiC
vuwq52FJFmrkPX+9dlsyZG60l65XZqFDBU7zMj+TQe1AinfcbhbSz4n0EbFJ
hbSvLm8e7mWhd4K7i/RcU0HKHSm+2c9C0/ezXx0JSQWhuP63i8xY6OKnkdAr
+akw8GmjsrcNC33a66B3RIgD2Y5NzTZnWUhuY8nTX0Uc0PAXXit7k4X+uBh/
GFrMg7Abq/TZt1jIjK6aLizDg97kNbsZUVR87KaxLi0epBUdPj4fy0JOazTL
Lx/iAWuME/41lYWURqorriTywGMuL/4Dl9LlNy9/y+RR8yon6wkW2hd7ImHk
CQ9uqPUUvUhnoYxFbV0T76nvHwetbiKHhUodp5aNMAmwczf4npjLQkFvttVE
rSLg+WWz6cgHVPygR8MXDQK8OZ6MwAIWurVU5dkFYwJaskOlfQpZKPs2V+CF
GcVDxclKbk9YSCF2wb/gGAEjLaVbT5SwkOpnw8LUCwTs+1a/07qUhTBp1RJJ
8VXWz04z0xcs9CbqVYd2OMVHDAEnqGQh2YMGZ//lEfBx94E4uToWqu05XjdZ
QcAGqxPE8jeUn+O25l11BMQ6ns9m1lPzIQn6jibqe/ZKAl5oZKHe7052qIuA
nKisuqlmFgrdt+y14QABgsSz92PvqfWAt81jowRUlrQPd7RSuqR3l/ksxYe1
Y5MfP7OQRXlM52J+EgI+8tMa2lloIms05MxiEtp6JURrOlho6wfY5yNMwubf
ylLlXSwkKee2c70YCYm0zauLv7HQAUL0BleShF9i+3Tye1nofZCFxmMpEszk
jm25189CmRXKej4rSXig7WqcNkjFfxIpH5AjQUQ/yDR5mIU2WEOz4GoSzu6L
tY3+zkLzQbyAFoq3XtncORU2xkLcuoK6g2oUDzk9cQ/6yULOh5+89NYg4YpX
zSXfX5TfgZueJlokfL3aFuo+Qe3f0YqudxTf6MeOxJyZYqHw1vhl/BQPpaTN
c+3/UPupOCbcSenJB2L3bGZZqAmfbnSh+MmiTPGx2RwL+UXCqSxKP/pvw4s9
Cyw08MG5hvr/A0bbrlrEz0Z+VtdnlCntMmDTspnORgHbuv6cpfLVTjp36Aqw
EVfCo+ooxVsqAgFDaoJsJJ7XaT5L1RciETUhv4SNKgeD0vdQvJWR5HZ5hzAb
PVxTeliS4q3KFWaCp0XZqLQlzCBQhYQuUjc6jMlGw6SDVTg1Hz4lcen74mw0
LjIWsU6eBLl7P2+/laD8yb+NftR8DbSaNH6w2MhWNljCgZr/8fyCx8uk2Mjw
GW/7AMXD/hvi9DfKsJGAVPxWUSYJnOIL1dYr2SjO/N14A8XTJfoWB/1k2ai6
qd1kPcXb08Yse6zIRldjjvk0TxGwvHZioEuJjSRH44TFKd7adODD+UWqbGQ2
pl47MkiAl2XS1b2abKQgcnD95TaKZ1p9RFy02Wjs7a349dR5LTxukxC5hprf
wM2w0FoCxk9JZzWvZ6N3n1UDFj0lQHzoz5rJjWxEWqqtXpNHgK5rW7HUZjay
EL+XOZlOgKs3p+64Ppvis8hLR28RcGvm0uEgAyqf3EuH6SsE5F4+9iUdsVGB
B/PwWm8ChkJXjfYbU/OYKHH0Pk7A6SRS3OMAtR8rkz13qRJwbUVQarwp9fyV
4LZSKQLukParnx6i/K6HobdLKL7LUtj415KNvINNu0qGeGBXnGETakf166tU
X57FgwD9kK579myEp6s48wk84JY7Ov/nwEaj+1ramq/yoK1G2V/MiY2clOL0
d9jxwKo1i0x1o+o9F7KgzeCB1/EwtbLzbPSNscbb/g8X4rvOPOq4wEYTH++8
CerhQtOgepWSLxtJ/GsRH1HChYMz9/seBLFRSVlobNspLuxeka9dFcNGjQoh
hzjPOGCy8t25ijg2irTVCdt9lwNmq0azcQIbVdzNDhiI5oCNnJZKaQobLX2g
H7nkDAecV9+TLbrNRvqPN5+vZ3EgQjONmfWIjbbYRuXEuKVC07bonzca2WhK
Qbty16oUsDvmXmQuvhxlNCWsCDqbCCqDF3fYRy5HS1MUVH8KxYB1n/xOUbYU
6rkuf+ijbyi0r3RKzIqXQlztZ8luKT5gpazf+yVRCh27uLv70VYfaNAW37As
RQpd/VCyefqzN1QaPG/050khS0/UHC3rDffsmaLmmVIo5Zqq+o8MT/C48/Tq
36dSiF762sL24XkQ1BI6f+izFBJYZXe/I9oJgja049B2KVRytPimVstpmNEv
YJR2SKGLU9u5ActPw8iBY7kqPVJIumXna03CEZrc8vtnR6Sofo/GFt7/B7iP
bewy56XQQkaQQWGkNbBKtfM+80mj+b4dioUsK4h8SfsrRpdG/ykekSvmWsCV
97kplwSlUWLobtP/cg7B6Sm+92Zi0ogv+8Ib7cjd0LnwfnXoMml0cFPM0Amu
MRwRuu/xXFIa6U3d+ZqQYwgm0pZiKtLSaPG2/brsSD2oVtA4cXSFNBrfa3gj
NmctGGgs5EWvkkbYpumYUqQqFK9r+VstJ40GhU3FzCKXw9pt2ftnFaSRychp
iWvjmwz+B6sQEBs=
     "]]}, 
   {RGBColor[0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
lfQy
     "]]}, 
   {RGBColor[0.8516958, 0.1729962, 0.00962234], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
FMfJ9XAr35EwTR1BkUffV7qRXJ3eZXgxfwRlCjAGasl4xKmpns6sGEF7W1+G
KZBsk+3FaGscQSMrRu44k/GT1XpRyj9A+psYoBRLxrv72d/B7XMjSF3Vcm1G
P4Ef65iIufOOoqRMvlvZpD4eRdH6/0mPIuPdNUdTSP209Jtcq9ePogMS7vHB
pL5zZSvjFvVG0Z2vBxX3kvqXwslitQOjaMv7cKHl72Q+v33Sb+84ijq3FO1+
QOaPUNX27SUho6irtIqR3U7ghv1XT47FjaKLtlQ27f/5V/vx9soHo4j2etXn
M1/J/tFk23u5chTt3Cb1vIXM5+HDKUJZzaMIcR+0niTzPbttcGvH4ChaRF1c
M2Q96Hadv2XAP4YC7M0833wi8L8TZc89ZcdQqq+paFQVgd/2c3ffUx9DZ052
/mdE1tPB0YQtf83G0GXjZB2PCgK7zuZ3ljHGUL6Ls2r9SwKrBf7mnUgbQ217
qzPmyfqdWgRtuedj6OLpskz+ZwQO4qiLuPJ1DOVW1E5MPiUwQ3BCE636gSZq
D31+m0xguxgde+8NP9AOm1KW8V0CrxYLvp5i9APpl4U65BFkf6ILtS07/UAL
RamsvXFk/1irFvb6Efl+zu6Mi2S/Wvysdzb1xQ/ECDPpPRlEYJ1L++1CP/xA
fQqbdm0PJHBWg+dGGPmBIh5oqDzyJvDda7ntWGMcTQvWCIc4kvmq+fpdiuE4
MilwWvPajsDiHXV5IQfH0Y3YjIdjh8h+uGU6AvmMo7RNZemc+8j8G9iyGReM
o3cLDhUqOgQujDeRS6kcR81fd6QXaZLrNzzMH9I8jvaEl2/YokZgN/aFLqN5
cr5veVlDcgQ+vKf4VrneBBqN69Qy5CXw5kzUX/ZmAnFeTfaNaGRjLxuLL0kN
E2hJ+/TXtBo2fsJ5oji4bwKltvg1ZLxjYwX7sDhDnkl04rje1OmXbCwq+M6g
bO8k+j15O7gskY0nPPexSr9Monotb72EI2ysJuMQeq97EkHH9VI6uR+6vvPw
CPo5iUpbShVD9pLPx7yXT+afQrts2d/+bmXjU0NDc47qUyh1FRzJFmdj6ztq
aZ1eU0gp+Oy/h5UszNubdbY0YArttq1Np5awcLG6pu7dK1MofvH9i+P5LCyP
N3+2i5lCP1K4t+YmsfD4gMF8Y/YUsjvL0cNznoUjNpvvr/4xhSiFV087ybHw
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
JRE+vdXof1041DA=
     "]]}, 
   {RGBColor[0.7514516, 0.09778, 0.006329439999999999], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
jd27R7Jtv2n9Hg4aEv2hF32D5PJZ6/YdXDR08j+th8dJVuS6O6jEQ0P7P+vZ
ypPsJ3F/RpaPhtRM69ZNk/6/iLK7d0iAhmgbrWzfkly8yoDnmhANsdi0/9qQ
/CduR2iQCA3t/c1TLEUym7yY9GsxGgpzlSp7T8ZvXdLEs28SNOSzM5FXn+QD
W+qUx6k09JY317uFjL9ZZnaOOJ2GDtsJq5wn2UPtgcYuGRrqRUcka8n8Rb+/
XXpmNQ3lx3xU0iA5T+O0nttaGrL7+sImhsz/38NUcyxHQ8cDL9hrkHqRKp/p
/yNPQ1XrPDd7kHrafbLRgXMjDV3WSOXJIvXmZBzlq7uZhrgvuEjMk/qMaHYR
tN1KQ2uM3+0TJvmNmenDkO00JG6q7ShF6nnyqnTij51kPPbtW+GtI0Bs8N/2
2V3k86f3j03UELDjVst7+h4auvtQJLyarI9bztEVZho0tKNScMXqGwHEvPsp
rwM0pHyxkC5P1lPqvQu/niMa0o9fpjWQ9TcYsGa07zANPZHdlkgtI+BaVJyY
40kacuWNOSVK1rf/Kq8nEfo0hCVyaxzJ+n8ZZ77hnSENebbe/Vv+kYDOxPW7
Fo1paKalStEkn+wX71+YBlykodrmvbw9ZL+5q+H3J8mchhZkt/cOkf0opsjS
utKChu54Sir2ZZD1U6bgIWpFQ1PD757nvSbApDkx7okdDcXuirGoJ/ufk1mQ
UqEDDX1xYle4G0/G68/1rPbbNGS60DguHUtA3cCmz/KuNBTxOPn29scE6M2/
7k33oiFznpKPZWQ/1VmVufVzGA0599cdTSL784nV320+PaAhk82v44rukPW3
ZjQZP6Sh59PBxd8cCDBdt0Wx4DG5fgGPXV9syP68IWnt22c05DQXrbXtEgGs
zfEiiVk0pCPvkv+NnC+hW/DJVzk0dKPI/M9mRMDDrb+ZL97SkIp1QstdDQJi
t6/mjf9A6ovt48qiGgEZOx+xPf5EQwo6SiLXFEj/94dOMGppaD7Jdk0dBwGN
Ghnbg3/QkGKgt6slOQ9bNatvBjaQbHLn6gA5L7tBcNC3mYakRtY/rphgwcyh
oE6PPzSk8aempu83C+gnvH7cmqAhVLcr1CWXBatPxondnKIhackR743kfF6v
91HfZoaGmp+fsC57zQJlg8VKq380tAF1Jf+KZ8H+064l5uxSSFlhS9RxBgsu
XrB/ayQmhRR3Xd+xkdwfhPkkDR2RkEKT28ZL5k6xoCSpY/1+qhRaM1E8+u4k
aW/GIGSDtBQakn/gxH2QBXOEitW0rBQyTMwy/alI7k/wJD1yhxSiRoS1bR1j
wuceZX2GqhQa+8JY19vHhFmBK/731KSQd/IWb2YHEy6Y/pi4tkcKrReYGIup
ZcKmiZwKdSSFmFZ+Ng3ZTCiWc/Jo1pdC1oRQj4MDE2aOpmV/M5RCGhkToT3X
maBk19P/6ZQUOjR8e/chcyaE5Bsbp5yRQs+03QPz9Zhw/vTube6XpNDjZN+C
x8pMmPafa19tJ4Us3s39rW9jgOLAf4fMQ6RQe73RF70dDFjl7zV3L5T8Psds
t9sGBoiuD3z9NFwKCcsM/POmMeCfaYREa6QUGj50hH/dYjBUlaV3GcdJoWJ+
Hb2A0mBwTOryPZ4phbKPpEWxDILB6vCgunW2FHKKMutUPBgMFzrGh4LeSKGL
TWKD4SrBoE1fPvXlvRTy6lzr0CZG7neD6PIHP5Hx27rhuFJNEHy0Olmyu04K
hYtqtfVqBUEOx2lX43op9B/9BJ/WjiBIiju35U6jFCp/McppsSYIwpqsIrJa
pBCPA9VneDYQLHV8LLd0kfHardkrnBgI/BvfccpNSyGYcD8cMh8AK8WF79Gs
FDrM74lzusjzwsUS20t/pdDoc80zzKoAaIusrY9ZlELrzjyUPv40ADK5h19K
cdHRo6IG2859AXCmV1ZbiEZHPduag/5a+oPqytV0HjoddVGD3lgd8wdB+msp
igwd8WbdTHfb7g9FursGZ9fQUXdfXqvfXz9QStO936FAR88s6TPT/n5A+RLy
t2UjHdmq3c0/ed0Pfv3+cblhEx3lH6wP23fMD0JFL6pVbKUjfDfS5augH/y9
7dics4uOUjKfpdmwfKGO9U4rXZ2OLo06dcnZ+ELqq8XXSXvpaNoh2/acri+Y
NwXce6pJR9yThfLA6Qvl+6I3BGrTyfOjRg3jtg88YS+5ec6YjlQ9OOVUd3nD
HRm+ptNn6EgieajoKr836O3UQ/pn6cgoXfWHZLsXUK7+FD9sRvo7VMjlEuQF
NmXD77ZepaPj032Li7meoHGfSmF3oqNVr9Z5SHPdhbbVVpGJEXR0/l835V6S
C5goaPT8iqSjZO+fmoK6LlCzVUxN/DEdOeaNGL4ccIbiA/m1Hk/paN1esSsT
ys6QZC4iZJRAR36JlR/m0+6A48t3vovv6Khkn/aPhLcOwLOF18GwlY5cJdYE
PYywAi+1NhzQRkeeu7pamU3XYF4jW7ignY4KrRXqmDLXYPjkhVTFbjr6rPju
WmK8JdTZZfYtDNMRff83p8NplyEmx/RiwjIdiQuv/Iq/fwaoBVvTWtmk0WDd
pLgLzQRCSiiLohzSaE3moUcmT0+Dd0PqY3ceacSzaURy+2tDuDbH1mAgKo0M
T3zovR6iAx0rDRsCxKXR1lXL3oExh+Es72vHfElpNJszUZWechBOSBuLKkpL
Iy1JmVn5EHUoXa986fwqaSR8Oq30UYoKHFBeSQtdI40umR4SVgrZCO9V6xdL
10kj3eaMRYMQKVDZn3x8Yb00Ojd8TcJ/cveB/wH5NaCD
     "]]}, 
   {RGBColor[0.6100968, 0.04889, 0.01107652], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxFzmlM0nEcBnAED7zBg2ImQiYujBZmWyszz5kVhsy8IiUzmzVBseW8Zqaj
Wqb41zHd1FYmZmqajmyT1Apqvilq0TEjTUWzZHN5NUGotvz+nu3Zs8+7h5Ep
5p/D43A47t/+W8KI0+vpfRVhuP+hU+hMWn3G4U2v6GXxnzExeDJibOoxVg7W
FRi627FasLZ6idyC3QZzm4rVjVgvuNpvuEWOjYB/rNlbIwq04P0bdbyBvE/g
sa8plXj/SXB4ZKJJkTkDTsuLW1SmfgcPM1hXR9sXwImNrDa9aBHsY/c0Spb9
C3xtr6Z/9PoyOCb2qFAhXQVrbiwzq4p/o7+3vFQTjevgM4WPahcxM7hsu5pT
PmgB77aUreJzcOGbfnU6ZYmeZQPmtOZ+LLuEB0cnPEtTSgjgIMMJTZDUFiwh
5Ye2NtiBzz7U8n/K7MFM9kVe4V0HcD0t2qi/QwQLO3rl4c2OYBw5KXCqywkc
ZzyQnN7pDM56kCaiqlzA3ywumHbMFWz/ciMxU+MGtubutAZ/cAfz1HE7xBdI
4ATfI28i55BVs9NGpYgMLpmnCShG5DbB2iHKZQ8w3VEsJqwix9vs6RAVeIIN
OTX8IhOy1rmam1/sBQ6gBaqItt5gVqkzh3YTucqzdoXuSAHH+vSxX9Qhpwvy
lHzyFjBzvihKWIOcPEuPcaVsBeu3nZd3NCAnBYQavsiRtWxyiEcT8vOwobel
Lcj3he6ufAWy5N5gpXkQ2WEXMT9hHPlKiH5EqkdeD+13U00gL3AF3cwZ5Hfi
vjnTAnLzQEq6woLsrWL3jOOo4Bo13kwiIFfouptKHJCz13A6Hgl50qrzl3og
pxK7JENeyMepJ0lMKrKGwco45YMcxrL2yHyRnwS/N2v8kDkHO4+ZGMh/AHU7
CiA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(covariance\\), \\(area\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.04, 0.04}}, {{0, 6.283185307179586}, {-0.04, 0.04}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6629546017909718`*^9, 3.6629546773957033`*^9}, 
   3.662954917762385*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1251, 716},
WindowMargins->{{-18, Automatic}, {Automatic, 1}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 91, 1, 64, "Section"],
Cell[516, 18, 152178, 4059, 4770, "Input",
 InitializationCell->True,
 CellID->1833685998]
}, Closed]],
Cell[CellGroupData[{
Cell[152731, 4082, 95, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[152851, 4087, 30471, 647, 1163, "Input",
 InitializationCell->True,
 CellID->518614895],
Cell[183325, 4736, 181486, 3236, 554, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364848, 7977, 5745, 138, 241, "Input"],
Cell[370596, 8117, 96318, 1639, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466951, 9761, 2850, 83, 157, "Input"],
Cell[469804, 9846, 115044, 1914, 255, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

