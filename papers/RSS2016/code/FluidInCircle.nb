(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1095249,      21437]
NotebookOptionsPosition[   1089056,      21226]
NotebookOutlinePosition[   1089412,      21242]
CellTagsIndexPosition[   1089369,      21239]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Haoran", ":", "  ", 
    RowBox[{
    "why", " ", "is", " ", "my", " ", "mean", " ", "and", " ", "Yvar", " ", 
     "sometimes", " ", 
     RowBox[{
     "complex", "?", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "code", " ", "examines", " ", "the", " ", "mean"}]}], "Title",
   FontSize->24], 
  StyleBox[" ", "Title",
   FontSize->24], 
  StyleBox[",", "Title",
   FontSize->24], 
  RowBox[{
   StyleBox["variance", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["and", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["covariance", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["of", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["a", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["very", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["large", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["swarm", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["of", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["robots", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["as", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["they", "Title",
    FontSize->24], 
   StyleBox["  ", "Title",
    FontSize->24], 
   StyleBox["move", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["inside", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["a", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["circular", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   RowBox[{
    StyleBox["workplace", "Title",
     FontSize->24], 
    StyleBox[".", "Title",
     FontSize->24], "\n", 
    StyleBox["The", "Text"]}], 
   StyleBox[" ", "Text"], 
   StyleBox["swarm", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["is", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["large", "Text"]}], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{
   "but", " ", "the", " ", "robots", " ", "are", " ", "small", " ", "in", " ",
     "comparison"}], "Text"], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{
   "and", " ", "together", " ", "cover", " ", "an", " ", "area", " ", "of", 
    " ", "constant", " ", "volume", " ", 
    RowBox[{"A", ".", "\n", " ", "When"}], " ", "they", " ", "are", " ", 
    "pushed", " ", "to", " ", "a", " ", "side"}], "Text"], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{"they", " ", "flow", " ", "like", " ", 
    RowBox[{"water", ".", "\n", "We"}], " ", "want", " ", "to", " ", "know", 
    " ", "the", " ", "mean", " ", "position", " ", "variance", " ", "and", 
    " ", "covariance", " ", "of", " ", "this", " ", "swarm"}], 
   "Text"]}]], "Input",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "THe", " ", "circular", " ", "area", " ", "has", " ", "radius", " ", "1"}],
    ",", " ", 
   RowBox[{
   "The", " ", "area", " ", "under", " ", "a", " ", "chord", " ", "at", " ", 
    "height", " ", "h"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6619020894035683`*^9, 3.661902099965561*^9}, {
  3.661903034692583*^9, 3.661903057795144*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Area = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
     SuperscriptBox["h", "3"]}]], "+", 
   RowBox[{"ArcCos", "[", 
    RowBox[{"1", "-", "h"}], "]"}]}]],
  CellChangeTimes->{
   3.661906942790473*^9, {3.6619069768243093`*^9, 3.661907027719968*^9}}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.6619032320138683`*^9}, {
  3.661907068320734*^9, 3.661907070177676*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"cor", 
    RowBox[{"(", 
     RowBox[{"X", ",", "Y"}], ")"}]}], " ", "=", " ", Cell[BoxData[
    FormBox[
     FractionBox[
      RowBox[{"cov", 
       RowBox[{"(", 
        RowBox[{"X", ",", "Y"}], ")"}]}], 
      RowBox[{
       RowBox[{"sd", "(", "X", ")"}], "*", 
       RowBox[{"sd", "(", "Y", ")"}]}]], TraditionalForm]], "Text"]}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.661904202003482*^9, 3.661904202012471*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "h", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.6619070028103437`*^9, 3.661907013812645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", " ", "h", "<", " ", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"1", "-", "h"}], "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["x", "2"]}]]], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619068610354433`*^9, 3.661906867678734*^9}, {
  3.661906927469046*^9, 3.661906997181922*^9}, {3.661907770772512*^9, 
  3.661907782548327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
  SqrtBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
    SuperscriptBox["h", "3"]}]], "+", 
  RowBox[{"ArcCos", "[", 
   RowBox[{"1", "-", "h"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.661906942790473*^9, {3.6619069768243093`*^9, 3.661907027719968*^9}, {
   3.661907776396598*^9, 3.6619077840407543`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
      SuperscriptBox["h", "3"]}]], "+", 
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", "h"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661902666384204*^9, 3.6619026798191032`*^9}, {
  3.661903274349168*^9, 3.6619032870037947`*^9}, {3.661907038791113*^9, 
  3.661907041994328*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/wMrfxO0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 3.141592653574244}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.66190326857689*^9, 3.661903287437654*^9}, 
   3.661907042593478*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Xmean = ",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
      RowBox[{"3", "/", "2"}]]}], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]],
  CellChangeTimes->{3.6619072925689*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, 
   3.661907333796159*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661907087024309*^9, 
  3.6619071260464077`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", 
   RowBox[{"h", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, {3.661907115432617*^9, 3.661907127876395*^9}, 
   3.661908961475361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.6619072925689*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Uv5I5z8nNgo2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.9996319449080772}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661907293527741*^9, 3.6619089626260567`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ymean = 0", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, 
   3.661907333796159*^9, {3.661907473915421*^9, 3.661907476002047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661907087024309*^9, 
  3.6619071260464077`*^9}, {3.6619074784520063`*^9, 3.66190747879558*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, {3.661907115432617*^9, 3.661907127876395*^9}, 
   3.661907479515522*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Xvar = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "16"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
     SuperscriptBox["h", "3"]}], "+", 
    RowBox[{"9", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], 
       "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
   RowBox[{"36", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]],
  CellChangeTimes->{3.661907979149125*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
   3.661903569346698*^9, 3.661903591750774*^9}, 3.6619074045984163`*^9, 
   3.661907987297773*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{
        SuperscriptBox["x", "2"], 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
   3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
   3.661903575700144*^9}, {3.661907377163926*^9, 3.6619073847908773`*^9}, {
   3.661907494294286*^9, 3.661907511396411*^9}, 3.6619079268060503`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
     RowBox[{"ArcCosh", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], ",", 
   RowBox[{"h", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.661907944304906*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
           RowBox[{"3", "/", "2"}]]}], 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}]], " ", 
             SuperscriptBox["h", 
              RowBox[{"3", "/", "2"}]]}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ")"}], "2"]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661907930560644*^9, 3.6619079518020678`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
     RowBox[{"ArcCosh", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
     SuperscriptBox["h", "3"]}], 
    RowBox[{"9", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.661907961556899*^9, 3.66190796849686*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "16"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
    SuperscriptBox["h", "3"]}], "+", 
   RowBox[{"9", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
  RowBox[{"36", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.661907979149125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
      SuperscriptBox["h", "3"]}], "+", 
     RowBox[{"9", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], 
        "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
    RowBox[{"36", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<xVar\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.66190361702921*^9, {3.661907414218561*^9, 3.6619074187042303`*^9}, 
   3.6619080130968018`*^9, {3.661910136369815*^9, 3.66191014208914*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
2eW/IPE/pcmDow==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"xVar\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.24999999999628802`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661903617732884*^9, 3.6619074196324673`*^9, 
  3.661908013784397*^9, 3.66191014312823*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Yvar = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}]}],
         ")"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
   RowBox[{"12", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]],
  CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
   3.6619036788959303`*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
   3.661903569346698*^9, 3.661903591750774*^9}, 3.661903652308301*^9, 
   3.661903685918302*^9, {3.661910314127285*^9, 3.661910314127383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"1", "-", "h"}], "1"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]], 
        RowBox[{
         SuperscriptBox["y", "2"], 
         RowBox[{"\[DifferentialD]", "y"}], 
         RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
         SuperscriptBox["h", "3"]}]], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}]], "-", 
     SuperscriptBox[
      RowBox[{"(", "0", ")"}], "2"]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661903655762889*^9, 3.661903674876617*^9}, {
  3.6619074396361837`*^9, 3.661907443056487*^9}, {3.661907530146758*^9, 
  3.661907539601375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
  RowBox[{"12", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
       SuperscriptBox["h", "3"]}]], "+", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
  3.6619036788959303`*^9, 3.6619075619871902`*^9, 3.661907601981011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
    RowBox[{"12", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
         SuperscriptBox["h", "3"]}]], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.66190361702921*^9, 3.6619036955176277`*^9, {3.66190787538957*^9, 
   3.661907879099435*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1nlYTd0XB/AGojRQpJSKBkQDykvFN03SXIaopJmUSnOiiUg0IBqlKJEQ
IiUNigq9nYvoJ6VIJd403Hvubby/3f3nPp/nPGeftffae+21ws3fzpOPh4dH
nZeHZ/bfzHOAUfvLc1uxhOvGkndH0X9/r9s3aSO4aop5V0hoQnJBW/Jj6d1w
VAyfyBHXR0V1lG+YijN43OLZ7stMob5lceE1aQ88upb9MWOhDXgkfl3myntj
TCJi/imJ3WD8eRHnquKH0B8ZGcNL9kGH2lh6SToYD/PZA8XCLlDcmltUnxMK
XaeWahURNwgXz7/OlI/AmghBYw8RD3Se6kzaqxIFcScNTyWRw6jNrtdOkj6N
+NXKcV/nBEDrffhDZcd4bAhhbVox5xjuzFdXq845A1Pb3a9N+ANxKSRD6a/8
OSTK/AzR4g2Gu/VRCVuVZDhn3FDImgzDqdjz4YnSaYheEdWXPBiNalmvp3sr
0+CtVP94OCgGnHJ95krHKxi5MeieOBoD3yGW//Ocq/AZr5RI+RuL3Y4uh/7I
Z6K4NulJ58ApqGhr77VSyUV12j7F1Paz8Aj+K31OugDf7UYfm5WkYCP/peOP
AgowEXjqbI10KvguaXV0NBagxjf0ks2BVFx/EJGjHlqI4PxxffveVHwZ5Jf/
+P4W0rtV+dkjF2HtKqUkf+EOcu6Or49ZkAYdq+3qT2buY4Gf1UDFPxmYn7Yz
f3ikDGxaVOGwTh7KqQ07dsjVAHPfS9GVRdh36uuX+vMN0OtYvMW2/T78Hwap
ZTCb0a+hE3lf+TFGUz818fK2IjZq2uho9FM01b2uadV7D3rII1t0pgLeETtF
9v/5iGNO9VtVdr5AneAGbsnRz4hPY7Usl6vFrZsNM8uUv+CBz+OfEbfqoC/5
4sau+1+hz5psaJtTD7XGr89eq36D2Mypq36WDfiov2vozlA3JPGN1y3/FXyF
fN63aX6HeKlZn1Tra7xtt38hmvwDUwfK++3nNmGXyb6e3t5edJ69/pNXuRmb
8s7b5yn1ISymssBk5Rt0z1z+eDi6H/rqex4/UnqLnztbb0rWD2BpnuuqCoF3
KM38FsFYMYg1Q2vTN/1+h8IE/nNrjv+Gm/iSqyLPW8Bydxj0ev4H2+fp6Nv7
/YsFRmfsHi4dQpBPx4thhVacWPhTuMfpL3zFgl/zVbRCuHotz2fLYWTLvp2z
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
gsbhtUV3TJc4sHkgySR0HJv1i+0HdRlYv7WqfVfkOBpLGNYmxKVK7n5+8eN4
Kf6RO0H6w/tjpZk3M8cRvcYkyJ70k8UXLYZFXo6jq5dh3bme5K/l1LXv4hOo
qPhjs1KF9NuNTpHiLyeQbRs26EL67e6LNayFfpPoCD+1dP0vCjRDVzpOdAp+
ObVqek0UAtJW1kZUTeFjYEWj7A0KS1tWLux1nkZx+ZGdOicp7GormZKdmYan
yd9Mgf0URg/m+34tnkHEkLph8kYKrPS52q73ZlDbY7RXkJjT6j3988EMojX1
753eQIGLDcl/y2Zg8c5A9cR6CsIK9Q/4amag9CM43E+DgnJ37+jqDzMYqZte
57qWwj6X1REhkzPokpupiFek4JhxYfvENHke80hqAbEzNSwYzcOFeL5CR+pK
Cp76FVkJc7loTJxKubaCQqCCWVW2GBdGTMevz+UpXOj24dYpcpGQWaooIkuh
xuVBvKgFF63pyvnCSyhUtvqad1lxcSZAoCxtMYWn21QX3bfl4rCVdsxy4hLZ
whxLey6Kjt+wXi9BIas96/EFNy6WuJrJui2iEGJzpkcoggurCp5Nv0XIetYY
Fn2J5KLXxNs2hthXnfdocRQX4cLejpLEbsInODtPc7GLr93cWJiCTdMxsXMp
XAg/DF72QIjCWv0DW+fd4oJtPPPh6TwKKg+W8X++TeJfx1x+gHilXHvTrbtc
JIs+LplDLDVlt9vkIRc8x8Ke2gtQEHhm6hNfxUW5i4ib6FwKfKsE1u+p4WKL
1O7ymjkUpq/U00ovuRhudssIJGYGbYtraOTiuM/A2k5+Cj0aWpn8H7h4btwk
1MhH4WvuiPOHNi5OKkqonSFuF3mgdLOdiyEXN9sdxP/+XlNq0MXFvU51disv
hTcO/SHiPeR5dUhxOvGr5gLd7z+4CLY43OBKXFUk3xj7i4uLI1IV0zwUnkl2
XrD9w8XZXM1frcSP47PsVvwl+fxzT72Q+D7TXmpkhIu/jM3/niQudl/SVcsk
84sZl3cgLnz//mYqmwvPVR7ZOsR521O9XSa4ONiaNCxPnFNqqaE5zcWhL55W
C4jT5RewuFwuePfykB+F/wOy/3H4
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.27194269404129723`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66190369656746*^9, 3.66190787996672*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Covariance(X,Y) = E[X Y]- E[X]E[Y] =  E[X Y]- E[X] 0  =E[X Y] = 0\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", " ", "y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661904405593017*^9, 3.661904408864791*^9}, {
  3.661908105599658*^9, 3.6619081084505777`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, 3.6619035786948957`*^9, 3.661904466318161*^9, {
   3.661908109729389*^9, 3.661908113343824*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["h", "2"]}]]}], "+", 
        RowBox[{"3", " ", "\[Pi]"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"ArcCos", "[", "h", "]"}]}]}], 
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "h", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "+", 
          RowBox[{"2", " ", 
           RowBox[{"ArcSin", "[", "h", "]"}]}]}], ")"}]}]], ",", "0"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["h", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["h", "2"]}]}], ")"}]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], "2"]}]]}], "}"}]}], 
   "}"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["h", "2"]}]]}], "+", 
        RowBox[{"3", " ", "\[Pi]"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"ArcCos", "[", "h", "]"}]}]}], 
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "h", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "+", 
          RowBox[{"2", " ", 
           RowBox[{"ArcSin", "[", "h", "]"}]}]}], ")"}]}]], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["h", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["h", "2"]}]}], ")"}]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.661905152783251*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Correlation(X,Y) = E[X Y]- E[X]E[Y] =  E[X Y]- E[X] 0  =E[X Y] = 0\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}, {3.66190818330054*^9, 3.6619081846989727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", " ", "y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661904405593017*^9, 3.661904408864791*^9}, {
  3.662058019483017*^9, 3.6620580474076366`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
  3.661904466318161*^9, 3.662058057040784*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotate Correlation Matrix", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}, {3.66190818330054*^9, 3.6619081846989727`*^9}, {
  3.66205807280935*^9, 3.6620580795249567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "0"},
        {"0", "c"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}]}], 
   "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.662058490788466*^9, 3.6620585542368097`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
      RowBox[{
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620584936766453`*^9, 3.6620585548825703`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], "}"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.662058236566896*^9, 3.662058263602379*^9}, {
  3.6620585028026342`*^9, 3.662058503094388*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Beta]", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
     {
      RowBox[{"Sin", "[", "\[Beta]", "]"}], 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503935384*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Beta]", "]"}], 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503945734*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "h"}], ")"}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503954541*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.661905598200919*^9, 3.661905629640276*^9}, 
   3.661908251947041*^9, 3.661910331659224*^9, 3.6620579412024937`*^9}],

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "<", "h", "<", "1"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
             SuperscriptBox["h", "3"]}], "+", 
            RowBox[{"9", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]]}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                  ")"}]}]}], ")"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"ArcCosh", "[", 
               RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
          RowBox[{"12", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", 
               SuperscriptBox["h", "3"]}]], "+", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
             SuperscriptBox["h", "3"]}], "+", 
            RowBox[{"9", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]]}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
         RowBox[{"12", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", 
              SuperscriptBox["h", "3"]}]], "+", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6620579894257927`*^9, 3.662058001852796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[ImaginaryI]", " ", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
             SuperscriptBox["h", "3"]}]], "+", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "}"}]}], "}"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.662058139552994*^9, 3.6620581424760027`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "h"}], ")"}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[ImaginaryI]", " ", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", 
             SuperscriptBox["h", "3"]}]], "+", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.662058143714192*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "<", "h", "<", "1"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{"Covxy", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}], 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Varx", "[", 
         RowBox[{"\[Beta]", ",", "h"}], "]"}], "*", 
        RowBox[{"Vary", "[", 
         RowBox[{"\[Beta]", ",", "h"}], "]"}]}], ")"}]}]], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662058973741911*^9, 3.66205897627253*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.662058960985138*^9, 3.662059085251431*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calcs  (contains initialization cell that must run before the demonstration \
can)\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.661904699817528*^9, 
  3.661904700408017*^9}, {3.6620610354126453`*^9, 3.662061049396125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", "0"}], "}"}]}],
    ")"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", "0"}], "}"}]}],
    ")"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.661905003441337*^9, 3.661905074236294*^9}, {
  3.661908141335641*^9, 3.661908147740679*^9}, {3.661908988508297*^9, 
  3.661908993442408*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.6619050075715113`*^9, 3.661905074585012*^9}, 
   3.6619081484611597`*^9, 3.661908934978176*^9, 3.66190899446649*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.6619050075715113`*^9, 3.661905074585012*^9}, 
   3.6619081484611597`*^9, 3.661908934978176*^9, 3.661908994476111*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.661904880903648*^9, 3.661904922130698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Meanx", "[", 
  RowBox[{"0", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661909035315221*^9, 3.661909039468647*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox["3"]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["3"]}], "4"]}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.661909039913217*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Meanx", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Meany", "[", 
    RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"a", "0"},
          {"0", "c"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}]}], 
     "]"}], "//", 
    RowBox[{"MatrixForm", "\n", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"a", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "c"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "c"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
          RowBox[{
           RowBox[{"c", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"a", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarXh", "[", "h_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
      SuperscriptBox["h", "3"]}], "+", 
     RowBox[{"9", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], 
        "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
    RowBox[{"36", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarYh", "[", "h_", "]"}], ":=", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}]}],
         ")"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
   RowBox[{"12", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Varx", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"VarXh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"VarYh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vary", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"VarYh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"VarXh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Covxy", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"h", "\[LessEqual]", " ", "0"}], ",", "0", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VarXh", "[", "h", "]"}], "-", 
       RowBox[{"VarYh", "[", "h", "]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Corxy", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"Covxy", "[", 
    RowBox[{"\[Beta]", ",", "h"}], "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Varx", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}], "*", 
     RowBox[{"Vary", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}]}]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPts", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swarmPtsS", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "numPts"], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"+", "i"}], "+", 
           RowBox[{
            RowBox[{"Boole", "[", 
             RowBox[{"EvenQ", "[", "j", "]"}], "]"}], 
            FractionBox["1", "2"]}]}], ",", 
          RowBox[{
           RowBox[{"+", "j"}], 
           RowBox[{
            SqrtBox["3"], "/", "2"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "numPts"}], ",", "numPts"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"2", "/", 
             SqrtBox["3"]}], "numPts"}], "]"}]}], ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"2", "/", 
            SqrtBox["3"]}], "numPts"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"swarmPts", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"swarmPtsS", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "2"], 
          "+", 
          SuperscriptBox[
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "2"]}], ")"}], "<", "1"}], "&"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.661904855027299*^9, 3.6619048705912027`*^9}, {
   3.6619049357129908`*^9, 3.6619049875740547`*^9}, {3.6619050681500196`*^9, 
   3.66190508938859*^9}, {3.661908158454513*^9, 3.6619081634063177`*^9}, 
   3.661908915738571*^9, {3.661909002685758*^9, 3.661909007517338*^9}, {
   3.661909642137093*^9, 3.661909707966565*^9}, {3.6619098740984287`*^9, 
   3.6619099619554*^9}, {3.661910000119956*^9, 3.661910030667802*^9}, {
   3.661910347722147*^9, 3.661910376489798*^9}, 3.6619104286454477`*^9, 
   3.66205812519235*^9, {3.6620581744820004`*^9, 3.662058191514235*^9}, {
   3.66205861615609*^9, 3.662058793658361*^9}, {3.662058896839962*^9, 
   3.662058956061541*^9}, {3.662059002109943*^9, 3.6620590146025352`*^9}, {
   3.662734681692707*^9, 3.6627347100138206`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619047081295137`*^9, 
  3.6619047086161757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "mean", ",", "cov", ",", 
        RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", 
        "padding", ",", 
        RowBox[{"imsize", "=", "220"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Meanx", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Meany", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mean", "=", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cov", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Covxy", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"varx", " ", "=", 
        RowBox[{"Chop", "[", " ", 
         RowBox[{"Varx", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vary", " ", "=", "  ", 
        RowBox[{"Chop", "[", 
         RowBox[{"Vary", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padding", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", "Mean", "*)"}], 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Meanx", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
                  RowBox[{"Meany", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], 
               ",", 
               RowBox[{"PlotLegends", "\[Rule]", " ", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"AxesOrigin", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "correlation", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Corxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<correlation\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"1.1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", 
                    RowBox[{"Corxy", "[", 
                    RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "]"}]}], 
                 "}"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "covariance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Covxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"0.1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "cov"}], "}"}], "]"}]}], 
                 "}"}]}]}], " ", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "of", " ", "column"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"LightBlue", ",", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{
                   "interior", " ", "region", " ", "of", " ", "square"}], 
                   "*)"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"White", ",", 
                   RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "]"}], ",", 
                    "\[Beta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
                   "*)"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "[", "Green", "]"}], ",", 
                   RowBox[{"Arrowheads", "[", 
                    RowBox[{".04", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Text", "[", 
                    RowBox[{"\"\<h\>\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"h", "/", "2"}]}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
                  RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showStats", ",", 
                   RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<area=``\\nmean=``\\ncov=``\>\"", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
                    SuperscriptBox["h", "3"]}]], "+", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ",", 
                    RowBox[{"Chop", "[", "mean", "]"}], ",", 
                    RowBox[{"Chop", "[", "cov", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "}"}]}], 
                  "]"}], ",", " ", 
                 RowBox[{"(*", 
                  RowBox[{"optional", " ", "title", " ", "info"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "swarm", " ", "of", " ", "robots"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showParticles", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011", "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"h", "<", "2"}], ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{"swarmPts", ",", 
                    RowBox[{"(*", 
                    RowBox[{"half", "-", 
                    RowBox[{"plane", " ", "test"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], 
                    ")"}]}], ">", "0"}], ")"}], "&"}]}], "]"}], ",", 
                    "swarmPts"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "Thick", ",", " ", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}]], " ", 
                    SuperscriptBox["h", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "]"}]}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "direction", " ", "of", " ", "the",
                    " ", "vector"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", 
                   RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                   RowBox[{"Point", "[", "mean", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"Opacity", "[", "0", "]"}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                   RowBox[{"Ellipsoid", "[", 
                    RowBox[{"mean", ",", 
                    RowBox[{"4", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"varx", ",", " ", "cov"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"cov", ",", "vary"}], "}"}]}], "}"}]}]}], "]"}]}],
                   "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{
                 RowBox[{"7", "/", "6"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
               RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"(*", "variance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Vary", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
                  RowBox[{"Varx", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<variance\>\""}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"ImageSize", "\[Rule]", "190"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "varx"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "vary"}], "}"}], "]"}]}], 
                 "}"}]}]}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "}"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
          "0", ",", "6.28", ",", "0.01", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h", ",", "0.5", ",", "\"\<h\>\""}], "}"}], ",", "0.001", 
          ",", "2", ",", "0.001", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "showParticles", ",", "False", ",", "\"\<show particles\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"showStats", ",", "False", ",", "\"\<show values\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.656795196820305*^9, {3.656972277848474*^9, 3.656972323742771*^9}, {
   3.656972354322016*^9, 3.656972357609967*^9}, 3.656988354648239*^9, {
   3.6569884705646152`*^9, 3.656988493135454*^9}, {3.656988550071396*^9, 
   3.656988655857045*^9}, {3.6569894603163233`*^9, 3.656989486843934*^9}, {
   3.656989531562786*^9, 3.656989542086897*^9}, {3.656989580748362*^9, 
   3.656989624204317*^9}, {3.656989981836008*^9, 3.656989982874411*^9}, {
   3.6569906483882103`*^9, 3.656990654815346*^9}, {3.656990701350219*^9, 
   3.6569907385448847`*^9}, {3.656990772879417*^9, 3.656990784627878*^9}, {
   3.656990844525193*^9, 3.656990872984708*^9}, {3.656991420376791*^9, 
   3.656991424030569*^9}, {3.656991460710334*^9, 3.656991461588852*^9}, {
   3.656991510682987*^9, 3.656991526908751*^9}, {3.6569915702020063`*^9, 
   3.656991597981056*^9}, {3.656991631840012*^9, 3.6569916431990967`*^9}, {
   3.656991773085187*^9, 3.656991817638687*^9}, {3.6569918505353537`*^9, 
   3.6569918654691887`*^9}, {3.6569921573185577`*^9, 
   3.6569921577836227`*^9}, {3.656992198749998*^9, 3.65699221010165*^9}, {
   3.656992283075183*^9, 3.656992289456553*^9}, {3.656992343293524*^9, 
   3.656992386613111*^9}, {3.65699244757166*^9, 3.656992453613069*^9}, {
   3.656992494370109*^9, 3.6569924948858013`*^9}, 3.657017817162533*^9, {
   3.657017949775469*^9, 3.657017950072247*^9}, 3.657018020500729*^9, {
   3.6570180550589437`*^9, 3.657018056409244*^9}, {3.65702014839144*^9, 
   3.6570201486591473`*^9}, {3.658596524000564*^9, 3.6585965331215763`*^9}, {
   3.658689571956876*^9, 3.658689572151148*^9}, 3.6587782739286213`*^9, {
   3.659310125641808*^9, 3.659310258185466*^9}, 3.659641501623365*^9, {
   3.659697767289062*^9, 3.659697771877007*^9}, {3.659697805599869*^9, 
   3.659697841016327*^9}, {3.659697873334496*^9, 3.659697887039423*^9}, {
   3.659697917152749*^9, 3.659697971904133*^9}, {3.6596980035509653`*^9, 
   3.6596980068131742`*^9}, {3.65969822328605*^9, 3.659698247844201*^9}, {
   3.659699686062976*^9, 3.659699692917746*^9}, {3.659699748401119*^9, 
   3.659699770831737*^9}, {3.659699812927397*^9, 3.659699851252578*^9}, {
   3.659713377252952*^9, 3.659713488826714*^9}, {3.6597135212528563`*^9, 
   3.659713536867614*^9}, {3.659713619853107*^9, 3.659713770565661*^9}, {
   3.6599525101019907`*^9, 3.659952598012911*^9}, {3.659952646231936*^9, 
   3.659952649446587*^9}, {3.659952687364767*^9, 3.659952710342092*^9}, {
   3.6599527595706673`*^9, 3.659952775991723*^9}, {3.659952812042877*^9, 
   3.659952841641481*^9}, {3.659952899643251*^9, 3.659952954290547*^9}, {
   3.660348378113248*^9, 3.660348400275343*^9}, {3.6603484413716383`*^9, 
   3.6603484437872972`*^9}, {3.660382725857903*^9, 3.660382733867496*^9}, {
   3.660382769628811*^9, 3.660382864853499*^9}, {3.6603829314227*^9, 
   3.660382958742292*^9}, {3.660382995879237*^9, 3.660383003484803*^9}, {
   3.660383048895123*^9, 3.660383049740139*^9}, {3.660383148687529*^9, 
   3.660383151822135*^9}, {3.660383215230227*^9, 3.660383240776403*^9}, {
   3.660383281321046*^9, 3.660383318882613*^9}, {3.6603833894635477`*^9, 
   3.6603833915443*^9}, {3.6603834927560673`*^9, 3.66038349388724*^9}, {
   3.660383619248096*^9, 3.660383639067501*^9}, {3.6603836725311823`*^9, 
   3.6603836966882677`*^9}, {3.660383745976446*^9, 3.660383796746139*^9}, {
   3.660383856063558*^9, 3.660383879329733*^9}, {3.660383913338663*^9, 
   3.660383933435248*^9}, 3.660383997431237*^9, {3.660384067824223*^9, 
   3.6603840991761*^9}, {3.6603841438120823`*^9, 3.660384184473242*^9}, {
   3.6603842548847303`*^9, 3.660384278833631*^9}, {3.6619057889021263`*^9, 
   3.6619059014409103`*^9}, {3.661905963696024*^9, 3.661906011764056*^9}, {
   3.661906100117427*^9, 3.661906116422687*^9}, {3.6619061728328342`*^9, 
   3.661906244097093*^9}, {3.6619062816728907`*^9, 3.661906304197302*^9}, {
   3.6619064119035683`*^9, 3.661906426443655*^9}, {3.6619064702106733`*^9, 
   3.6619065760539703`*^9}, {3.661906697839389*^9, 3.661906724718996*^9}, {
   3.66190679872246*^9, 3.661906834259137*^9}, 3.661908381162136*^9, {
   3.661908467196042*^9, 3.661908471537355*^9}, {3.6619085089461718`*^9, 
   3.661908590749057*^9}, {3.661909055892646*^9, 3.661909059730936*^9}, 
   3.661909092227436*^9, 3.661909123621414*^9, {3.661909336051154*^9, 
   3.661909345331167*^9}, 3.661909434479795*^9, {3.661909524537293*^9, 
   3.661909535151843*^9}, {3.661909588887903*^9, 3.6619095912470417`*^9}, {
   3.66190976476299*^9, 3.66190977625064*^9}, {3.6619098246851463`*^9, 
   3.661909850329974*^9}, {3.66191048414356*^9, 3.661910489821815*^9}, {
   3.6619106935974407`*^9, 3.661910697906108*^9}, {3.662059049942754*^9, 
   3.662059075166857*^9}, {3.6620591222436953`*^9, 3.6620592878877287`*^9}, {
   3.6620593375545387`*^9, 3.662059592038903*^9}, {3.6620596679396877`*^9, 
   3.662059735558916*^9}, {3.662059767940156*^9, 3.662059788442894*^9}, {
   3.662059841161194*^9, 3.662059853402713*^9}, {3.662059932607641*^9, 
   3.662059940222167*^9}, {3.662059971425899*^9, 3.662059979126845*^9}, {
   3.662060021922455*^9, 3.662060118631527*^9}, {3.662060160233466*^9, 
   3.66206020376115*^9}, {3.662060516651767*^9, 3.662060602533742*^9}, {
   3.662060663294269*^9, 3.6620606771875143`*^9}, {3.662060720727758*^9, 
   3.662060881645319*^9}, {3.662060925566379*^9, 3.662060948367436*^9}, {
   3.6620610967082987`*^9, 3.662061140241613*^9}, {3.662061172627388*^9, 
   3.6620612051710987`*^9}, {3.662061241766173*^9, 3.66206131631499*^9}, {
   3.66206143461867*^9, 3.6620614428789263`*^9}, {3.66206149357762*^9, 
   3.662061519291222*^9}},
 CellID->518614895],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.729, $CellContext`showParticles$$ = 
    False, $CellContext`showStats$$ = False, $CellContext`\[Beta]$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Beta]$$], 0, "\[Beta]"}, 0, 6.28, 0.01}, {{
       Hold[$CellContext`h$$], 0.5, "h"}, 0.001, 2, 0.001}, {{
       Hold[$CellContext`showParticles$$], False, "show particles"}, {
      True, False}}, {{
       Hold[$CellContext`showStats$$], False, "show values"}, {True, False}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[10], 
         Manipulate`Place[2], 
         Spacer[10], 
         Manipulate`Place[3], 
         Spacer[10], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {532., {221.134033203125, 226.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Beta]$214789$$ = 0, $CellContext`h$214790$$ = 
    0, $CellContext`showParticles$214791$$ = 
    False, $CellContext`showStats$214792$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0.5, $CellContext`showParticles$$ = 
        False, $CellContext`showStats$$ = False, $CellContext`\[Beta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$214789$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$214790$$, 0], 
        Hold[$CellContext`showParticles$$, \
$CellContext`showParticles$214791$$, False], 
        Hold[$CellContext`showStats$$, $CellContext`showStats$214792$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x$, $CellContext`y$, $CellContext`mean$, \
$CellContext`cov$, $CellContext`bwid$ = 
         0.05, $CellContext`varx$, $CellContext`vary$, $CellContext`padding$, \
$CellContext`imsize$ = 220}, $CellContext`x$ = Chop[
           $CellContext`Meanx[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`y$ = Chop[
           $CellContext`Meany[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`mean$ = {$CellContext`x$, $CellContext`y$}; $CellContext`cov$ = 
         Chop[
           $CellContext`Covxy[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`varx$ = Chop[
           $CellContext`Varx[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`vary$ = Chop[
           $CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`padding$ = {{30, 6}, {3, 20}}; Row[{Column[{
              Plot[{{
                 $CellContext`Meanx[$CellContext`\[Beta]$$, $CellContext`h$$], 
                 $CellContext`Meany[$CellContext`\[Beta]$$, \
$CellContext`h$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "mean"}, PlotLegends -> Placed[{
                  Row[{"mean ", 
                    Style["x", Italic]}], 
                  Row[{"mean ", 
                    Style["y", Italic]}]}, {0.65, 0.85}], 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Part[
                  ColorData[97, "ColorList"], 2]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`x$}], 
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`y$}]}], 
              Plot[{
                $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "correlation"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, 
               PlotRange -> {{0, 2 Pi}, 1.1 {-1, 1}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 6]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 6], 
                 Point[{$CellContext`\[Beta]$$, 
                   $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}]}], 
              Plot[{
                $CellContext`Covxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "covariance"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, PlotPoints -> 
               ControlActive[9, Automatic], 
               PlotRange -> {{0, 2 Pi}, 0.1 {-1, 1}}, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 5]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 5], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`cov$}]}]}] 
           Column[{
              Graphics[{{LightBlue, 
                 Disk[{0, 0}, 1]}, {White, 
                 Rotate[
                  
                  Rectangle[{-1, -1}, {
                   1 - $CellContext`h$$, 1}], $CellContext`\[Beta]$$, {0, 
                  0}]}, {
                 Darker[Green], 
                 Arrowheads[0.04 {-1, 1}], 
                 Arrow[{(1 - $CellContext`h$$) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}, 1 {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}}], 
                 Text["h", (1 - $CellContext`h$$/2) {
                    Cos[$CellContext`\[Beta]$$ + Pi/16], 
                    Sin[$CellContext`\[Beta]$$ + Pi/16]}]}, {Black, 
                 Thickness[$CellContext`bwid$], 
                 Circle[{0, 0}, 1 + $CellContext`bwid$]}, 
                If[$CellContext`showStats$$, {Black, 
                  Text[
                   StringForm[
                   "area=``\nmean=``\ncov=``", -((
                    2 - $CellContext`h$$) $CellContext`h$$)^
                    Rational[
                    1, 2] + ((-(-2 + $CellContext`h$$)) $CellContext`h$$^3)^
                    Rational[1, 2] + ArcCos[1 - $CellContext`h$$], 
                    Chop[$CellContext`mean$], 
                    Chop[$CellContext`cov$]], {0, 1/2}]}], 
                If[$CellContext`showParticles$$, {
                  PointSize[0.011], 
                  Lighter[Blue, 0.5], 
                  Point[
                   If[$CellContext`h$$ < 2, 
                    Select[$CellContext`swarmPts, Dot[{
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}, # - (1 - $CellContext`h$$) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}] > 
                    0& ], $CellContext`swarmPts]]}], {
                 Part[
                  ColorData[97, "ColorList"], 1], Thick, 
                 
                 Circle[{0, 
                  0}, -(2 ((-2 + $CellContext`h$$) $CellContext`h$$)^(3/2)/(
                   3 ((-2 + $CellContext`h$$)^
                    Rational[1, 2] $CellContext`h$$^(3/
                    2) - ((-2 + $CellContext`h$$) $CellContext`h$$)^
                    Rational[1, 2] + ArcCosh[1 - $CellContext`h$$])))]}, {
                Blue, 
                 Thickness[0.01], 
                 Arrow[{{0, 0}, (1/2) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}}]}, {
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 PointSize[Large], 
                 Point[$CellContext`mean$]}, {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Opacity[0], 
                 EdgeForm[{Thick, Red}], 
                 
                 Ellipsoid[$CellContext`mean$, 
                  4 {{$CellContext`varx$, $CellContext`cov$}, \
{$CellContext`cov$, $CellContext`vary$}}]}}, ImageSize -> 300, 
               PlotRange -> (7/6) {{-1, 1}, {-1, 1}}, PlotRangeClipping -> 
               True], 
              Plot[{{
                 $CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`h$$], 
                 $CellContext`Varx[$CellContext`\[Beta]$$, \
$CellContext`h$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "variance"}, PlotLegends -> {
                 Row[{"var ", 
                   Style["y", Italic]}], 
                 Row[{"var ", 
                   Style["x", Italic]}]}, PlotRange -> {{0, 2 Pi}, {0, 0.3}}, 
               PlotPoints -> ControlActive[9, Automatic], ImageSize -> 190, 
               Exclusions -> None, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Part[
                  ColorData[97, "ColorList"], 4]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 4], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`varx$}], 
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`vary$}]}]}]}]], 
      "Specifications" :> {{{$CellContext`\[Beta]$$, 0, "\[Beta]"}, 0, 6.28, 
         0.01, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         1}, {{$CellContext`h$$, 0.5, "h"}, 0.001, 2, 0.001, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`showParticles$$, False, "show particles"}, {
         True, False}, ControlPlacement -> 
         3}, {{$CellContext`showStats$$, False, "show values"}, {True, False},
          ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[10], 
          Manipulate`Place[2], 
          Spacer[10], 
          Manipulate`Place[3], 
          Spacer[10], 
          Manipulate`Place[4]}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{577., {264., 269.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`mean = {
        0., -0.7050201618985664}, $CellContext`Meanx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := -((2 ((-2 + $CellContext`h) $CellContext`h)^(3/2) 
          Cos[$CellContext`\[Beta]])/(
         3 (Sqrt[-2 + $CellContext`h] $CellContext`h^(3/2) - 
          Sqrt[(-2 + $CellContext`h) $CellContext`h] + 
          ArcCosh[1 - $CellContext`h]))), $CellContext`Meany[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := -((2 ((-2 + $CellContext`h) $CellContext`h)^(3/2) 
          Sin[$CellContext`\[Beta]])/(
         3 (Sqrt[-2 + $CellContext`h] $CellContext`h^(3/2) - 
          Sqrt[(-2 + $CellContext`h) $CellContext`h] + 
          ArcCosh[1 - $CellContext`h]))), $CellContext`Covxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          
          Blank[]]] := ($CellContext`VarXh[$CellContext`h] - \
$CellContext`VarYh[$CellContext`h]) Cos[$CellContext`\[Beta]] 
        Sin[$CellContext`\[Beta]], $CellContext`VarXh[
         Blank[
         0.5]] := (((-16) (-2 + FE`h$$27)^3) 
          FE`h$$27^3 + (
           9 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + ArcCosh[1 - FE`h$$27])) (-
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + (Sqrt[-2 + FE`h$$27] 
             FE`h$$27^(3/2)) (5 + (2 (-3 + FE`h$$27)) FE`h$$27) + 
           ArcCosh[1 - FE`h$$27]))/(
        36 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
          Sqrt[(-2 + FE`h$$27) FE`h$$27] + 
          ArcCosh[1 - FE`h$$27])^2), $CellContext`VarXh[
         Blank[
         0.001]] := (((-16) (-2 + FE`h$$138)^3) 
          FE`h$$138^3 + (
           9 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + ArcCosh[1 - FE`h$$138])) (-
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + (Sqrt[-2 + FE`h$$138] 
             FE`h$$138^(3/2)) (5 + (2 (-3 + FE`h$$138)) FE`h$$138) + 
           ArcCosh[1 - FE`h$$138]))/(
        36 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
          Sqrt[(-2 + FE`h$$138) FE`h$$138] + 
          ArcCosh[1 - FE`h$$138])^2), $CellContext`VarXh[
         Blank[
         0.463]] := (((-16) (-2 + FE`h$$141)^3) 
          FE`h$$141^3 + (
           9 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + ArcCosh[1 - FE`h$$141])) (-
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + (Sqrt[-2 + FE`h$$141] 
             FE`h$$141^(3/2)) (5 + (2 (-3 + FE`h$$141)) FE`h$$141) + 
           ArcCosh[1 - FE`h$$141]))/(
        36 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
          Sqrt[(-2 + FE`h$$141) FE`h$$141] + 
          ArcCosh[1 - FE`h$$141])^2), $CellContext`VarXh[
         Pattern[$CellContext`h, 
          Blank[]]] := ((-16) (-2 + $CellContext`h)^3 $CellContext`h^3 + 
         9 (Sqrt[-2 + $CellContext`h] $CellContext`h^(3/2) - 
           Sqrt[(-2 + $CellContext`h) $CellContext`h] + 
           ArcCosh[1 - $CellContext`h]) (-
            Sqrt[(-2 + $CellContext`h) $CellContext`h] + 
           Sqrt[-2 + $CellContext`h] $CellContext`h^(3/2) (5 + 
             2 (-3 + $CellContext`h) $CellContext`h) + 
           ArcCosh[1 - $CellContext`h]))/(
        36 (Sqrt[-2 + $CellContext`h] $CellContext`h^(3/2) - 
          Sqrt[(-2 + $CellContext`h) $CellContext`h] + 
          ArcCosh[1 - $CellContext`h])^2), FE`h$$27 = 0.5, FE`h$$138 = 0.463, 
       FE`h$$141 = 0.463, $CellContext`VarYh[
         Blank[0.5]] := (
         I ((I Sqrt[(-(-2 + FE`h$$27)) FE`h$$27]) (3 + 
            FE`h$$27 (1 + (2 (-3 + FE`h$$27)) FE`h$$27)) - 3 
          ArcCosh[1 - FE`h$$27]))/(
        12 (-Sqrt[(2 - FE`h$$27) FE`h$$27] + 
         Sqrt[(-(-2 + FE`h$$27)) FE`h$$27^3] + 
         ArcCos[1 - FE`h$$27])), $CellContext`VarYh[
         Blank[0.001]] := (
         I ((I Sqrt[(-(-2 + FE`h$$138)) FE`h$$138]) (3 + 
            FE`h$$138 (1 + (2 (-3 + FE`h$$138)) FE`h$$138)) - 3 
          ArcCosh[1 - FE`h$$138]))/(
        12 (-Sqrt[(2 - FE`h$$138) FE`h$$138] + 
         Sqrt[(-(-2 + FE`h$$138)) FE`h$$138^3] + 
         ArcCos[1 - FE`h$$138])), $CellContext`VarYh[
         Blank[0.463]] := (
         I ((I Sqrt[(-(-2 + FE`h$$141)) FE`h$$141]) (3 + 
            FE`h$$141 (1 + (2 (-3 + FE`h$$141)) FE`h$$141)) - 3 
          ArcCosh[1 - FE`h$$141]))/(
        12 (-Sqrt[(2 - FE`h$$141) FE`h$$141] + 
         Sqrt[(-(-2 + FE`h$$141)) FE`h$$141^3] + 
         ArcCos[1 - FE`h$$141])), $CellContext`VarYh[
         Pattern[$CellContext`h, 
          Blank[]]] := (
         I (I Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] (
            3 + $CellContext`h (1 + 2 (-3 + $CellContext`h) $CellContext`h)) - 
          3 ArcCosh[1 - $CellContext`h]))/(
        12 (-Sqrt[(2 - $CellContext`h) $CellContext`h] + 
         Sqrt[(-(-2 + $CellContext`h)) $CellContext`h^3] + 
         ArcCos[1 - $CellContext`h])), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[
         0.604]] := ((((-16) (-2 + FE`h$$18)^3) 
            FE`h$$18^3 + (
             9 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])) (-
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + (Sqrt[-2 + FE`h$$18] 
               FE`h$$18^(3/2)) (5 + (2 (-3 + FE`h$$18)) FE`h$$18) + 
             ArcCosh[1 - FE`h$$18])) Cos[$CellContext`\[Beta]$]^2)/(
         36 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
           Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])^2) + ((
           I ((I Sqrt[(2 - FE`h$$18) FE`h$$18]) (3 + 
              FE`h$$18 (1 + (2 (-3 + FE`h$$18)) FE`h$$18)) - 3 
            ArcCosh[1 - FE`h$$18])) Sin[$CellContext`\[Beta]$]^2)/(
         12 (-Sqrt[(2 - FE`h$$18) FE`h$$18] + Sqrt[(2 - FE`h$$18) FE`h$$18^3] + 
          ArcCos[1 - FE`h$$18])), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[-0.5]] := (((FE`h$$307 (5 - 2 FE`h$$307^2)) 
            Sqrt[1 - FE`h$$307^2] + 3 Pi - 3 ArcCos[FE`h$$307]) 
          Cos[$CellContext`\[Beta]$]^2)/(
         6 ((2 FE`h$$307) Sqrt[1 - FE`h$$307^2] + Pi + 
          2 ArcSin[FE`h$$307])) + ((
           16 (-1 + FE`h$$307^2)^3 + (
             9 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
              FE`h$$307])) ((FE`h$$307 Sqrt[1 - FE`h$$307^2]) (-1 + 
               2 FE`h$$307^2) + Pi - ArcCos[FE`h$$307])) 
          Sin[$CellContext`\[Beta]$]^2)/(
         36 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
           FE`h$$307])^2), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.5]] := $CellContext`VarXh[FE`h$$233] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$233] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.001]] := $CellContext`VarXh[FE`h$$138] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$138] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.463]] := $CellContext`VarXh[FE`h$$141] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$141] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := $CellContext`VarXh[$CellContext`h] 
         Cos[$CellContext`\[Beta]]^2 + $CellContext`VarYh[$CellContext`h] 
         Sin[$CellContext`\[Beta]]^2, 
       Attributes[$CellContext`\[Beta]$] = {Temporary}, FE`h$$18 = 0.604, 
       FE`h$$307 = -0.5, FE`h$$233 = 0.5, $CellContext`Vary[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := $CellContext`VarYh[$CellContext`h] 
         Cos[$CellContext`\[Beta]]^2 + $CellContext`VarXh[$CellContext`h] 
         Sin[$CellContext`\[Beta]]^2, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`Corxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          
          Blank[]]] := $CellContext`Covxy[$CellContext`\[Beta], \
$CellContext`h]/
        Sqrt[$CellContext`Varx[$CellContext`\[Beta], $CellContext`h] \
$CellContext`Vary[$CellContext`\[Beta], $CellContext`h]], \
$CellContext`swarmPts = {{(-39)/40, -Sqrt[3]/10}, {(-39)/40, -Sqrt[3]/
          20}, {(-39)/40, 0}, {(-39)/40, Sqrt[3]/20}, {(-39)/40, Sqrt[3]/
          10}, {(-37)/40, -Sqrt[3]/5}, {(-19)/20, ((-7) Sqrt[3])/40}, {(-37)/
          40, ((-3) Sqrt[3])/20}, {(-19)/20, -Sqrt[3]/8}, {(-37)/40, -Sqrt[3]/
          10}, {(-19)/20, ((-3) Sqrt[3])/40}, {(-37)/40, -Sqrt[3]/20}, {(-19)/
          20, -Sqrt[3]/40}, {(-37)/40, 0}, {(-19)/20, Sqrt[3]/40}, {(-37)/40, 
          Sqrt[3]/20}, {(-19)/20, (3 Sqrt[3])/40}, {(-37)/40, Sqrt[3]/
          10}, {(-19)/20, Sqrt[3]/8}, {(-37)/40, (3 Sqrt[3])/20}, {(-19)/
          20, (7 Sqrt[3])/40}, {(-37)/40, Sqrt[3]/5}, {(-7)/8, -Sqrt[3]/
          4}, {(-9)/10, ((-9) Sqrt[3])/40}, {(-7)/8, -Sqrt[3]/5}, {(-9)/
          10, ((-7) Sqrt[3])/40}, {(-7)/8, ((-3) Sqrt[3])/20}, {(-9)/10, -
          Sqrt[3]/8}, {(-7)/8, -Sqrt[3]/10}, {(-9)/10, ((-3) Sqrt[3])/
          40}, {(-7)/8, -Sqrt[3]/20}, {(-9)/10, -Sqrt[3]/40}, {(-7)/8, 
          0}, {(-9)/10, Sqrt[3]/40}, {(-7)/8, Sqrt[3]/20}, {(-9)/
          10, (3 Sqrt[3])/40}, {(-7)/8, Sqrt[3]/10}, {(-9)/10, Sqrt[3]/
          8}, {(-7)/8, (3 Sqrt[3])/20}, {(-9)/10, (7 Sqrt[3])/40}, {(-7)/8, 
          Sqrt[3]/5}, {(-9)/10, (9 Sqrt[3])/40}, {(-7)/8, Sqrt[3]/4}, {(-33)/
          40, ((-3) Sqrt[3])/10}, {(-17)/20, ((-11) Sqrt[3])/40}, {(-33)/40, -
          Sqrt[3]/4}, {(-17)/20, ((-9) Sqrt[3])/40}, {(-33)/40, -Sqrt[3]/
          5}, {(-17)/20, ((-7) Sqrt[3])/40}, {(-33)/40, ((-3) Sqrt[3])/
          20}, {(-17)/20, -Sqrt[3]/8}, {(-33)/40, -Sqrt[3]/10}, {(-17)/
          20, ((-3) Sqrt[3])/40}, {(-33)/40, -Sqrt[3]/20}, {(-17)/20, -
          Sqrt[3]/40}, {(-33)/40, 0}, {(-17)/20, Sqrt[3]/40}, {(-33)/40, 
          Sqrt[3]/20}, {(-17)/20, (3 Sqrt[3])/40}, {(-33)/40, Sqrt[3]/
          10}, {(-17)/20, Sqrt[3]/8}, {(-33)/40, (3 Sqrt[3])/20}, {(-17)/
          20, (7 Sqrt[3])/40}, {(-33)/40, Sqrt[3]/5}, {(-17)/20, (9 Sqrt[3])/
          40}, {(-33)/40, Sqrt[3]/4}, {(-17)/20, (11 Sqrt[3])/40}, {(-33)/
          40, (3 Sqrt[3])/10}, {(-31)/40, ((-7) Sqrt[3])/20}, {(-4)/
          5, ((-13) Sqrt[3])/40}, {(-31)/40, ((-3) Sqrt[3])/10}, {(-4)/
          5, ((-11) Sqrt[3])/40}, {(-31)/40, -Sqrt[3]/4}, {(-4)/
          5, ((-9) Sqrt[3])/40}, {(-31)/40, -Sqrt[3]/5}, {(-4)/
          5, ((-7) Sqrt[3])/40}, {(-31)/40, ((-3) Sqrt[3])/20}, {(-4)/5, -
          Sqrt[3]/8}, {(-31)/40, -Sqrt[3]/10}, {(-4)/5, ((-3) Sqrt[3])/
          40}, {(-31)/40, -Sqrt[3]/20}, {(-4)/5, -Sqrt[3]/40}, {(-31)/40, 
          0}, {(-4)/5, Sqrt[3]/40}, {(-31)/40, Sqrt[3]/20}, {(-4)/
          5, (3 Sqrt[3])/40}, {(-31)/40, Sqrt[3]/10}, {(-4)/5, Sqrt[3]/
          8}, {(-31)/40, (3 Sqrt[3])/20}, {(-4)/5, (7 Sqrt[3])/40}, {(-31)/40,
           Sqrt[3]/5}, {(-4)/5, (9 Sqrt[3])/40}, {(-31)/40, Sqrt[3]/4}, {(-4)/
          5, (11 Sqrt[3])/40}, {(-31)/40, (3 Sqrt[3])/10}, {(-4)/
          5, (13 Sqrt[3])/40}, {(-31)/40, (7 Sqrt[3])/20}, {(-3)/
          4, ((-3) Sqrt[3])/8}, {(-29)/40, ((-7) Sqrt[3])/20}, {(-3)/
          4, ((-13) Sqrt[3])/40}, {(-29)/40, ((-3) Sqrt[3])/10}, {(-3)/
          4, ((-11) Sqrt[3])/40}, {(-29)/40, -Sqrt[3]/4}, {(-3)/
          4, ((-9) Sqrt[3])/40}, {(-29)/40, -Sqrt[3]/5}, {(-3)/
          4, ((-7) Sqrt[3])/40}, {(-29)/40, ((-3) Sqrt[3])/20}, {(-3)/4, -
          Sqrt[3]/8}, {(-29)/40, -Sqrt[3]/10}, {(-3)/4, ((-3) Sqrt[3])/
          40}, {(-29)/40, -Sqrt[3]/20}, {(-3)/4, -Sqrt[3]/40}, {(-29)/40, 
          0}, {(-3)/4, Sqrt[3]/40}, {(-29)/40, Sqrt[3]/20}, {(-3)/
          4, (3 Sqrt[3])/40}, {(-29)/40, Sqrt[3]/10}, {(-3)/4, Sqrt[3]/
          8}, {(-29)/40, (3 Sqrt[3])/20}, {(-3)/4, (7 Sqrt[3])/40}, {(-29)/40,
           Sqrt[3]/5}, {(-3)/4, (9 Sqrt[3])/40}, {(-29)/40, Sqrt[3]/4}, {(-3)/
          4, (11 Sqrt[3])/40}, {(-29)/40, (3 Sqrt[3])/10}, {(-3)/
          4, (13 Sqrt[3])/40}, {(-29)/40, (7 Sqrt[3])/20}, {(-3)/
          4, (3 Sqrt[3])/8}, {(-27)/40, ((-2) Sqrt[3])/5}, {(-7)/
          10, ((-3) Sqrt[3])/8}, {(-27)/40, ((-7) Sqrt[3])/20}, {(-7)/
          10, ((-13) Sqrt[3])/40}, {(-27)/40, ((-3) Sqrt[3])/10}, {(-7)/
          10, ((-11) Sqrt[3])/40}, {(-27)/40, -Sqrt[3]/4}, {(-7)/
          10, ((-9) Sqrt[3])/40}, {(-27)/40, -Sqrt[3]/5}, {(-7)/
          10, ((-7) Sqrt[3])/40}, {(-27)/40, ((-3) Sqrt[3])/20}, {(-7)/10, -
          Sqrt[3]/8}, {(-27)/40, -Sqrt[3]/10}, {(-7)/10, ((-3) Sqrt[3])/
          40}, {(-27)/40, -Sqrt[3]/20}, {(-7)/10, -Sqrt[3]/40}, {(-27)/40, 
          0}, {(-7)/10, Sqrt[3]/40}, {(-27)/40, Sqrt[3]/20}, {(-7)/
          10, (3 Sqrt[3])/40}, {(-27)/40, Sqrt[3]/10}, {(-7)/10, Sqrt[3]/
          8}, {(-27)/40, (3 Sqrt[3])/20}, {(-7)/10, (7 Sqrt[3])/40}, {(-27)/
          40, Sqrt[3]/5}, {(-7)/10, (9 Sqrt[3])/40}, {(-27)/40, Sqrt[3]/
          4}, {(-7)/10, (11 Sqrt[3])/40}, {(-27)/40, (3 Sqrt[3])/10}, {(-7)/
          10, (13 Sqrt[3])/40}, {(-27)/40, (7 Sqrt[3])/20}, {(-7)/
          10, (3 Sqrt[3])/8}, {(-27)/40, (2 Sqrt[3])/5}, {(-5)/
          8, ((-9) Sqrt[3])/20}, {(-13)/20, ((-17) Sqrt[3])/40}, {(-5)/
          8, ((-2) Sqrt[3])/5}, {(-13)/20, ((-3) Sqrt[3])/8}, {(-5)/
          8, ((-7) Sqrt[3])/20}, {(-13)/20, ((-13) Sqrt[3])/40}, {(-5)/
          8, ((-3) Sqrt[3])/10}, {(-13)/20, ((-11) Sqrt[3])/40}, {(-5)/8, -
          Sqrt[3]/4}, {(-13)/20, ((-9) Sqrt[3])/40}, {(-5)/8, -Sqrt[3]/
          5}, {(-13)/20, ((-7) Sqrt[3])/40}, {(-5)/8, ((-3) Sqrt[3])/
          20}, {(-13)/20, -Sqrt[3]/8}, {(-5)/8, -Sqrt[3]/10}, {(-13)/
          20, ((-3) Sqrt[3])/40}, {(-5)/8, -Sqrt[3]/20}, {(-13)/20, -Sqrt[3]/
          40}, {(-5)/8, 0}, {(-13)/20, Sqrt[3]/40}, {(-5)/8, Sqrt[3]/
          20}, {(-13)/20, (3 Sqrt[3])/40}, {(-5)/8, Sqrt[3]/10}, {(-13)/20, 
          Sqrt[3]/8}, {(-5)/8, (3 Sqrt[3])/20}, {(-13)/20, (7 Sqrt[3])/
          40}, {(-5)/8, Sqrt[3]/5}, {(-13)/20, (9 Sqrt[3])/40}, {(-5)/8, 
          Sqrt[3]/4}, {(-13)/20, (11 Sqrt[3])/40}, {(-5)/8, (3 Sqrt[3])/
          10}, {(-13)/20, (13 Sqrt[3])/40}, {(-5)/8, (7 Sqrt[3])/20}, {(-13)/
          20, (3 Sqrt[3])/8}, {(-5)/8, (2 Sqrt[3])/5}, {(-13)/
          20, (17 Sqrt[3])/40}, {(-5)/8, (9 Sqrt[3])/20}, {(-23)/
          40, ((-9) Sqrt[3])/20}, {(-3)/5, ((-17) Sqrt[3])/40}, {(-23)/
          40, ((-2) Sqrt[3])/5}, {(-3)/5, ((-3) Sqrt[3])/8}, {(-23)/
          40, ((-7) Sqrt[3])/20}, {(-3)/5, ((-13) Sqrt[3])/40}, {(-23)/
          40, ((-3) Sqrt[3])/10}, {(-3)/5, ((-11) Sqrt[3])/40}, {(-23)/40, -
          Sqrt[3]/4}, {(-3)/5, ((-9) Sqrt[3])/40}, {(-23)/40, -Sqrt[3]/
          5}, {(-3)/5, ((-7) Sqrt[3])/40}, {(-23)/40, ((-3) Sqrt[3])/
          20}, {(-3)/5, -Sqrt[3]/8}, {(-23)/40, -Sqrt[3]/10}, {(-3)/
          5, ((-3) Sqrt[3])/40}, {(-23)/40, -Sqrt[3]/20}, {(-3)/5, -Sqrt[3]/
          40}, {(-23)/40, 0}, {(-3)/5, Sqrt[3]/40}, {(-23)/40, Sqrt[3]/
          20}, {(-3)/5, (3 Sqrt[3])/40}, {(-23)/40, Sqrt[3]/10}, {(-3)/5, 
          Sqrt[3]/8}, {(-23)/40, (3 Sqrt[3])/20}, {(-3)/5, (7 Sqrt[3])/
          40}, {(-23)/40, Sqrt[3]/5}, {(-3)/5, (9 Sqrt[3])/40}, {(-23)/40, 
          Sqrt[3]/4}, {(-3)/5, (11 Sqrt[3])/40}, {(-23)/40, (3 Sqrt[3])/
          10}, {(-3)/5, (13 Sqrt[3])/40}, {(-23)/40, (7 Sqrt[3])/20}, {(-3)/
          5, (3 Sqrt[3])/8}, {(-23)/40, (2 Sqrt[3])/5}, {(-3)/5, (17 Sqrt[3])/
          40}, {(-23)/40, (9 Sqrt[3])/20}, {(-11)/20, ((-19) Sqrt[3])/
          40}, {(-21)/40, ((-9) Sqrt[3])/20}, {(-11)/20, ((-17) Sqrt[3])/
          40}, {(-21)/40, ((-2) Sqrt[3])/5}, {(-11)/20, ((-3) Sqrt[3])/
          8}, {(-21)/40, ((-7) Sqrt[3])/20}, {(-11)/20, ((-13) Sqrt[3])/
          40}, {(-21)/40, ((-3) Sqrt[3])/10}, {(-11)/20, ((-11) Sqrt[3])/
          40}, {(-21)/40, -Sqrt[3]/4}, {(-11)/20, ((-9) Sqrt[3])/40}, {(-21)/
          40, -Sqrt[3]/5}, {(-11)/20, ((-7) Sqrt[3])/40}, {(-21)/
          40, ((-3) Sqrt[3])/20}, {(-11)/20, -Sqrt[3]/8}, {(-21)/40, -Sqrt[3]/
          10}, {(-11)/20, ((-3) Sqrt[3])/40}, {(-21)/40, -Sqrt[3]/20}, {(-11)/
          20, -Sqrt[3]/40}, {(-21)/40, 0}, {(-11)/20, Sqrt[3]/40}, {(-21)/40, 
          Sqrt[3]/20}, {(-11)/20, (3 Sqrt[3])/40}, {(-21)/40, Sqrt[3]/
          10}, {(-11)/20, Sqrt[3]/8}, {(-21)/40, (3 Sqrt[3])/20}, {(-11)/
          20, (7 Sqrt[3])/40}, {(-21)/40, Sqrt[3]/5}, {(-11)/20, (9 Sqrt[3])/
          40}, {(-21)/40, Sqrt[3]/4}, {(-11)/20, (11 Sqrt[3])/40}, {(-21)/
          40, (3 Sqrt[3])/10}, {(-11)/20, (13 Sqrt[3])/40}, {(-21)/
          40, (7 Sqrt[3])/20}, {(-11)/20, (3 Sqrt[3])/8}, {(-21)/
          40, (2 Sqrt[3])/5}, {(-11)/20, (17 Sqrt[3])/40}, {(-21)/
          40, (9 Sqrt[3])/20}, {(-11)/20, (19 Sqrt[3])/40}, {(-19)/40, -
          Sqrt[3]/2}, {(-1)/2, ((-19) Sqrt[3])/40}, {(-19)/40, ((-9) Sqrt[3])/
          20}, {(-1)/2, ((-17) Sqrt[3])/40}, {(-19)/40, ((-2) Sqrt[3])/
          5}, {(-1)/2, ((-3) Sqrt[3])/8}, {(-19)/40, ((-7) Sqrt[3])/
          20}, {(-1)/2, ((-13) Sqrt[3])/40}, {(-19)/40, ((-3) Sqrt[3])/
          10}, {(-1)/2, ((-11) Sqrt[3])/40}, {(-19)/40, -Sqrt[3]/4}, {(-1)/
          2, ((-9) Sqrt[3])/40}, {(-19)/40, -Sqrt[3]/5}, {(-1)/
          2, ((-7) Sqrt[3])/40}, {(-19)/40, ((-3) Sqrt[3])/20}, {(-1)/2, -
          Sqrt[3]/8}, {(-19)/40, -Sqrt[3]/10}, {(-1)/2, ((-3) Sqrt[3])/
          40}, {(-19)/40, -Sqrt[3]/20}, {(-1)/2, -Sqrt[3]/40}, {(-19)/40, 
          0}, {(-1)/2, Sqrt[3]/40}, {(-19)/40, Sqrt[3]/20}, {(-1)/
          2, (3 Sqrt[3])/40}, {(-19)/40, Sqrt[3]/10}, {(-1)/2, Sqrt[3]/
          8}, {(-19)/40, (3 Sqrt[3])/20}, {(-1)/2, (7 Sqrt[3])/40}, {(-19)/40,
           Sqrt[3]/5}, {(-1)/2, (9 Sqrt[3])/40}, {(-19)/40, Sqrt[3]/4}, {(-1)/
          2, (11 Sqrt[3])/40}, {(-19)/40, (3 Sqrt[3])/10}, {(-1)/
          2, (13 Sqrt[3])/40}, {(-19)/40, (7 Sqrt[3])/20}, {(-1)/
          2, (3 Sqrt[3])/8}, {(-19)/40, (2 Sqrt[3])/5}, {(-1)/2, (17 Sqrt[3])/
          40}, {(-19)/40, (9 Sqrt[3])/20}, {(-1)/2, (19 Sqrt[3])/40}, {(-19)/
          40, Sqrt[3]/2}, {(-17)/40, -Sqrt[3]/2}, {(-9)/20, ((-19) Sqrt[3])/
          40}, {(-17)/40, ((-9) Sqrt[3])/20}, {(-9)/20, ((-17) Sqrt[3])/
          40}, {(-17)/40, ((-2) Sqrt[3])/5}, {(-9)/20, ((-3) Sqrt[3])/
          8}, {(-17)/40, ((-7) Sqrt[3])/20}, {(-9)/20, ((-13) Sqrt[3])/
          40}, {(-17)/40, ((-3) Sqrt[3])/10}, {(-9)/20, ((-11) Sqrt[3])/
          40}, {(-17)/40, -Sqrt[3]/4}, {(-9)/20, ((-9) Sqrt[3])/40}, {(-17)/
          40, -Sqrt[3]/5}, {(-9)/20, ((-7) Sqrt[3])/40}, {(-17)/
          40, ((-3) Sqrt[3])/20}, {(-9)/20, -Sqrt[3]/8}, {(-17)/40, -Sqrt[3]/
          10}, {(-9)/20, ((-3) Sqrt[3])/40}, {(-17)/40, -Sqrt[3]/20}, {(-9)/
          20, -Sqrt[3]/40}, {(-17)/40, 0}, {(-9)/20, Sqrt[3]/40}, {(-17)/40, 
          Sqrt[3]/20}, {(-9)/20, (3 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/
          10}, {(-9)/20, Sqrt[3]/8}, {(-17)/40, (3 Sqrt[3])/20}, {(-9)/
          20, (7 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/5}, {(-9)/20, (9 Sqrt[3])/
          40}, {(-17)/40, Sqrt[3]/4}, {(-9)/20, (11 Sqrt[3])/40}, {(-17)/
          40, (3 Sqrt[3])/10}, {(-9)/20, (13 Sqrt[3])/40}, {(-17)/
          40, (7 Sqrt[3])/20}, {(-9)/20, (3 Sqrt[3])/8}, {(-17)/
          40, (2 Sqrt[3])/5}, {(-9)/20, (17 Sqrt[3])/40}, {(-17)/
          40, (9 Sqrt[3])/20}, {(-9)/20, (19 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/
          2}, {(-2)/5, ((-21) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/2}, {(-2)/
          5, ((-19) Sqrt[3])/40}, {(-3)/8, ((-9) Sqrt[3])/20}, {(-2)/
          5, ((-17) Sqrt[3])/40}, {(-3)/8, ((-2) Sqrt[3])/5}, {(-2)/
          5, ((-3) Sqrt[3])/8}, {(-3)/8, ((-7) Sqrt[3])/20}, {(-2)/
          5, ((-13) Sqrt[3])/40}, {(-3)/8, ((-3) Sqrt[3])/10}, {(-2)/
          5, ((-11) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/4}, {(-2)/
          5, ((-9) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/5}, {(-2)/
          5, ((-7) Sqrt[3])/40}, {(-3)/8, ((-3) Sqrt[3])/20}, {(-2)/5, -
          Sqrt[3]/8}, {(-3)/8, -Sqrt[3]/10}, {(-2)/5, ((-3) Sqrt[3])/
          40}, {(-3)/8, -Sqrt[3]/20}, {(-2)/5, -Sqrt[3]/40}, {(-3)/8, 
          0}, {(-2)/5, Sqrt[3]/40}, {(-3)/8, Sqrt[3]/20}, {(-2)/
          5, (3 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/10}, {(-2)/5, Sqrt[3]/
          8}, {(-3)/8, (3 Sqrt[3])/20}, {(-2)/5, (7 Sqrt[3])/40}, {(-3)/8, 
          Sqrt[3]/5}, {(-2)/5, (9 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/4}, {(-2)/
          5, (11 Sqrt[3])/40}, {(-3)/8, (3 Sqrt[3])/10}, {(-2)/
          5, (13 Sqrt[3])/40}, {(-3)/8, (7 Sqrt[3])/20}, {(-2)/5, (3 Sqrt[3])/
          8}, {(-3)/8, (2 Sqrt[3])/5}, {(-2)/5, (17 Sqrt[3])/40}, {(-3)/
          8, (9 Sqrt[3])/20}, {(-2)/5, (19 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/
          2}, {(-2)/5, (21 Sqrt[3])/40}, {(-7)/20, ((-21) Sqrt[3])/
          40}, {(-13)/40, -Sqrt[3]/2}, {(-7)/20, ((-19) Sqrt[3])/40}, {(-13)/
          40, ((-9) Sqrt[3])/20}, {(-7)/20, ((-17) Sqrt[3])/40}, {(-13)/
          40, ((-2) Sqrt[3])/5}, {(-7)/20, ((-3) Sqrt[3])/8}, {(-13)/
          40, ((-7) Sqrt[3])/20}, {(-7)/20, ((-13) Sqrt[3])/40}, {(-13)/
          40, ((-3) Sqrt[3])/10}, {(-7)/20, ((-11) Sqrt[3])/40}, {(-13)/40, -
          Sqrt[3]/4}, {(-7)/20, ((-9) Sqrt[3])/40}, {(-13)/40, -Sqrt[3]/
          5}, {(-7)/20, ((-7) Sqrt[3])/40}, {(-13)/40, ((-3) Sqrt[3])/
          20}, {(-7)/20, -Sqrt[3]/8}, {(-13)/40, -Sqrt[3]/10}, {(-7)/
          20, ((-3) Sqrt[3])/40}, {(-13)/40, -Sqrt[3]/20}, {(-7)/20, -Sqrt[3]/
          40}, {(-13)/40, 0}, {(-7)/20, Sqrt[3]/40}, {(-13)/40, Sqrt[3]/
          20}, {(-7)/20, (3 Sqrt[3])/40}, {(-13)/40, Sqrt[3]/10}, {(-7)/20, 
          Sqrt[3]/8}, {(-13)/40, (3 Sqrt[3])/20}, {(-7)/20, (7 Sqrt[3])/
          40}, {(-13)/40, Sqrt[3]/5}, {(-7)/20, (9 Sqrt[3])/40}, {(-13)/40, 
          Sqrt[3]/4}, {(-7)/20, (11 Sqrt[3])/40}, {(-13)/40, (3 Sqrt[3])/
          10}, {(-7)/20, (13 Sqrt[3])/40}, {(-13)/40, (7 Sqrt[3])/20}, {(-7)/
          20, (3 Sqrt[3])/8}, {(-13)/40, (2 Sqrt[3])/5}, {(-7)/
          20, (17 Sqrt[3])/40}, {(-13)/40, (9 Sqrt[3])/20}, {(-7)/
          20, (19 Sqrt[3])/40}, {(-13)/40, Sqrt[3]/2}, {(-7)/20, (21 Sqrt[3])/
          40}, {(-11)/40, ((-11) Sqrt[3])/20}, {(-3)/10, ((-21) Sqrt[3])/
          40}, {(-11)/40, -Sqrt[3]/2}, {(-3)/10, ((-19) Sqrt[3])/40}, {(-11)/
          40, ((-9) Sqrt[3])/20}, {(-3)/10, ((-17) Sqrt[3])/40}, {(-11)/
          40, ((-2) Sqrt[3])/5}, {(-3)/10, ((-3) Sqrt[3])/8}, {(-11)/
          40, ((-7) Sqrt[3])/20}, {(-3)/10, ((-13) Sqrt[3])/40}, {(-11)/
          40, ((-3) Sqrt[3])/10}, {(-3)/10, ((-11) Sqrt[3])/40}, {(-11)/40, -
          Sqrt[3]/4}, {(-3)/10, ((-9) Sqrt[3])/40}, {(-11)/40, -Sqrt[3]/
          5}, {(-3)/10, ((-7) Sqrt[3])/40}, {(-11)/40, ((-3) Sqrt[3])/
          20}, {(-3)/10, -Sqrt[3]/8}, {(-11)/40, -Sqrt[3]/10}, {(-3)/
          10, ((-3) Sqrt[3])/40}, {(-11)/40, -Sqrt[3]/20}, {(-3)/10, -Sqrt[3]/
          40}, {(-11)/40, 0}, {(-3)/10, Sqrt[3]/40}, {(-11)/40, Sqrt[3]/
          20}, {(-3)/10, (3 Sqrt[3])/40}, {(-11)/40, Sqrt[3]/10}, {(-3)/10, 
          Sqrt[3]/8}, {(-11)/40, (3 Sqrt[3])/20}, {(-3)/10, (7 Sqrt[3])/
          40}, {(-11)/40, Sqrt[3]/5}, {(-3)/10, (9 Sqrt[3])/40}, {(-11)/40, 
          Sqrt[3]/4}, {(-3)/10, (11 Sqrt[3])/40}, {(-11)/40, (3 Sqrt[3])/
          10}, {(-3)/10, (13 Sqrt[3])/40}, {(-11)/40, (7 Sqrt[3])/20}, {(-3)/
          10, (3 Sqrt[3])/8}, {(-11)/40, (2 Sqrt[3])/5}, {(-3)/
          10, (17 Sqrt[3])/40}, {(-11)/40, (9 Sqrt[3])/20}, {(-3)/
          10, (19 Sqrt[3])/40}, {(-11)/40, Sqrt[3]/2}, {(-3)/10, (21 Sqrt[3])/
          40}, {(-11)/40, (11 Sqrt[3])/20}, {(-9)/40, ((-11) Sqrt[3])/
          20}, {(-1)/4, ((-21) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/2}, {(-1)/
          4, ((-19) Sqrt[3])/40}, {(-9)/40, ((-9) Sqrt[3])/20}, {(-1)/
          4, ((-17) Sqrt[3])/40}, {(-9)/40, ((-2) Sqrt[3])/5}, {(-1)/
          4, ((-3) Sqrt[3])/8}, {(-9)/40, ((-7) Sqrt[3])/20}, {(-1)/
          4, ((-13) Sqrt[3])/40}, {(-9)/40, ((-3) Sqrt[3])/10}, {(-1)/
          4, ((-11) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/4}, {(-1)/
          4, ((-9) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/5}, {(-1)/
          4, ((-7) Sqrt[3])/40}, {(-9)/40, ((-3) Sqrt[3])/20}, {(-1)/4, -
          Sqrt[3]/8}, {(-9)/40, -Sqrt[3]/10}, {(-1)/4, ((-3) Sqrt[3])/
          40}, {(-9)/40, -Sqrt[3]/20}, {(-1)/4, -Sqrt[3]/40}, {(-9)/40, 
          0}, {(-1)/4, Sqrt[3]/40}, {(-9)/40, Sqrt[3]/20}, {(-1)/
          4, (3 Sqrt[3])/40}, {(-9)/40, Sqrt[3]/10}, {(-1)/4, Sqrt[3]/
          8}, {(-9)/40, (3 Sqrt[3])/20}, {(-1)/4, (7 Sqrt[3])/40}, {(-9)/40, 
          Sqrt[3]/5}, {(-1)/4, (9 Sqrt[3])/40}, {(-9)/40, Sqrt[3]/4}, {(-1)/
          4, (11 Sqrt[3])/40}, {(-9)/40, (3 Sqrt[3])/10}, {(-1)/
          4, (13 Sqrt[3])/40}, {(-9)/40, (7 Sqrt[3])/20}, {(-1)/
          4, (3 Sqrt[3])/8}, {(-9)/40, (2 Sqrt[3])/5}, {(-1)/4, (17 Sqrt[3])/
          40}, {(-9)/40, (9 Sqrt[3])/20}, {(-1)/4, (19 Sqrt[3])/40}, {(-9)/40,
           Sqrt[3]/2}, {(-1)/4, (21 Sqrt[3])/40}, {(-9)/40, (11 Sqrt[3])/
          20}, {(-7)/40, ((-11) Sqrt[3])/20}, {(-1)/5, ((-21) Sqrt[3])/
          40}, {(-7)/40, -Sqrt[3]/2}, {(-1)/5, ((-19) Sqrt[3])/40}, {(-7)/
          40, ((-9) Sqrt[3])/20}, {(-1)/5, ((-17) Sqrt[3])/40}, {(-7)/
          40, ((-2) Sqrt[3])/5}, {(-1)/5, ((-3) Sqrt[3])/8}, {(-7)/
          40, ((-7) Sqrt[3])/20}, {(-1)/5, ((-13) Sqrt[3])/40}, {(-7)/
          40, ((-3) Sqrt[3])/10}, {(-1)/5, ((-11) Sqrt[3])/40}, {(-7)/40, -
          Sqrt[3]/4}, {(-1)/5, ((-9) Sqrt[3])/40}, {(-7)/40, -Sqrt[3]/
          5}, {(-1)/5, ((-7) Sqrt[3])/40}, {(-7)/40, ((-3) Sqrt[3])/
          20}, {(-1)/5, -Sqrt[3]/8}, {(-7)/40, -Sqrt[3]/10}, {(-1)/
          5, ((-3) Sqrt[3])/40}, {(-7)/40, -Sqrt[3]/20}, {(-1)/5, -Sqrt[3]/
          40}, {(-7)/40, 0}, {(-1)/5, Sqrt[3]/40}, {(-7)/40, Sqrt[3]/
          20}, {(-1)/5, (3 Sqrt[3])/40}, {(-7)/40, Sqrt[3]/10}, {(-1)/5, 
          Sqrt[3]/8}, {(-7)/40, (3 Sqrt[3])/20}, {(-1)/5, (7 Sqrt[3])/
          40}, {(-7)/40, Sqrt[3]/5}, {(-1)/5, (9 Sqrt[3])/40}, {(-7)/40, 
          Sqrt[3]/4}, {(-1)/5, (11 Sqrt[3])/40}, {(-7)/40, (3 Sqrt[3])/
          10}, {(-1)/5, (13 Sqrt[3])/40}, {(-7)/40, (7 Sqrt[3])/20}, {(-1)/
          5, (3 Sqrt[3])/8}, {(-7)/40, (2 Sqrt[3])/5}, {(-1)/5, (17 Sqrt[3])/
          40}, {(-7)/40, (9 Sqrt[3])/20}, {(-1)/5, (19 Sqrt[3])/40}, {(-7)/40,
           Sqrt[3]/2}, {(-1)/5, (21 Sqrt[3])/40}, {(-7)/40, (11 Sqrt[3])/
          20}, {(-1)/8, ((-11) Sqrt[3])/20}, {(-3)/20, ((-21) Sqrt[3])/
          40}, {(-1)/8, -Sqrt[3]/2}, {(-3)/20, ((-19) Sqrt[3])/40}, {(-1)/
          8, ((-9) Sqrt[3])/20}, {(-3)/20, ((-17) Sqrt[3])/40}, {(-1)/
          8, ((-2) Sqrt[3])/5}, {(-3)/20, ((-3) Sqrt[3])/8}, {(-1)/
          8, ((-7) Sqrt[3])/20}, {(-3)/20, ((-13) Sqrt[3])/40}, {(-1)/
          8, ((-3) Sqrt[3])/10}, {(-3)/20, ((-11) Sqrt[3])/40}, {(-1)/8, -
          Sqrt[3]/4}, {(-3)/20, ((-9) Sqrt[3])/40}, {(-1)/8, -Sqrt[3]/
          5}, {(-3)/20, ((-7) Sqrt[3])/40}, {(-1)/8, ((-3) Sqrt[3])/
          20}, {(-3)/20, -Sqrt[3]/8}, {(-1)/8, -Sqrt[3]/10}, {(-3)/
          20, ((-3) Sqrt[3])/40}, {(-1)/8, -Sqrt[3]/20}, {(-3)/20, -Sqrt[3]/
          40}, {(-1)/8, 0}, {(-3)/20, Sqrt[3]/40}, {(-1)/8, Sqrt[3]/
          20}, {(-3)/20, (3 Sqrt[3])/40}, {(-1)/8, Sqrt[3]/10}, {(-3)/20, 
          Sqrt[3]/8}, {(-1)/8, (3 Sqrt[3])/20}, {(-3)/20, (7 Sqrt[3])/
          40}, {(-1)/8, Sqrt[3]/5}, {(-3)/20, (9 Sqrt[3])/40}, {(-1)/8, 
          Sqrt[3]/4}, {(-3)/20, (11 Sqrt[3])/40}, {(-1)/8, (3 Sqrt[3])/
          10}, {(-3)/20, (13 Sqrt[3])/40}, {(-1)/8, (7 Sqrt[3])/20}, {(-3)/
          20, (3 Sqrt[3])/8}, {(-1)/8, (2 Sqrt[3])/5}, {(-3)/20, (17 Sqrt[3])/
          40}, {(-1)/8, (9 Sqrt[3])/20}, {(-3)/20, (19 Sqrt[3])/40}, {(-1)/8, 
          Sqrt[3]/2}, {(-3)/20, (21 Sqrt[3])/40}, {(-1)/8, (11 Sqrt[3])/
          20}, {(-3)/40, ((-11) Sqrt[3])/20}, {(-1)/10, ((-21) Sqrt[3])/
          40}, {(-3)/40, -Sqrt[3]/2}, {(-1)/10, ((-19) Sqrt[3])/40}, {(-3)/
          40, ((-9) Sqrt[3])/20}, {(-1)/10, ((-17) Sqrt[3])/40}, {(-3)/
          40, ((-2) Sqrt[3])/5}, {(-1)/10, ((-3) Sqrt[3])/8}, {(-3)/
          40, ((-7) Sqrt[3])/20}, {(-1)/10, ((-13) Sqrt[3])/40}, {(-3)/
          40, ((-3) Sqrt[3])/10}, {(-1)/10, ((-11) Sqrt[3])/40}, {(-3)/40, -
          Sqrt[3]/4}, {(-1)/10, ((-9) Sqrt[3])/40}, {(-3)/40, -Sqrt[3]/
          5}, {(-1)/10, ((-7) Sqrt[3])/40}, {(-3)/40, ((-3) Sqrt[3])/
          20}, {(-1)/10, -Sqrt[3]/8}, {(-3)/40, -Sqrt[3]/10}, {(-1)/
          10, ((-3) Sqrt[3])/40}, {(-3)/40, -Sqrt[3]/20}, {(-1)/10, -Sqrt[3]/
          40}, {(-3)/40, 0}, {(-1)/10, Sqrt[3]/40}, {(-3)/40, Sqrt[3]/
          20}, {(-1)/10, (3 Sqrt[3])/40}, {(-3)/40, Sqrt[3]/10}, {(-1)/10, 
          Sqrt[3]/8}, {(-3)/40, (3 Sqrt[3])/20}, {(-1)/10, (7 Sqrt[3])/
          40}, {(-3)/40, Sqrt[3]/5}, {(-1)/10, (9 Sqrt[3])/40}, {(-3)/40, 
          Sqrt[3]/4}, {(-1)/10, (11 Sqrt[3])/40}, {(-3)/40, (3 Sqrt[3])/
          10}, {(-1)/10, (13 Sqrt[3])/40}, {(-3)/40, (7 Sqrt[3])/20}, {(-1)/
          10, (3 Sqrt[3])/8}, {(-3)/40, (2 Sqrt[3])/5}, {(-1)/
          10, (17 Sqrt[3])/40}, {(-3)/40, (9 Sqrt[3])/20}, {(-1)/
          10, (19 Sqrt[3])/40}, {(-3)/40, Sqrt[3]/2}, {(-1)/10, (21 Sqrt[3])/
          40}, {(-3)/40, (11 Sqrt[3])/20}, {(-1)/20, ((-23) Sqrt[3])/
          40}, {(-1)/40, ((-11) Sqrt[3])/20}, {(-1)/20, ((-21) Sqrt[3])/
          40}, {(-1)/40, -Sqrt[3]/2}, {(-1)/20, ((-19) Sqrt[3])/40}, {(-1)/
          40, ((-9) Sqrt[3])/20}, {(-1)/20, ((-17) Sqrt[3])/40}, {(-1)/
          40, ((-2) Sqrt[3])/5}, {(-1)/20, ((-3) Sqrt[3])/8}, {(-1)/
          40, ((-7) Sqrt[3])/20}, {(-1)/20, ((-13) Sqrt[3])/40}, {(-1)/
          40, ((-3) Sqrt[3])/10}, {(-1)/20, ((-11) Sqrt[3])/40}, {(-1)/40, -
          Sqrt[3]/4}, {(-1)/20, ((-9) Sqrt[3])/40}, {(-1)/40, -Sqrt[3]/
          5}, {(-1)/20, ((-7) Sqrt[3])/40}, {(-1)/40, ((-3) Sqrt[3])/
          20}, {(-1)/20, -Sqrt[3]/8}, {(-1)/40, -Sqrt[3]/10}, {(-1)/
          20, ((-3) Sqrt[3])/40}, {(-1)/40, -Sqrt[3]/20}, {(-1)/20, -Sqrt[3]/
          40}, {(-1)/40, 0}, {(-1)/20, Sqrt[3]/40}, {(-1)/40, Sqrt[3]/
          20}, {(-1)/20, (3 Sqrt[3])/40}, {(-1)/40, Sqrt[3]/10}, {(-1)/20, 
          Sqrt[3]/8}, {(-1)/40, (3 Sqrt[3])/20}, {(-1)/20, (7 Sqrt[3])/
          40}, {(-1)/40, Sqrt[3]/5}, {(-1)/20, (9 Sqrt[3])/40}, {(-1)/40, 
          Sqrt[3]/4}, {(-1)/20, (11 Sqrt[3])/40}, {(-1)/40, (3 Sqrt[3])/
          10}, {(-1)/20, (13 Sqrt[3])/40}, {(-1)/40, (7 Sqrt[3])/20}, {(-1)/
          20, (3 Sqrt[3])/8}, {(-1)/40, (2 Sqrt[3])/5}, {(-1)/
          20, (17 Sqrt[3])/40}, {(-1)/40, (9 Sqrt[3])/20}, {(-1)/
          20, (19 Sqrt[3])/40}, {(-1)/40, Sqrt[3]/2}, {(-1)/20, (21 Sqrt[3])/
          40}, {(-1)/40, (11 Sqrt[3])/20}, {(-1)/20, (23 Sqrt[3])/40}, {
         0, ((-23) Sqrt[3])/40}, {1/40, ((-11) Sqrt[3])/20}, {
         0, ((-21) Sqrt[3])/40}, {1/40, -Sqrt[3]/2}, {
         0, ((-19) Sqrt[3])/40}, {1/40, ((-9) Sqrt[3])/20}, {
         0, ((-17) Sqrt[3])/40}, {1/40, ((-2) Sqrt[3])/5}, {
         0, ((-3) Sqrt[3])/8}, {1/40, ((-7) Sqrt[3])/20}, {
         0, ((-13) Sqrt[3])/40}, {1/40, ((-3) Sqrt[3])/10}, {
         0, ((-11) Sqrt[3])/40}, {1/40, -Sqrt[3]/4}, {0, ((-9) Sqrt[3])/40}, {
         1/40, -Sqrt[3]/5}, {0, ((-7) Sqrt[3])/40}, {
         1/40, ((-3) Sqrt[3])/20}, {0, -Sqrt[3]/8}, {1/40, -Sqrt[3]/10}, {
         0, ((-3) Sqrt[3])/40}, {1/40, -Sqrt[3]/20}, {0, -Sqrt[3]/40}, {
         1/40, 0}, {0, Sqrt[3]/40}, {1/40, Sqrt[3]/20}, {0, (3 Sqrt[3])/40}, {
         1/40, Sqrt[3]/10}, {0, Sqrt[3]/8}, {1/40, (3 Sqrt[3])/20}, {
         0, (7 Sqrt[3])/40}, {1/40, Sqrt[3]/5}, {0, (9 Sqrt[3])/40}, {
         1/40, Sqrt[3]/4}, {0, (11 Sqrt[3])/40}, {1/40, (3 Sqrt[3])/10}, {
         0, (13 Sqrt[3])/40}, {1/40, (7 Sqrt[3])/20}, {0, (3 Sqrt[3])/8}, {
         1/40, (2 Sqrt[3])/5}, {0, (17 Sqrt[3])/40}, {1/40, (9 Sqrt[3])/20}, {
         0, (19 Sqrt[3])/40}, {1/40, Sqrt[3]/2}, {0, (21 Sqrt[3])/40}, {
         1/40, (11 Sqrt[3])/20}, {0, (23 Sqrt[3])/40}, {
         1/20, ((-23) Sqrt[3])/40}, {3/40, ((-11) Sqrt[3])/20}, {
         1/20, ((-21) Sqrt[3])/40}, {3/40, -Sqrt[3]/2}, {
         1/20, ((-19) Sqrt[3])/40}, {3/40, ((-9) Sqrt[3])/20}, {
         1/20, ((-17) Sqrt[3])/40}, {3/40, ((-2) Sqrt[3])/5}, {
         1/20, ((-3) Sqrt[3])/8}, {3/40, ((-7) Sqrt[3])/20}, {
         1/20, ((-13) Sqrt[3])/40}, {3/40, ((-3) Sqrt[3])/10}, {
         1/20, ((-11) Sqrt[3])/40}, {3/40, -Sqrt[3]/4}, {
         1/20, ((-9) Sqrt[3])/40}, {3/40, -Sqrt[3]/5}, {
         1/20, ((-7) Sqrt[3])/40}, {3/40, ((-3) Sqrt[3])/20}, {
         1/20, -Sqrt[3]/8}, {3/40, -Sqrt[3]/10}, {1/20, ((-3) Sqrt[3])/40}, {
         3/40, -Sqrt[3]/20}, {1/20, -Sqrt[3]/40}, {3/40, 0}, {
         1/20, Sqrt[3]/40}, {3/40, Sqrt[3]/20}, {1/20, (3 Sqrt[3])/40}, {
         3/40, Sqrt[3]/10}, {1/20, Sqrt[3]/8}, {3/40, (3 Sqrt[3])/20}, {
         1/20, (7 Sqrt[3])/40}, {3/40, Sqrt[3]/5}, {1/20, (9 Sqrt[3])/40}, {
         3/40, Sqrt[3]/4}, {1/20, (11 Sqrt[3])/40}, {3/40, (3 Sqrt[3])/10}, {
         1/20, (13 Sqrt[3])/40}, {3/40, (7 Sqrt[3])/20}, {
         1/20, (3 Sqrt[3])/8}, {3/40, (2 Sqrt[3])/5}, {
         1/20, (17 Sqrt[3])/40}, {3/40, (9 Sqrt[3])/20}, {
         1/20, (19 Sqrt[3])/40}, {3/40, Sqrt[3]/2}, {1/20, (21 Sqrt[3])/40}, {
         3/40, (11 Sqrt[3])/20}, {1/20, (23 Sqrt[3])/40}, {
         1/8, ((-11) Sqrt[3])/20}, {1/10, ((-21) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/2}, {1/10, ((-19) Sqrt[3])/40}, {
         1/8, ((-9) Sqrt[3])/20}, {1/10, ((-17) Sqrt[3])/40}, {
         1/8, ((-2) Sqrt[3])/5}, {1/10, ((-3) Sqrt[3])/8}, {
         1/8, ((-7) Sqrt[3])/20}, {1/10, ((-13) Sqrt[3])/40}, {
         1/8, ((-3) Sqrt[3])/10}, {1/10, ((-11) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/4}, {1/10, ((-9) Sqrt[3])/40}, {1/8, -Sqrt[3]/5}, {
         1/10, ((-7) Sqrt[3])/40}, {1/8, ((-3) Sqrt[3])/20}, {
         1/10, -Sqrt[3]/8}, {1/8, -Sqrt[3]/10}, {1/10, ((-3) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/20}, {1/10, -Sqrt[3]/40}, {1/8, 0}, {
         1/10, Sqrt[3]/40}, {1/8, Sqrt[3]/20}, {1/10, (3 Sqrt[3])/40}, {
         1/8, Sqrt[3]/10}, {1/10, Sqrt[3]/8}, {1/8, (3 Sqrt[3])/20}, {
         1/10, (7 Sqrt[3])/40}, {1/8, Sqrt[3]/5}, {1/10, (9 Sqrt[3])/40}, {
         1/8, Sqrt[3]/4}, {1/10, (11 Sqrt[3])/40}, {1/8, (3 Sqrt[3])/10}, {
         1/10, (13 Sqrt[3])/40}, {1/8, (7 Sqrt[3])/20}, {
         1/10, (3 Sqrt[3])/8}, {1/8, (2 Sqrt[3])/5}, {
         1/10, (17 Sqrt[3])/40}, {1/8, (9 Sqrt[3])/20}, {
         1/10, (19 Sqrt[3])/40}, {1/8, Sqrt[3]/2}, {1/10, (21 Sqrt[3])/40}, {
         1/8, (11 Sqrt[3])/20}, {7/40, ((-11) Sqrt[3])/20}, {
         3/20, ((-21) Sqrt[3])/40}, {7/40, -Sqrt[3]/2}, {
         3/20, ((-19) Sqrt[3])/40}, {7/40, ((-9) Sqrt[3])/20}, {
         3/20, ((-17) Sqrt[3])/40}, {7/40, ((-2) Sqrt[3])/5}, {
         3/20, ((-3) Sqrt[3])/8}, {7/40, ((-7) Sqrt[3])/20}, {
         3/20, ((-13) Sqrt[3])/40}, {7/40, ((-3) Sqrt[3])/10}, {
         3/20, ((-11) Sqrt[3])/40}, {7/40, -Sqrt[3]/4}, {
         3/20, ((-9) Sqrt[3])/40}, {7/40, -Sqrt[3]/5}, {
         3/20, ((-7) Sqrt[3])/40}, {7/40, ((-3) Sqrt[3])/20}, {
         3/20, -Sqrt[3]/8}, {7/40, -Sqrt[3]/10}, {3/20, ((-3) Sqrt[3])/40}, {
         7/40, -Sqrt[3]/20}, {3/20, -Sqrt[3]/40}, {7/40, 0}, {
         3/20, Sqrt[3]/40}, {7/40, Sqrt[3]/20}, {3/20, (3 Sqrt[3])/40}, {
         7/40, Sqrt[3]/10}, {3/20, Sqrt[3]/8}, {7/40, (3 Sqrt[3])/20}, {
         3/20, (7 Sqrt[3])/40}, {7/40, Sqrt[3]/5}, {3/20, (9 Sqrt[3])/40}, {
         7/40, Sqrt[3]/4}, {3/20, (11 Sqrt[3])/40}, {7/40, (3 Sqrt[3])/10}, {
         3/20, (13 Sqrt[3])/40}, {7/40, (7 Sqrt[3])/20}, {
         3/20, (3 Sqrt[3])/8}, {7/40, (2 Sqrt[3])/5}, {
         3/20, (17 Sqrt[3])/40}, {7/40, (9 Sqrt[3])/20}, {
         3/20, (19 Sqrt[3])/40}, {7/40, Sqrt[3]/2}, {3/20, (21 Sqrt[3])/40}, {
         7/40, (11 Sqrt[3])/20}, {9/40, ((-11) Sqrt[3])/20}, {
         1/5, ((-21) Sqrt[3])/40}, {9/40, -Sqrt[3]/2}, {
         1/5, ((-19) Sqrt[3])/40}, {9/40, ((-9) Sqrt[3])/20}, {
         1/5, ((-17) Sqrt[3])/40}, {9/40, ((-2) Sqrt[3])/5}, {
         1/5, ((-3) Sqrt[3])/8}, {9/40, ((-7) Sqrt[3])/20}, {
         1/5, ((-13) Sqrt[3])/40}, {9/40, ((-3) Sqrt[3])/10}, {
         1/5, ((-11) Sqrt[3])/40}, {9/40, -Sqrt[3]/4}, {
         1/5, ((-9) Sqrt[3])/40}, {9/40, -Sqrt[3]/5}, {
         1/5, ((-7) Sqrt[3])/40}, {9/40, ((-3) Sqrt[3])/20}, {
         1/5, -Sqrt[3]/8}, {9/40, -Sqrt[3]/10}, {1/5, ((-3) Sqrt[3])/40}, {
         9/40, -Sqrt[3]/20}, {1/5, -Sqrt[3]/40}, {9/40, 0}, {
         1/5, Sqrt[3]/40}, {9/40, Sqrt[3]/20}, {1/5, (3 Sqrt[3])/40}, {
         9/40, Sqrt[3]/10}, {1/5, Sqrt[3]/8}, {9/40, (3 Sqrt[3])/20}, {
         1/5, (7 Sqrt[3])/40}, {9/40, Sqrt[3]/5}, {1/5, (9 Sqrt[3])/40}, {
         9/40, Sqrt[3]/4}, {1/5, (11 Sqrt[3])/40}, {9/40, (3 Sqrt[3])/10}, {
         1/5, (13 Sqrt[3])/40}, {9/40, (7 Sqrt[3])/20}, {
         1/5, (3 Sqrt[3])/8}, {9/40, (2 Sqrt[3])/5}, {1/5, (17 Sqrt[3])/40}, {
         9/40, (9 Sqrt[3])/20}, {1/5, (19 Sqrt[3])/40}, {9/40, Sqrt[3]/2}, {
         1/5, (21 Sqrt[3])/40}, {9/40, (11 Sqrt[3])/20}, {
         11/40, ((-11) Sqrt[3])/20}, {1/4, ((-21) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/2}, {1/4, ((-19) Sqrt[3])/40}, {
         11/40, ((-9) Sqrt[3])/20}, {1/4, ((-17) Sqrt[3])/40}, {
         11/40, ((-2) Sqrt[3])/5}, {1/4, ((-3) Sqrt[3])/8}, {
         11/40, ((-7) Sqrt[3])/20}, {1/4, ((-13) Sqrt[3])/40}, {
         11/40, ((-3) Sqrt[3])/10}, {1/4, ((-11) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/4}, {1/4, ((-9) Sqrt[3])/40}, {11/40, -Sqrt[3]/5}, {
         1/4, ((-7) Sqrt[3])/40}, {11/40, ((-3) Sqrt[3])/20}, {
         1/4, -Sqrt[3]/8}, {11/40, -Sqrt[3]/10}, {1/4, ((-3) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/20}, {1/4, -Sqrt[3]/40}, {11/40, 0}, {
         1/4, Sqrt[3]/40}, {11/40, Sqrt[3]/20}, {1/4, (3 Sqrt[3])/40}, {
         11/40, Sqrt[3]/10}, {1/4, Sqrt[3]/8}, {11/40, (3 Sqrt[3])/20}, {
         1/4, (7 Sqrt[3])/40}, {11/40, Sqrt[3]/5}, {1/4, (9 Sqrt[3])/40}, {
         11/40, Sqrt[3]/4}, {1/4, (11 Sqrt[3])/40}, {11/40, (3 Sqrt[3])/10}, {
         1/4, (13 Sqrt[3])/40}, {11/40, (7 Sqrt[3])/20}, {
         1/4, (3 Sqrt[3])/8}, {11/40, (2 Sqrt[3])/5}, {
         1/4, (17 Sqrt[3])/40}, {11/40, (9 Sqrt[3])/20}, {
         1/4, (19 Sqrt[3])/40}, {11/40, Sqrt[3]/2}, {1/4, (21 Sqrt[3])/40}, {
         11/40, (11 Sqrt[3])/20}, {3/10, ((-21) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/2}, {3/10, ((-19) Sqrt[3])/40}, {
         13/40, ((-9) Sqrt[3])/20}, {3/10, ((-17) Sqrt[3])/40}, {
         13/40, ((-2) Sqrt[3])/5}, {3/10, ((-3) Sqrt[3])/8}, {
         13/40, ((-7) Sqrt[3])/20}, {3/10, ((-13) Sqrt[3])/40}, {
         13/40, ((-3) Sqrt[3])/10}, {3/10, ((-11) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/4}, {3/10, ((-9) Sqrt[3])/40}, {13/40, -Sqrt[3]/5}, {
         3/10, ((-7) Sqrt[3])/40}, {13/40, ((-3) Sqrt[3])/20}, {
         3/10, -Sqrt[3]/8}, {13/40, -Sqrt[3]/10}, {3/10, ((-3) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/20}, {3/10, -Sqrt[3]/40}, {13/40, 0}, {
         3/10, Sqrt[3]/40}, {13/40, Sqrt[3]/20}, {3/10, (3 Sqrt[3])/40}, {
         13/40, Sqrt[3]/10}, {3/10, Sqrt[3]/8}, {13/40, (3 Sqrt[3])/20}, {
         3/10, (7 Sqrt[3])/40}, {13/40, Sqrt[3]/5}, {3/10, (9 Sqrt[3])/40}, {
         13/40, Sqrt[3]/4}, {3/10, (11 Sqrt[3])/40}, {
         13/40, (3 Sqrt[3])/10}, {3/10, (13 Sqrt[3])/40}, {
         13/40, (7 Sqrt[3])/20}, {3/10, (3 Sqrt[3])/8}, {
         13/40, (2 Sqrt[3])/5}, {3/10, (17 Sqrt[3])/40}, {
         13/40, (9 Sqrt[3])/20}, {3/10, (19 Sqrt[3])/40}, {
         13/40, Sqrt[3]/2}, {3/10, (21 Sqrt[3])/40}, {
         7/20, ((-21) Sqrt[3])/40}, {3/8, -Sqrt[3]/2}, {
         7/20, ((-19) Sqrt[3])/40}, {3/8, ((-9) Sqrt[3])/20}, {
         7/20, ((-17) Sqrt[3])/40}, {3/8, ((-2) Sqrt[3])/5}, {
         7/20, ((-3) Sqrt[3])/8}, {3/8, ((-7) Sqrt[3])/20}, {
         7/20, ((-13) Sqrt[3])/40}, {3/8, ((-3) Sqrt[3])/10}, {
         7/20, ((-11) Sqrt[3])/40}, {3/8, -Sqrt[3]/4}, {
         7/20, ((-9) Sqrt[3])/40}, {3/8, -Sqrt[3]/5}, {
         7/20, ((-7) Sqrt[3])/40}, {3/8, ((-3) Sqrt[3])/20}, {
         7/20, -Sqrt[3]/8}, {3/8, -Sqrt[3]/10}, {7/20, ((-3) Sqrt[3])/40}, {
         3/8, -Sqrt[3]/20}, {7/20, -Sqrt[3]/40}, {3/8, 0}, {
         7/20, Sqrt[3]/40}, {3/8, Sqrt[3]/20}, {7/20, (3 Sqrt[3])/40}, {
         3/8, Sqrt[3]/10}, {7/20, Sqrt[3]/8}, {3/8, (3 Sqrt[3])/20}, {
         7/20, (7 Sqrt[3])/40}, {3/8, Sqrt[3]/5}, {7/20, (9 Sqrt[3])/40}, {
         3/8, Sqrt[3]/4}, {7/20, (11 Sqrt[3])/40}, {3/8, (3 Sqrt[3])/10}, {
         7/20, (13 Sqrt[3])/40}, {3/8, (7 Sqrt[3])/20}, {
         7/20, (3 Sqrt[3])/8}, {3/8, (2 Sqrt[3])/5}, {
         7/20, (17 Sqrt[3])/40}, {3/8, (9 Sqrt[3])/20}, {
         7/20, (19 Sqrt[3])/40}, {3/8, Sqrt[3]/2}, {7/20, (21 Sqrt[3])/40}, {
         2/5, ((-21) Sqrt[3])/40}, {17/40, -Sqrt[3]/2}, {
         2/5, ((-19) Sqrt[3])/40}, {17/40, ((-9) Sqrt[3])/20}, {
         2/5, ((-17) Sqrt[3])/40}, {17/40, ((-2) Sqrt[3])/5}, {
         2/5, ((-3) Sqrt[3])/8}, {17/40, ((-7) Sqrt[3])/20}, {
         2/5, ((-13) Sqrt[3])/40}, {17/40, ((-3) Sqrt[3])/10}, {
         2/5, ((-11) Sqrt[3])/40}, {17/40, -Sqrt[3]/4}, {
         2/5, ((-9) Sqrt[3])/40}, {17/40, -Sqrt[3]/5}, {
         2/5, ((-7) Sqrt[3])/40}, {17/40, ((-3) Sqrt[3])/20}, {
         2/5, -Sqrt[3]/8}, {17/40, -Sqrt[3]/10}, {2/5, ((-3) Sqrt[3])/40}, {
         17/40, -Sqrt[3]/20}, {2/5, -Sqrt[3]/40}, {17/40, 0}, {
         2/5, Sqrt[3]/40}, {17/40, Sqrt[3]/20}, {2/5, (3 Sqrt[3])/40}, {
         17/40, Sqrt[3]/10}, {2/5, Sqrt[3]/8}, {17/40, (3 Sqrt[3])/20}, {
         2/5, (7 Sqrt[3])/40}, {17/40, Sqrt[3]/5}, {2/5, (9 Sqrt[3])/40}, {
         17/40, Sqrt[3]/4}, {2/5, (11 Sqrt[3])/40}, {17/40, (3 Sqrt[3])/10}, {
         2/5, (13 Sqrt[3])/40}, {17/40, (7 Sqrt[3])/20}, {
         2/5, (3 Sqrt[3])/8}, {17/40, (2 Sqrt[3])/5}, {
         2/5, (17 Sqrt[3])/40}, {17/40, (9 Sqrt[3])/20}, {
         2/5, (19 Sqrt[3])/40}, {17/40, Sqrt[3]/2}, {2/5, (21 Sqrt[3])/40}, {
         19/40, -Sqrt[3]/2}, {9/20, ((-19) Sqrt[3])/40}, {
         19/40, ((-9) Sqrt[3])/20}, {9/20, ((-17) Sqrt[3])/40}, {
         19/40, ((-2) Sqrt[3])/5}, {9/20, ((-3) Sqrt[3])/8}, {
         19/40, ((-7) Sqrt[3])/20}, {9/20, ((-13) Sqrt[3])/40}, {
         19/40, ((-3) Sqrt[3])/10}, {9/20, ((-11) Sqrt[3])/40}, {
         19/40, -Sqrt[3]/4}, {9/20, ((-9) Sqrt[3])/40}, {19/40, -Sqrt[3]/5}, {
         9/20, ((-7) Sqrt[3])/40}, {19/40, ((-3) Sqrt[3])/20}, {
         9/20, -Sqrt[3]/8}, {19/40, -Sqrt[3]/10}, {9/20, ((-3) Sqrt[3])/40}, {
         19/40, -Sqrt[3]/20}, {9/20, -Sqrt[3]/40}, {19/40, 0}, {
         9/20, Sqrt[3]/40}, {19/40, Sqrt[3]/20}, {9/20, (3 Sqrt[3])/40}, {
         19/40, Sqrt[3]/10}, {9/20, Sqrt[3]/8}, {19/40, (3 Sqrt[3])/20}, {
         9/20, (7 Sqrt[3])/40}, {19/40, Sqrt[3]/5}, {9/20, (9 Sqrt[3])/40}, {
         19/40, Sqrt[3]/4}, {9/20, (11 Sqrt[3])/40}, {
         19/40, (3 Sqrt[3])/10}, {9/20, (13 Sqrt[3])/40}, {
         19/40, (7 Sqrt[3])/20}, {9/20, (3 Sqrt[3])/8}, {
         19/40, (2 Sqrt[3])/5}, {9/20, (17 Sqrt[3])/40}, {
         19/40, (9 Sqrt[3])/20}, {9/20, (19 Sqrt[3])/40}, {
         19/40, Sqrt[3]/2}, {1/2, ((-19) Sqrt[3])/40}, {
         21/40, ((-9) Sqrt[3])/20}, {1/2, ((-17) Sqrt[3])/40}, {
         21/40, ((-2) Sqrt[3])/5}, {1/2, ((-3) Sqrt[3])/8}, {
         21/40, ((-7) Sqrt[3])/20}, {1/2, ((-13) Sqrt[3])/40}, {
         21/40, ((-3) Sqrt[3])/10}, {1/2, ((-11) Sqrt[3])/40}, {
         21/40, -Sqrt[3]/4}, {1/2, ((-9) Sqrt[3])/40}, {21/40, -Sqrt[3]/5}, {
         1/2, ((-7) Sqrt[3])/40}, {21/40, ((-3) Sqrt[3])/20}, {
         1/2, -Sqrt[3]/8}, {21/40, -Sqrt[3]/10}, {1/2, ((-3) Sqrt[3])/40}, {
         21/40, -Sqrt[3]/20}, {1/2, -Sqrt[3]/40}, {21/40, 0}, {
         1/2, Sqrt[3]/40}, {21/40, Sqrt[3]/20}, {1/2, (3 Sqrt[3])/40}, {
         21/40, Sqrt[3]/10}, {1/2, Sqrt[3]/8}, {21/40, (3 Sqrt[3])/20}, {
         1/2, (7 Sqrt[3])/40}, {21/40, Sqrt[3]/5}, {1/2, (9 Sqrt[3])/40}, {
         21/40, Sqrt[3]/4}, {1/2, (11 Sqrt[3])/40}, {21/40, (3 Sqrt[3])/10}, {
         1/2, (13 Sqrt[3])/40}, {21/40, (7 Sqrt[3])/20}, {
         1/2, (3 Sqrt[3])/8}, {21/40, (2 Sqrt[3])/5}, {
         1/2, (17 Sqrt[3])/40}, {21/40, (9 Sqrt[3])/20}, {
         1/2, (19 Sqrt[3])/40}, {11/20, ((-19) Sqrt[3])/40}, {
         23/40, ((-9) Sqrt[3])/20}, {11/20, ((-17) Sqrt[3])/40}, {
         23/40, ((-2) Sqrt[3])/5}, {11/20, ((-3) Sqrt[3])/8}, {
         23/40, ((-7) Sqrt[3])/20}, {11/20, ((-13) Sqrt[3])/40}, {
         23/40, ((-3) Sqrt[3])/10}, {11/20, ((-11) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/4}, {11/20, ((-9) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/5}, {11/20, ((-7) Sqrt[3])/40}, {
         23/40, ((-3) Sqrt[3])/20}, {11/20, -Sqrt[3]/8}, {
         23/40, -Sqrt[3]/10}, {11/20, ((-3) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/20}, {11/20, -Sqrt[3]/40}, {23/40, 0}, {
         11/20, Sqrt[3]/40}, {23/40, Sqrt[3]/20}, {11/20, (3 Sqrt[3])/40}, {
         23/40, Sqrt[3]/10}, {11/20, Sqrt[3]/8}, {23/40, (3 Sqrt[3])/20}, {
         11/20, (7 Sqrt[3])/40}, {23/40, Sqrt[3]/5}, {
         11/20, (9 Sqrt[3])/40}, {23/40, Sqrt[3]/4}, {
         11/20, (11 Sqrt[3])/40}, {23/40, (3 Sqrt[3])/10}, {
         11/20, (13 Sqrt[3])/40}, {23/40, (7 Sqrt[3])/20}, {
         11/20, (3 Sqrt[3])/8}, {23/40, (2 Sqrt[3])/5}, {
         11/20, (17 Sqrt[3])/40}, {23/40, (9 Sqrt[3])/20}, {
         11/20, (19 Sqrt[3])/40}, {5/8, ((-9) Sqrt[3])/20}, {
         3/5, ((-17) Sqrt[3])/40}, {5/8, ((-2) Sqrt[3])/5}, {
         3/5, ((-3) Sqrt[3])/8}, {5/8, ((-7) Sqrt[3])/20}, {
         3/5, ((-13) Sqrt[3])/40}, {5/8, ((-3) Sqrt[3])/10}, {
         3/5, ((-11) Sqrt[3])/40}, {5/8, -Sqrt[3]/4}, {
         3/5, ((-9) Sqrt[3])/40}, {5/8, -Sqrt[3]/5}, {
         3/5, ((-7) Sqrt[3])/40}, {5/8, ((-3) Sqrt[3])/20}, {
         3/5, -Sqrt[3]/8}, {5/8, -Sqrt[3]/10}, {3/5, ((-3) Sqrt[3])/40}, {
         5/8, -Sqrt[3]/20}, {3/5, -Sqrt[3]/40}, {5/8, 0}, {3/5, Sqrt[3]/40}, {
         5/8, Sqrt[3]/20}, {3/5, (3 Sqrt[3])/40}, {5/8, Sqrt[3]/10}, {
         3/5, Sqrt[3]/8}, {5/8, (3 Sqrt[3])/20}, {3/5, (7 Sqrt[3])/40}, {
         5/8, Sqrt[3]/5}, {3/5, (9 Sqrt[3])/40}, {5/8, Sqrt[3]/4}, {
         3/5, (11 Sqrt[3])/40}, {5/8, (3 Sqrt[3])/10}, {
         3/5, (13 Sqrt[3])/40}, {5/8, (7 Sqrt[3])/20}, {3/5, (3 Sqrt[3])/8}, {
         5/8, (2 Sqrt[3])/5}, {3/5, (17 Sqrt[3])/40}, {5/8, (9 Sqrt[3])/20}, {
         13/20, ((-17) Sqrt[3])/40}, {27/40, ((-2) Sqrt[3])/5}, {
         13/20, ((-3) Sqrt[3])/8}, {27/40, ((-7) Sqrt[3])/20}, {
         13/20, ((-13) Sqrt[3])/40}, {27/40, ((-3) Sqrt[3])/10}, {
         13/20, ((-11) Sqrt[3])/40}, {27/40, -Sqrt[3]/4}, {
         13/20, ((-9) Sqrt[3])/40}, {27/40, -Sqrt[3]/5}, {
         13/20, ((-7) Sqrt[3])/40}, {27/40, ((-3) Sqrt[3])/20}, {
         13/20, -Sqrt[3]/8}, {27/40, -Sqrt[3]/10}, {
         13/20, ((-3) Sqrt[3])/40}, {27/40, -Sqrt[3]/20}, {
         13/20, -Sqrt[3]/40}, {27/40, 0}, {13/20, Sqrt[3]/40}, {
         27/40, Sqrt[3]/20}, {13/20, (3 Sqrt[3])/40}, {27/40, Sqrt[3]/10}, {
         13/20, Sqrt[3]/8}, {27/40, (3 Sqrt[3])/20}, {
         13/20, (7 Sqrt[3])/40}, {27/40, Sqrt[3]/5}, {
         13/20, (9 Sqrt[3])/40}, {27/40, Sqrt[3]/4}, {
         13/20, (11 Sqrt[3])/40}, {27/40, (3 Sqrt[3])/10}, {
         13/20, (13 Sqrt[3])/40}, {27/40, (7 Sqrt[3])/20}, {
         13/20, (3 Sqrt[3])/8}, {27/40, (2 Sqrt[3])/5}, {
         13/20, (17 Sqrt[3])/40}, {7/10, ((-3) Sqrt[3])/8}, {
         29/40, ((-7) Sqrt[3])/20}, {7/10, ((-13) Sqrt[3])/40}, {
         29/40, ((-3) Sqrt[3])/10}, {7/10, ((-11) Sqrt[3])/40}, {
         29/40, -Sqrt[3]/4}, {7/10, ((-9) Sqrt[3])/40}, {29/40, -Sqrt[3]/5}, {
         7/10, ((-7) Sqrt[3])/40}, {29/40, ((-3) Sqrt[3])/20}, {
         7/10, -Sqrt[3]/8}, {29/40, -Sqrt[3]/10}, {7/10, ((-3) Sqrt[3])/40}, {
         29/40, -Sqrt[3]/20}, {7/10, -Sqrt[3]/40}, {29/40, 0}, {
         7/10, Sqrt[3]/40}, {29/40, Sqrt[3]/20}, {7/10, (3 Sqrt[3])/40}, {
         29/40, Sqrt[3]/10}, {7/10, Sqrt[3]/8}, {29/40, (3 Sqrt[3])/20}, {
         7/10, (7 Sqrt[3])/40}, {29/40, Sqrt[3]/5}, {7/10, (9 Sqrt[3])/40}, {
         29/40, Sqrt[3]/4}, {7/10, (11 Sqrt[3])/40}, {
         29/40, (3 Sqrt[3])/10}, {7/10, (13 Sqrt[3])/40}, {
         29/40, (7 Sqrt[3])/20}, {7/10, (3 Sqrt[3])/8}, {
         3/4, ((-3) Sqrt[3])/8}, {31/40, ((-7) Sqrt[3])/20}, {
         3/4, ((-13) Sqrt[3])/40}, {31/40, ((-3) Sqrt[3])/10}, {
         3/4, ((-11) Sqrt[3])/40}, {31/40, -Sqrt[3]/4}, {
         3/4, ((-9) Sqrt[3])/40}, {31/40, -Sqrt[3]/5}, {
         3/4, ((-7) Sqrt[3])/40}, {31/40, ((-3) Sqrt[3])/20}, {
         3/4, -Sqrt[3]/8}, {31/40, -Sqrt[3]/10}, {3/4, ((-3) Sqrt[3])/40}, {
         31/40, -Sqrt[3]/20}, {3/4, -Sqrt[3]/40}, {31/40, 0}, {
         3/4, Sqrt[3]/40}, {31/40, Sqrt[3]/20}, {3/4, (3 Sqrt[3])/40}, {
         31/40, Sqrt[3]/10}, {3/4, Sqrt[3]/8}, {31/40, (3 Sqrt[3])/20}, {
         3/4, (7 Sqrt[3])/40}, {31/40, Sqrt[3]/5}, {3/4, (9 Sqrt[3])/40}, {
         31/40, Sqrt[3]/4}, {3/4, (11 Sqrt[3])/40}, {31/40, (3 Sqrt[3])/10}, {
         3/4, (13 Sqrt[3])/40}, {31/40, (7 Sqrt[3])/20}, {
         3/4, (3 Sqrt[3])/8}, {4/5, ((-13) Sqrt[3])/40}, {
         33/40, ((-3) Sqrt[3])/10}, {4/5, ((-11) Sqrt[3])/40}, {
         33/40, -Sqrt[3]/4}, {4/5, ((-9) Sqrt[3])/40}, {33/40, -Sqrt[3]/5}, {
         4/5, ((-7) Sqrt[3])/40}, {33/40, ((-3) Sqrt[3])/20}, {
         4/5, -Sqrt[3]/8}, {33/40, -Sqrt[3]/10}, {4/5, ((-3) Sqrt[3])/40}, {
         33/40, -Sqrt[3]/20}, {4/5, -Sqrt[3]/40}, {33/40, 0}, {
         4/5, Sqrt[3]/40}, {33/40, Sqrt[3]/20}, {4/5, (3 Sqrt[3])/40}, {
         33/40, Sqrt[3]/10}, {4/5, Sqrt[3]/8}, {33/40, (3 Sqrt[3])/20}, {
         4/5, (7 Sqrt[3])/40}, {33/40, Sqrt[3]/5}, {4/5, (9 Sqrt[3])/40}, {
         33/40, Sqrt[3]/4}, {4/5, (11 Sqrt[3])/40}, {33/40, (3 Sqrt[3])/10}, {
         4/5, (13 Sqrt[3])/40}, {17/20, ((-11) Sqrt[3])/40}, {
         7/8, -Sqrt[3]/4}, {17/20, ((-9) Sqrt[3])/40}, {7/8, -Sqrt[3]/5}, {
         17/20, ((-7) Sqrt[3])/40}, {7/8, ((-3) Sqrt[3])/20}, {
         17/20, -Sqrt[3]/8}, {7/8, -Sqrt[3]/10}, {17/20, ((-3) Sqrt[3])/40}, {
         7/8, -Sqrt[3]/20}, {17/20, -Sqrt[3]/40}, {7/8, 0}, {
         17/20, Sqrt[3]/40}, {7/8, Sqrt[3]/20}, {17/20, (3 Sqrt[3])/40}, {
         7/8, Sqrt[3]/10}, {17/20, Sqrt[3]/8}, {7/8, (3 Sqrt[3])/20}, {
         17/20, (7 Sqrt[3])/40}, {7/8, Sqrt[3]/5}, {17/20, (9 Sqrt[3])/40}, {
         7/8, Sqrt[3]/4}, {17/20, (11 Sqrt[3])/40}, {
         9/10, ((-9) Sqrt[3])/40}, {37/40, -Sqrt[3]/5}, {
         9/10, ((-7) Sqrt[3])/40}, {37/40, ((-3) Sqrt[3])/20}, {
         9/10, -Sqrt[3]/8}, {37/40, -Sqrt[3]/10}, {9/10, ((-3) Sqrt[3])/40}, {
         37/40, -Sqrt[3]/20}, {9/10, -Sqrt[3]/40}, {37/40, 0}, {
         9/10, Sqrt[3]/40}, {37/40, Sqrt[3]/20}, {9/10, (3 Sqrt[3])/40}, {
         37/40, Sqrt[3]/10}, {9/10, Sqrt[3]/8}, {37/40, (3 Sqrt[3])/20}, {
         9/10, (7 Sqrt[3])/40}, {37/40, Sqrt[3]/5}, {9/10, (9 Sqrt[3])/40}, {
         19/20, ((-7) Sqrt[3])/40}, {19/20, -Sqrt[3]/8}, {
         39/40, -Sqrt[3]/10}, {19/20, ((-3) Sqrt[3])/40}, {
         39/40, -Sqrt[3]/20}, {19/20, -Sqrt[3]/40}, {39/40, 0}, {
         19/20, Sqrt[3]/40}, {39/40, Sqrt[3]/20}, {19/20, (3 Sqrt[3])/40}, {
         39/40, Sqrt[3]/10}, {19/20, Sqrt[3]/8}, {19/20, (7 Sqrt[3])/40}}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.661905910794014*^9, {3.661906151540371*^9, 3.661906174530181*^9}, 
   3.6619063477805367`*^9, {3.661906493123602*^9, 3.6619065084780903`*^9}, {
   3.661906560119577*^9, 3.6619065770340567`*^9}, 3.6619067259968987`*^9, 
   3.661906804845697*^9, 3.661908315939124*^9, {3.661908371829878*^9, 
   3.661908387209052*^9}, 3.6619084730401163`*^9, {3.6619085121080627`*^9, 
   3.661908538847636*^9}, 3.661908569681879*^9, {3.661908658679706*^9, 
   3.66190866450263*^9}, 3.661908873674119*^9, 3.66190894187103*^9, 
   3.661909013875843*^9, 3.6619090606619663`*^9, 3.661909125144204*^9, 
   3.6619095364246597`*^9, 3.661909592423346*^9, 3.661909851403654*^9, {
   3.6619103806024847`*^9, 3.66191038527354*^9}, 3.6619104370442753`*^9, 
   3.66191049115343*^9, 3.661910699668775*^9, 3.662057976853648*^9, 
   3.662058196004149*^9, 3.662058766835404*^9, 3.662058797973633*^9, 
   3.662059091396093*^9, {3.662059131063764*^9, 3.662059182194405*^9}, {
   3.6620592316540194`*^9, 3.6620592482359858`*^9}, 3.662059289098976*^9, 
   3.662059340243066*^9, {3.662059435675536*^9, 3.662059465977294*^9}, {
   3.662059497433172*^9, 3.66205950329487*^9}, {3.662059549643552*^9, 
   3.662059592761331*^9}, {3.662059720768097*^9, 3.662059736554677*^9}, 
   3.662059789675674*^9, 3.662059854601358*^9, 3.662059941141024*^9, 
   3.662059979951606*^9, {3.662060024305539*^9, 3.662060044597053*^9}, {
   3.6620600903103943`*^9, 3.6620601196203136`*^9}, 3.662060161457238*^9, {
   3.662060194749238*^9, 3.6620602043334837`*^9}, {3.6620605209003067`*^9, 
   3.662060604030314*^9}, 3.662060678211973*^9, {3.662060743567474*^9, 
   3.662060882654871*^9}, {3.662060926740912*^9, 3.662060949415683*^9}, {
   3.6620611233446817`*^9, 3.662061146550405*^9}, {3.6620611831700983`*^9, 
   3.6620612062308407`*^9}, {3.6620612588513412`*^9, 3.662061317431354*^9}, 
   3.662061520369007*^9, 3.6627314295237293`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot for paper", "Subchapter",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}, {3.662731403355773*^9, 
  3.6627314106168213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "mean", ",", "cov", ",", 
      RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", "padding",
       ",", 
      RowBox[{"imsize", "=", "220"}], ",", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"1", "/", "8"}]}], ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"\[Pi]", "/", "4"}]}], ",", 
      RowBox[{"showStats", "=", "False"}], ",", 
      RowBox[{"showParticles", "=", "False"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meanx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meany", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cov", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varx", " ", "=", 
      RowBox[{"Chop", "[", " ", 
       RowBox[{"Varx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vary", " ", "=", "  ", 
      RowBox[{"Chop", "[", 
       RowBox[{"Vary", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"padding", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"LightBlue", ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"interior", " ", "region", " ", "of", " ", "square"}], 
              "*)"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "]"}], ",", 
                "\[Beta]", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
              "*)"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", "Green", "]"}], ",", 
              RowBox[{"Arrowheads", "[", 
               RowBox[{".04", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "h"}], ")"}], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", "1", ")"}], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<h\>\"", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"h", "/", "2"}]}], ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
             RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"showStats", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"StringForm", "[", 
                   RowBox[{"\"\<area=``\\nmean=``\\ncov=``\>\"", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
                    SuperscriptBox["h", "3"]}]], "+", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ",", 
                    RowBox[{"Chop", "[", "mean", "]"}], ",", 
                    RowBox[{"Chop", "[", "cov", "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "}"}]}], 
             "]"}], ",", " ", 
            RowBox[{"(*", 
             RowBox[{"optional", " ", "title", " ", "info"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "swarm", " ", "of", " ", "robots"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"showParticles", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.011", "]"}], ",", 
                RowBox[{"Lighter", "[", 
                 RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"h", "<", "2"}], ",", 
                   RowBox[{"Select", "[", 
                    RowBox[{"swarmPts", ",", 
                    RowBox[{"(*", 
                    RowBox[{"half", "-", 
                    RowBox[{"plane", " ", "test"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], 
                    ")"}]}], ">", "0"}], ")"}], "&"}]}], "]"}], ",", 
                   "swarmPts"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
              "Thick", ",", " ", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}]], " ", 
                    SuperscriptBox["h", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "draw", " ", "the", " ", "direction", " ", "of", " ", "the", " ",
               "vector"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", ".01", "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              RowBox[{"Point", "[", "mean", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Opacity", "[", "0", "]"}], ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
              RowBox[{"Ellipsoid", "[", 
               RowBox[{"mean", ",", 
                RowBox[{"4", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"varx", ",", " ", "cov"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"cov", ",", "vary"}], "}"}]}], "}"}]}]}], "]"}]}],
              "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{
            RowBox[{"7", "/", "6"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
          RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Mean", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Meanx", "[", 
              RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
             RowBox[{"Meany", "[", 
              RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", " ", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<mean \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<mean \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          RowBox[{"AxesOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}]}], ",", " ", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "correlation", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Corxy", "[", 
            RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<correlation\>\""}], "}"}]}], 
          ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
             "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], "}"}]}], 
          ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", 
                RowBox[{"Corxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "]"}]}], 
            "}"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "covariance", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Covxy", "[", 
            RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], 
          ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"0.1", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
             "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "}"}]}], 
          ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "cov"}], "}"}], "]"}]}], "}"}]}]}], 
         " ", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.662731440399732*^9, 3.662731492611751*^9}, {
   3.662731533604307*^9, 3.6627315628198013`*^9}, {3.662731691176279*^9, 
   3.6627317076378517`*^9}, 3.662731762377194*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0.87, 0.94, 1], 
      DiskBox[{0, 0}, 1]}, {
      GrayLevel[1], 
      GeometricTransformationBox[
       RectangleBox[{-1, -1}, 
        NCache[{
          Rational[7, 8], 1}, {0.875, 1}]], {{{
        0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
        0.7071067811865475}}, {0, 0}}]}, {
      RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      Arrowheads[{-0.04, 0.04}], 
      ArrowBox[
       NCache[{{
         Rational[7, 8] 2^Rational[-1, 2], Rational[7, 8] 
          2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0.618718433538229, 0.618718433538229}, {0.7071067811865475, 
        0.7071067811865475}}]], 
      InsetBox[
       FormBox["\"h\"", TraditionalForm], 
       NCache[{
        Rational[15, 16] Sin[Rational[3, 16] Pi], Rational[15, 16] 
         Cos[Rational[3, 16] Pi]}, {0.5208470934558771, 
        0.7795027615336362}]]}, {
      GrayLevel[0], 
      Thickness[0.05], 
      CircleBox[{0, 0}, 1.05]}, Null, Null, {
      RGBColor[0.368417, 0.506779, 0.709798], 
      Thickness[Large], 
      CircleBox[{0, 0}, 
       NCache[Complex[0, 
          Rational[5, 256]] 15^Rational[1, 2]/(Complex[0, 
           Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
          Rational[7, 8]]), 0.9252779220255513]]}, {
      RGBColor[0, 0, 1], 
      Thickness[0.01], 
      ArrowBox[
       NCache[{{0, 0}, {
         Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
          2^Rational[-1, 2]}}, {{0, 0}, {0.35355339059327373`, 
         0.35355339059327373`}}]]}, {
      RGBColor[0.880722, 0.611041, 0.142051], 
      PointSize[Large], 
      PointBox[
       NCache[{Complex[0, 
           Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]]), Complex[0, 
           Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]])}, {0.6542702931464649, 0.6542702931464649}]]}, {
      RGBColor[0.560181, 0.691569, 0.194885], 
      Opacity[0], 
      EdgeForm[{
        Thickness[Large], 
        RGBColor[1, 0, 0]}], 
      InterpretationBox[
       GeometricTransformationBox[
        DiskBox[{0, 0}], 
        NCache[{{{2 (Complex[0, 
                 Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (Complex[0, 
                   Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                  Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[1, 2], 0}, {(Complex[0, 
                 Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (Complex[0, 
                   Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                  Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2] (Complex[0, 
                Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]])^(-1) (Complex[0, 
                  Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                 Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]]))), (4 (Complex[0, 
                  Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                   Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]))) - (Complex[0, 
                  Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                   Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2] (Complex[0, 
                 Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + 
                 ArcCos[
                   Rational[7, 8]])^(-1) (Complex[0, 
                   Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                  Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]))) (Complex[0, 
                 Rational[1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (Complex[0, 
                   Rational[-777, 2048]] 15^Rational[1, 2] - 3 Conjugate[
                  ArcCosh[
                   Rational[7, 8]]]) + Rational[1, 36] (Complex[0, 
                    Rational[7, 64]] 15^Rational[1, 2] + Conjugate[
                   ArcCosh[
                    Rational[7, 8]]])^(-2) (Rational[3375, 16384] + 
                9 (Complex[0, 
                    Rational[119, 2048]] 15^Rational[1, 2] + Conjugate[
                    ArcCosh[
                    Rational[7, 8]]]) (Complex[0, 
                    Rational[7, 64]] 15^Rational[1, 2] + Conjugate[
                    ArcCosh[
                    Rational[7, 8]]]))) Conjugate[(Complex[0, 
                   Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                   ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                    Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                  9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2]])^Rational[1, 2]}}, {
          Complex[0, 
             Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
              Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
             Rational[7, 8]]), Complex[0, 
             Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
              Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
             Rational[7, 8]])}}, {{{
           0.31199313421374025`, 0}, {-0.2982184292792444, 
           0.0916814279706269}}, {0.6542702931464649, 0.6542702931464649}}]], 
       Ellipsoid[{Complex[0, 
           Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]]), Complex[0, 
           Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]])}, {{4 (Complex[0, 
              Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]))), 2 (Complex[0, 
              Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])))}, {2 (Complex[0, 
              Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]))), 4 (Complex[0, 
              Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])))}}]]}}, ImageSize -> 300, PlotRange -> 
    NCache[{{
        Rational[-7, 6], 
        Rational[7, 6]}, {
        Rational[-7, 6], 
        Rational[7, 6]}}, {{-1.1666666666666667`, 
      1.1666666666666667`}, {-1.1666666666666667`, 1.1666666666666667`}}], 
    PlotRangeClipping -> True],TagBox[
    GraphicsBox[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1: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
PJzbwqv+B2twdjI=
          "]]}}}, {
       InsetBox[
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"mean \"", 
             StyleBox["\"x\"", Italic, StripOnInput -> False]}, "RowDefault"], 
           TemplateBox[{"\"mean \"", 
             StyleBox["\"y\"", Italic, StripOnInput -> False]}, 
            "RowDefault"]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], 
        Scaled[{0.65, 0.85}], 
        ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
        BaseStyle -> {FontSize -> Larger}]}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"\[Beta]\"", TraditionalForm], 
        FormBox["\"mean\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
      DisplayFunction :> Identity, Epilog -> {
        PointSize[Large], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        PointBox[
         NCache[{Rational[1, 4] Pi, Complex[0, 
             Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
              Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
             Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        PointBox[
         NCache[{Rational[1, 4] Pi, Complex[0, 
             Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
              Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
             Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
      220, Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> 
      NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {{{0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}], 
    InterpretTemplate[Legended[
      Graphics[{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1: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
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
           "]]}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1: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
PJzbwqv+B2twdjI=
           "]]}}}, {
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "mean"}, 
        AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, Epilog -> {
          PointSize[Large], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Point[{Rational[1, 4] Pi, Complex[0, 
              Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]])}], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          Point[{Rational[1, 4] Pi, Complex[0, 
              Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]])}]}, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
        220, Method -> {
         "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
        PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotRangeClipping -> True, 
        PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {{0, Rational[1, 2] Pi, Pi, Rational[3, 2] Pi, 2 Pi}, 
          Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]]}, {
          Row[{"mean ", 
            Style["x", Italic]}], 
          Row[{"mean ", 
            Style["y", Italic]}]}, LabelStyle -> {}, LegendLayout -> 
         "Column"]], {0.65, 0.85}, Identity]]& ], Editable -> True, 
    Selectable -> True, SelectWithContents -> False, AutoDelete -> True],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.772079, 0.431554, 0.102387]], 
       LineBox[CompressedData["
1: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
Gg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"correlation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[Large], 
       RGBColor[0.772079, 0.431554, 0.102387], 
       PointBox[
        NCache[{Rational[1, 4] Pi, Rational[1, 2] (Complex[0, 
               Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (Complex[0, 
                 Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                   Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]) (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]])))^(-1) (Complex[0, 
              Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])))}, {
         0.7853981633974483, -0.9558493331296863}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
     220, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.1, 1.1}}, {{0, 6.283185307179586}, {-1.1, 1.1}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}, {
         NCache[Rational[3, 2] Pi, 4.71238898038469], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
         NCache[2 Pi, 6.283185307179586], 
         FormBox[
          RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.528488, 0.470624, 0.701351]], 
       LineBox[CompressedData["
1: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
gl6dt82NDCbw/nXGn0beiqCzl0pKPcMJHOyXfNrlvQjKvZ52bymWwBvUDz0q
+CSCEo4+PR/PIvDr7u8DP7+SepEvUJl4AvPo7nH0HhZBw7eNKA1JBE4dHc/G
4yLIZ+kd4/cjAu+9y5ymzIggiWlbQ+E0gnzPD14P+y2C2styNww9ITB3Xqgv
m5+Kfr9/usmimJxvu6W6S5iKHNzXP8wpIecLf+JeJU5Fxr5/14+XkvMdN4Wn
yJLj4qXmNExgRZmOpiF5KpqsHZ7nrCJwTZ03VWUdFc3qcDxqryYw1/pmZt4m
KgrPblpe/5rAj9rdP8yqU5HHWOnTtDoCG/ivltXaTkX9V/hshRoI3KdRb+Ol
TUUV/Kv5jzcS2L/nSlKFHhXZq4Y8DX5DxiNKpo9Dn4rOLw8b//97aLVeteLe
fVQ0d2LFKPMtge3GHR1CDlGRZW3DjWvNBKbck8hqPEJF6322cmq1kPYPlk8I
m1HRJTd7nx6SDebPqZtaUtF90wczTq2k/cfCrkxrKvJygeM9JPsfK372wZaK
qvrq8ne8I+1znZ6XtaeS9432ZVeSq/NX6Ng6UNGr3FX6zP9//zyT5/3wMhU5
vfZzu0cyJ/UEHnChoo78nwlBJCdXcFKUr1MRsYr53IJk5JS197InFRU7M2oF
SO6VNQ/J9aais9X76lJJ+34Nfxu++1FR1KRCxTqS13imCmkGUdEN7xfpIf//
nrvhiLFnGBUt5leEtJL+nun8GVsWSUWNwUunlkg9OAITO5ZiqehWhuMmMZKT
tx6QMmBTUYQn9TsfqR/6Nn0i6B4ViQnK5A3+/3to9N2E+kQq8l/fdimdjIff
bv0ewRQq2rQrdfXRetL+5KiCcToVPXCTau8i41l5n3GO8YSKJhLbgg7XkvYW
+keln1FR6nGLmU9kPiSnR6jalFCRbgdX9h8yX5ClpktSORUlStU7L1eQ6xcG
z62vpSL9d3niJS/I9e3UtS41UJGUQf7vy8/J9UU/3sh+S+bbJd9p7iICL/+3
cXnreypaeTpSdugpgR3pxtmbP1HRc9ucq6dyCNzx8voJ5a9UtGHLUeuKLAJn
USsLVw1RkfN85NiOxwQ+lm95ke8XFfWK3rAQI+vn5QlvGtcfcnz/leC3ZH1t
pDyq/vePin5k7jzjyiCwb6Z71AJFFL3kTpFzv0PO/1M1MiUgilZae0te8CZw
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
0/CvggyafOuXOJW4c/f/ADMDBpw=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"covariance\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[Large], 
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointBox[
        NCache[{Rational[1, 4] Pi, Rational[1, 2] (Complex[0, 
              Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (Complex[0, 
                Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
               Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                 Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                  Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]]) (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])))}, {
         0.7853981633974483, -0.023260525607782526`}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
     220, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}, {
         NCache[Rational[3, 2] Pi, 4.71238898038469], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
         NCache[2 Pi, 6.283185307179586], 
         FormBox[
          RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6627314300061207`*^9, 3.662731493179544*^9}, {
   3.66273154659715*^9, 3.6627315660861893`*^9}, 3.662731713228603*^9, 
   3.6627317674152803`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot for paper", "Subchapter",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}, {3.662731403355773*^9, 
  3.6627314106168213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xv", ",", "yv", ",", "\[Beta]v", " ", ",", "x", ",", "y", ",", "mean", 
      ",", "cov", ",", "covv", ",", "varyv", ",", "varxv", ",", 
      RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", "padding",
       ",", 
      RowBox[{"imsize", "=", "220"}], ",", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"1", "/", "8"}]}], ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"\[Pi]", "/", "4"}]}], ",", 
      RowBox[{"showStats", "=", "False"}], ",", 
      RowBox[{"showParticles", "=", "False"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hv", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "8"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", 
        RowBox[{"3", "/", "2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meanx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meany", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cov", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varx", " ", "=", 
      RowBox[{"Chop", "[", " ", 
       RowBox[{"Varx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vary", " ", "=", "  ", 
      RowBox[{"Chop", "[", 
       RowBox[{"Vary", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Meanx", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Meany", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"covv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Covxy", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varxv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Varx", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varyv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Vary", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"padding", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "[", "LightBlue", "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{"interior", " ", "region", " ", "of", " ", "square"}], 
             "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}], 
                 ",", "\[Beta]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
              RowBox[{"(*", 
               RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
               "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "@", "hv"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "-", 
                    RowBox[{"hv", "\[LeftDoubleBracket]", 
                    RowBox[{"Length", "@", "hv"}], 
                    "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}], 
               ",", "\[Beta]", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
             "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "[", "Green", "]"}], ",", 
             RowBox[{"Arrowheads", "[", 
              RowBox[{".04", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "h"}], ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                RowBox[{
                 RowBox[{"(", "1", ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<h\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"h", "/", "2"}]}], ")"}], 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
            RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], 
               ",", "Thick", ",", " ", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], " ", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                   RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], " ", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}]]}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "draw", " ", "the", " ", "direction", " ", "of", " ", "the", " ", 
             "vector"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Thickness", "[", ".01", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], 
               ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "xv", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "xv", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "Thick", ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Red", ",", 
                    FractionBox[
                    RowBox[{"i", "-", "1"}], 
                    RowBox[{
                    RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], 
                   "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Opacity", "[", "0", "]"}], ",", 
               RowBox[{"Ellipsoid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "xv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "xv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                 RowBox[{"4", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "varxv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "covv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "covv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "varyv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{
           RowBox[{"7", "/", "6"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.662731440399732*^9, 3.662731492611751*^9}, {
   3.662731533604307*^9, 3.6627315628198013`*^9}, {3.662731691176279*^9, 
   3.6627317076378517`*^9}, 3.662731762377194*^9, {3.6627318016648684`*^9, 
   3.662731802234436*^9}, {3.662731845128525*^9, 3.662731880672266*^9}, {
   3.6627319202431726`*^9, 3.6627319495155478`*^9}, {3.662731980339591*^9, 
   3.662731988251877*^9}, {3.662732027049024*^9, 3.66273210753577*^9}, {
   3.662732152546269*^9, 3.66273215289685*^9}, {3.662732274971843*^9, 
   3.662732326101622*^9}, {3.6627323670007668`*^9, 3.662732367295785*^9}, {
   3.662732413459055*^9, 3.662732601612562*^9}, {3.6627326381994247`*^9, 
   3.662732753279212*^9}, 3.6627396735933943`*^9, {3.6627397131712713`*^9, 
   3.662739819672172*^9}, {3.662739855617093*^9, 3.662739880003626*^9}, {
   3.662740438056319*^9, 3.662740481812148*^9}, {3.662740514651473*^9, 
   3.662740514844577*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0.5800000000000001, 0.6266666666666667, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      DiskBox[{0, 0}, 1]}, {{
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[7, 8], 1}, {0.875, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[1, 2], 1}, {0.5, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, {0, 1}], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[-1, 2], 1}, {-0.5, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}}, {
      GrayLevel[1], 
      GeometricTransformationBox[
       RectangleBox[{-1, -1}, 
        NCache[{
          Rational[-1, 2], 1}, {-0.5, 1}]], {{{
        0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
        0.7071067811865475}}, {0, 0}}]}, {
      RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      Arrowheads[{-0.04, 0.04}], 
      ArrowBox[
       NCache[{{
         Rational[7, 8] 2^Rational[-1, 2], Rational[7, 8] 
          2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0.618718433538229, 0.618718433538229}, {0.7071067811865475, 
        0.7071067811865475}}]], 
      InsetBox[
       FormBox["\"h\"", TraditionalForm], 
       NCache[{
        Rational[15, 16] Sin[Rational[3, 16] Pi], Rational[15, 16] 
         Cos[Rational[3, 16] Pi]}, {0.5208470934558771, 
        0.7795027615336362}]]}, {
      GrayLevel[0], 
      Thickness[0.05], 
      CircleBox[{0, 0}, 1.05]}, {{
       RGBColor[0.368417, 0.506779, 0.709798], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[5, 256]] 15^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]]), 0.9252779220255513]]}, {
       RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[1, 4]] 3^Rational[1, 2]/(Complex[0, 
            Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
            Rational[1, 3]] Pi), 0.7050201618985662]]}, {
       RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Rational[4, 3]/Pi, 0.4244131815783876]]}, {
       RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[1, 4]] 3^Rational[1, 2]/(Complex[0, 
            Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
            Rational[2, 3]] Pi), 0.17132680415009122`]]}}, {
      RGBColor[0, 0, 1], 
      Thickness[0.01], 
      ArrowBox[
       NCache[{{0, 0}, {
         Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
          2^Rational[-1, 2]}}, {{0, 0}, {0.35355339059327373`, 
         0.35355339059327373`}}]]}, {{
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[Large], 
       PointBox[
        NCache[{Complex[0, 
            Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
            Rational[7, 8]]), Complex[0, 
            Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
            Rational[7, 8]])}, {0.6542702931464649, 0.6542702931464649}]]}, {
       RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`], 
       PointSize[Large], 
       PointBox[
        NCache[{Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[1, 3]] Pi), Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[1, 3]] Pi)}, {0.49852453735171376`, 
         0.49852453735171376`}]]}, {
       RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`], 
       PointSize[Large], 
       PointBox[
        NCache[{
         Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 2^Rational[1, 2]/
          Pi}, {0.3001054387190354, 0.3001054387190354}]]}, {
       RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
       PointSize[Large], 
       PointBox[
        NCache[{Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[2, 3]] Pi), Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[2, 3]] Pi)}, {0.12114634501354903`, 
         0.12114634501354903`}]]}}, {{
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[1, 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{2 (Complex[0, 
                  Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                   Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[1, 2], 0}, {(Complex[0, 
                  Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                   Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2] (Complex[0, 
                 Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + 
                 ArcCos[
                   Rational[7, 8]])^(-1) (Complex[0, 
                   Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                  Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                   Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]))), (4 (Complex[0, 
                   Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                   ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                    Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                  9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]))) - (Complex[0, 
                   Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                   ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                    Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                  9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2] (Complex[0, 
                  Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                   Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]))) (Complex[0, 
                  Rational[1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + 
                  ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[-777, 2048]] 15^Rational[1, 2] - 3 Conjugate[
                   ArcCosh[
                    Rational[7, 8]]]) + Rational[1, 36] (Complex[0, 
                    Rational[7, 64]] 15^Rational[1, 2] + Conjugate[
                    ArcCosh[
                    Rational[7, 8]]])^(-2) (Rational[3375, 16384] + 
                 9 (Complex[0, 
                    Rational[119, 2048]] 15^Rational[1, 2] + Conjugate[
                    ArcCosh[
                    Rational[7, 8]]]) (Complex[0, 
                    Rational[7, 64]] 15^Rational[1, 2] + Conjugate[
                    ArcCosh[
                    Rational[7, 8]]]))) Conjugate[(Complex[0, 
                    Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + 
                    ArcCos[
                    Rational[7, 8]])^(-1) (Complex[0, 
                    Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                    Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])^(-2) (Rational[3375, 16384] + 
                   9 (Complex[0, 
                    Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]]) (Complex[0, 
                    Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                    Rational[7, 8]])))^Rational[-1, 2]])^Rational[1, 2]}}, {
           Complex[0, 
              Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]]), Complex[0, 
              Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]])}}, {{{
            0.31199313421374025`, 0}, {-0.2982184292792444, 
            0.0916814279706269}}, {0.6542702931464649, 0.6542702931464649}}]], 
        Ellipsoid[{Complex[0, 
            Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
            Rational[7, 8]]), Complex[0, 
            Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
            Rational[7, 8]])}, {{4 (Complex[0, 
               Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (Complex[0, 
                 Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                   Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]) (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]))), 2 (Complex[0, 
               Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (Complex[0, 
                 Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                   Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]) (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]])))}, {2 (Complex[0, 
               Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (Complex[0, 
                 Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                   Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]) (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]))), 4 (Complex[0, 
               Rational[1, 24]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (Complex[0, 
                 Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
                Rational[7, 8]]) + Rational[1, 72] (Complex[0, 
                  Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                 Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
                   Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]]) (Complex[0, 
                   Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
                  Rational[7, 8]])))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[8, 9], 0.8888888888888888], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{2 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 24]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
                Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi))^
              Rational[1, 2], 
             0}, {(Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 24]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
                Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi))^
              Rational[-1, 2] (
              Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                 Rational[-1, 12]] (Complex[0, 
                   Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
               Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)), (
              4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                   Rational[1, 24]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
                 Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)) - (
                Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                   Rational[1, 24]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
                 Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi))^(-1) (
               Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[1, 3]] Pi)^(-2) + Complex[0, 
                  Rational[-1, 12]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
                Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)) (
               Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-1, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-1, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-1, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 12]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, 1] Pi)/(
                Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)))^
             Rational[1, 2]}}, {Complex[0, 
              Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
               Rational[1, 3]] Pi), Complex[0, 
              Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
               Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
               Rational[1, 3]] Pi)}}, {{{
            0.5986678741859479, 0}, {-0.48288326120971026`, 
            0.35387424267074963`}}, {0.49852453735171376`, 
           0.49852453735171376`}}]], 
        Ellipsoid[{Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[1, 3]] Pi), Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[1, 3]] Pi)}, {{
          4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi) (Complex[0, 
                   Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi)) (Complex[0, 
                  Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[1, 3]] Pi)^(-2) + Complex[0, 
               Rational[1, 24]] (Complex[0, 
                 Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
             Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)), 
           2 (Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi) (Complex[0, 
                   Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi)) (Complex[0, 
                  Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[1, 3]] Pi)^(-2) + Complex[0, 
               Rational[-1, 12]] (Complex[0, 
                 Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
             Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi))}, {
          2 (Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi) (Complex[0, 
                   Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi)) (Complex[0, 
                  Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[1, 3]] Pi)^(-2) + Complex[0, 
               Rational[-1, 12]] (Complex[0, 
                 Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
             Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)), 
           4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi) (Complex[0, 
                   Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[1, 3]] Pi)) (Complex[0, 
                  Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[1, 3]] Pi)^(-2) + Complex[0, 
               Rational[1, 24]] (Complex[0, 
                 Rational[9, 8]] 3^Rational[1, 2] + Complex[0, -1] Pi)/(
             Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[7, 9], 0.7777777777777778], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{
            2 (Rational[1, 8] + 
               Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2))^
              Rational[1, 2], 
             0}, {(Rational[-1, 4] + 
              Rational[-1, 9] Pi^(-2) (16 + Rational[-9, 4] Pi^2)) (
               Rational[1, 8] + 
               Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2))^
              Rational[-1, 
                2], (-(Rational[-1, 4] + 
                 Rational[-1, 9] Pi^(-2) (16 + Rational[-9, 4] Pi^2))^2/(
               Rational[1, 8] + 
               Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2)) + 
              4 (Rational[1, 8] + 
                Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2)))^
             Rational[1, 2]}}, {
           Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 
            2^Rational[1, 2]/Pi}}, {{{
            0.7998417984858138, 0}, {-0.45040544027203444`, 
            0.6609703790476363}}, {0.3001054387190354, 0.3001054387190354}}]], 
        Ellipsoid[{
         Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 2^Rational[1, 2]/
          Pi}, {{4 (Rational[1, 8] + 
            Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2)), 
           2 (Rational[-1, 4] + 
            Rational[-1, 9] Pi^(-2) (16 + Rational[-9, 4] Pi^2))}, {
          2 (Rational[-1, 4] + 
            Rational[-1, 9] Pi^(-2) (16 + Rational[-9, 4] Pi^2)), 
           4 (Rational[1, 8] + 
            Rational[-1, 18] Pi^(-2) (16 + Rational[-9, 4] Pi^2))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{2 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 24]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
                Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi))^
              Rational[1, 2], 
             0}, {(Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 24]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
                Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi))^
              Rational[-1, 2] (
              Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                 Rational[-1, 12]] (Complex[0, 
                   Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
               Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)), (
              4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                   Rational[1, 24]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
                 Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)) - (
                Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                   Rational[1, 24]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
                 Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi))^(-1) (
               Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)) (Complex[0, 
                    Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[2, 3]] Pi)^(-2) + Complex[0, 
                  Rational[-1, 12]] (Complex[0, 
                    Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
                Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)) (
               Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                    Rational[1, 8]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-2, 3]] Pi) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-2, 3]] Pi)) (Complex[0, 
                    Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
                    Rational[-2, 3]] Pi)^(-2) + Complex[0, 
                  Rational[1, 12]] (Complex[0, 
                    Rational[9, 8]] 3^Rational[1, 2] + Complex[0, 2] Pi)/(
                Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)))^
             Rational[1, 2]}}, {Complex[0, 
              Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
               Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
               Rational[2, 3]] Pi), Complex[0, 
              Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
               Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
               Rational[2, 3]] Pi)}}, {{{
            0.9250031623104793, 0}, {-0.24868298959765903`, 
            0.8909475972071296}}, {0.12114634501354903`, 
           0.12114634501354903`}}]], 
        Ellipsoid[{Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[2, 3]] Pi), Complex[0, 
            Rational[1, 4]] Rational[3, 2]^Rational[1, 2]/(Complex[0, 
             Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
             Rational[2, 3]] Pi)}, {{
          4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi) (Complex[0, 
                   Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi)) (Complex[0, 
                  Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[2, 3]] Pi)^(-2) + Complex[0, 
               Rational[1, 24]] (Complex[0, 
                 Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
             Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)), 
           2 (Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi) (Complex[0, 
                   Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi)) (Complex[0, 
                  Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[2, 3]] Pi)^(-2) + Complex[0, 
               Rational[-1, 12]] (Complex[0, 
                 Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
             Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi))}, {
          2 (Rational[1, 36] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi) (Complex[0, 
                   Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi)) (Complex[0, 
                  Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[2, 3]] Pi)^(-2) + Complex[0, 
               Rational[-1, 12]] (Complex[0, 
                 Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
             Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)), 
           4 (Rational[1, 72] (Rational[27, 4] + 9 (Complex[0, 
                   Rational[-1, 8]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi) (Complex[0, 
                   Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                   Rational[2, 3]] Pi)) (Complex[0, 
                  Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
                  Rational[2, 3]] Pi)^(-2) + Complex[0, 
               Rational[1, 24]] (Complex[0, 
                 Rational[-9, 8]] 3^Rational[1, 2] + Complex[0, -2] Pi)/(
             Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi))}}]]}}}, 
    ImageSize -> 300, PlotRange -> NCache[{{
        Rational[-7, 6], 
        Rational[7, 6]}, {
        Rational[-7, 6], 
        Rational[7, 6]}}, {{-1.1666666666666667`, 
      1.1666666666666667`}, {-1.1666666666666667`, 1.1666666666666667`}}], 
    PlotRangeClipping -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6627314300061207`*^9, 3.662731493179544*^9}, {
   3.66273154659715*^9, 3.6627315660861893`*^9}, 3.662731713228603*^9, 
   3.6627317674152803`*^9, 3.662731806106621*^9, 3.6627319461482973`*^9, {
   3.6627320580331993`*^9, 3.6627320850441017`*^9}, 3.66273215744013*^9, {
   3.6627323154603148`*^9, 3.662732330327874*^9}, 3.662732371181835*^9, 
   3.662732539240888*^9, 3.662732608641588*^9, {3.66273273964946*^9, 
   3.6627327606600933`*^9}, 3.662739681317301*^9, {3.6627397595400887`*^9, 
   3.66273982728693*^9}, {3.662739859888609*^9, 3.66273988411686*^9}, 
   3.662740486077701*^9, 3.662740519005213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Darker", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       FractionBox[
        RowBox[{"i", "-", "1"}], 
        RowBox[{
         RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662732187329965*^9, 3.662732281806281*^9}, {
  3.6627323380772123`*^9, 3.662732354637147*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.368417, 0.506779, 0.709798]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368417, 0.506779, 0.709798]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368417, 0.506779, 0.709798],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.21832118518518517`, 0.3003134814814815, 0.42062103703703707`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.32748177777777776, 0.4504702222222222, 0.6309315555555556]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.19103103703703703`, 0.26277429629629634`, 0.36804340740740743`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.2865465555555555, 0.39416144444444445, 0.5520651111111111]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.1637408888888889, 0.22523511111111114`, 0.31546577777777784`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.24561133333333335, 0.3378526666666667, 0.4731986666666667]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.662732188678244*^9, {3.662732230733972*^9, 3.662732282224903*^9}, {
   3.662732342424712*^9, 3.662732354925295*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", 
   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "\[LeftDoubleBracket]", 
  "3", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{3.662732662101973*^9}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    RowBox[{
     GraphicsBox[{
       {GrayLevel[0], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], RectangleBox[{1, -1}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        RectangleBox[{0, -1}, {2, 1}]}},
      AspectRatio->1,
      Frame->True,
      FrameStyle->RGBColor[
       0.37345400000000006`, 0.461046, 0.12992333333333334`],
      FrameTicks->None,
      ImageSize->
       Dynamic[{
        Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification]}],
      PlotRangePadding->None], "\[InvisibleSpace]"}],
    "RGBColor[0.560181, 0.691569, 0.194885]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.560181, 0.691569, 0.194885]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.560181, 0.691569, 0.194885],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662732662518673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", " ", "=", 
     RowBox[{
      RowBox[{"1.2", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "hv"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "hv"}]}]}], " ", "+", 
      RowBox[{"\[Pi]", "/", "2"}], "-", ".4"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<mean \>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], "]"}], 
          ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<mean \>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Darker", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{"i", "-", "1"}], 
              RowBox[{
               RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
           RowBox[{"Darker", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{"i", "-", "1"}], 
              RowBox[{
               RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Meany", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "hv"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}], "*)"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662732837698907*^9, 3.662732884946515*^9}, {
   3.6627329333250723`*^9, 3.662733005480589*^9}, {3.662733044364048*^9, 
   3.662733153959083*^9}, 3.662740049376692*^9, {3.662740126230797*^9, 
   3.662740386558281*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
n69ZwQa7+eyJHsoaBo92/VnJhv//f+F/Apv+8A==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
N6eO8Jr/AelKdow=
       "]]}, 
     {RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJw12Wk0Vd/fAHBDrntNyXSvQoZCkkqiEvubpKifkFJJKlOSCpFE5qlkSkqp
KBlCJTRIbYpEEiIU4d57doVEiUJ5zv/F8+qszzpnnbX3/g7n7LXVDhy1cxMS
EBCIFRQQ+N9VGIs18VaGm8bObPaJSSJIVUFVU+W8MyoN97ofSftXT7J1V+pR
tCF90v8Ube9OZu2cOyeQk+nUE2/afevquQ9SQ5FOy7Go3bQL2s0F7jyJRN+m
nN+uo31AbGGSwJ1YNFbdlKlBWwmJqGzLOosygmuGZhIJavejim6lJiGLj5b4
Pe2NbVzl4OcpyJN3UC6fds6wndutJ+dR4IjukB9tAdaLoqayC2i09IbFGtpO
GivGJoovIuuVnRpT5wiqMLlprJaXgVit3ZEPaCvslI20yrqC0k2q3Q/Tbk74
Oedq6nX0aNq3vC6BoPR3Jbq82iw04npQzZt2TZ9n84nn2Ui/9py0JG21qS52
9pOb6NfGusC1ZwmyYaY+WfkoB2npSf14fYag0/JWzg1lt1Dl+YHh7bQ/LK3I
/Vmch0zlOv12xRPENPG1irudj7SzNadb4wgystIZVsorQHtSopkbaae5Xl5p
kVWIdPX+FavEEvRfRlDNpdS7aJ78l6UJUQSZblMsS994DwmpPuvuiqTXa9cv
kf7ae2jQ5YOUOm1hj+IC/+claG9XhvCNcIL2hSuPXntSikx+HTbYd5qgidg/
Zl9Xl6HCoZvSESEEJSa2p614VIb8rIr8rgUTVHnl3KpXZeXopar025dBBCk+
+Bs6WvwQuavG9rcHEHSvsqvFWPcR0uq9Mfnan6BNL8o1Ym4/Qvo+xzIrjxMU
0OxdNzfvMXJK1Dl1zpeg1oEeKfOsJ2jiWl7RN2+CEuY/u5qeilH9SJxqvgtB
Fq+vLK+SrEKOH/gj2gcIehmzU26lXRW6ds5s9819BNX9belS+ViFRvuf/4ly
IujVYI3rj6Fq9KA8KHBqB0ENdbeDMqRr0L8Sbm/5JoKsIj2cpLbXoISzFwOb
Lej7pgsgMqMGRUWr3uebE/S6/KqIt3otmr2Nx5oEghpvJieDwUs0kim4p3MV
QW9CA3I/O7xCy+zWz3bVIsjaeEX8nsxXqP3pginOQoKaxr97tfS9QikLQ1Pq
1Gl7ey5/4lmPevM2Vs1Roe24pzLxVAM6KqmzerccnV9GZq0rrzeimylGhpUz
FBqYYMys82tGb6QMiupbKDSj8V+N0flmVI3in39topCczfn4JaXN6Cl1/eCs
Rgqh/Plyij+b0YzXuPuilxRK27lq0YhvC/I1fQ/6FRQyfey57ZpvK0r5g2Qg
m0IpQY15kz5t6HBtwGNbLwrl5sp4j6S0ofyo7ZtqPShU2bpTn5S0obVOd8JW
uFKI6FCVLaNtqEzPeXRmD4XWfPzbku/TjsLO/x3caU0hvvHS6R0+79GbZ/Fy
EssotOpvik3psU50/em8wZDvfLQm+NBFZnInelVYX+g0yEfGU2afnO52ok71
roOrPvOR6Z+fXszhTqS6h9396RMfrf+1PdbJqwu9Flj64vsbPrL+pvhM1P0D
qinMD1Qv5CO3nuzFexy70RebVaR1Px/Vf9oZKaTRh5pmFrdfq+KhHY2r5AUN
+hCfShJvreAh/mNO3ox5Hxr66VkyU8ZDAhc6G6bd+9Ajf1k7qwIeWrV5p8zE
7T7EXHdJ/moKD+U+dMge1O9HVZ0Hldfs56Go5B24zYyLzOWPrts7zUVgZj+V
e4CPNG/WupWpc9HuY5Yj5bu+IO6utHfRO/rQMzWdiKpbQ0iw+WLpZqNuZH9J
52bPkRF0TkBV+pFDB5on8nR9svsPpNwzVsk60opiV9Ter4obQ95BZWOP0+rR
ho1W+3JjxpF7afA7f4unqDZ+TDMq6DeKOpT8QyviKho4J1fZe2kStY75tgqE
3sP7T5QkjaROI91dDudjzF7gEPWa5aEP/6FFYoYOwt1NWO9fyLiQpwC4OYgX
jnxow3VOO3+qugrCs30RbncvduHl17w7Qo4LgctTwZ4Nmz9hc9vq3eW+wlAz
z9rtmWI/TjvrZSB8QhjclDc9zVXrx7xaeSnbU8LgsbZx/plF/ThizaHqoUhh
yNSym1q3uh9Xa8hqL7ggDKikqtF/Zz82HXf9lfpQGCKPWfYPXujHq64wk49N
C8P3K6N7hSS5eDG1tXZxzCy45BwmfGCQizs9dZPczswCvv7DNT2jXBwzzNx1
PXEWWPyr0t72m4v7JqqHZC7Ogu9sRfWlIjycJmYgN5k3C0L2YYc8FR6eXspx
eVU/CxxGeGYXbXi4KahPwE1SBM7Kzhf1vMfDp2YqG67NEYHAktMPjR7wsHZU
RlqnvAhcNv/yWaCShyPO2WlvUREByWduzyPqeNgoq2briqUi8GCj0XLzTzyc
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
GxdsnlJThP8/X/g/slL/7Q==
       "]]}, 
     {RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13k4lc8XAHBrdu6CKERlKUpo8ZWciWyRIllKUmknUpYoUhISkqRkTShb
iyTJFBFCVFQq4d77hrKv19Zvfn/d5/PMc995z8w5Z+ZVOeBld4iPh4eniJeH
5/+//Fi0ibUu1Kjm3MVzQVsCjJRlldWUbuwDn8jk3jfGDjD+M87mW7wXbDik
lxdjfBg6N9d1l8SHQHWr+PUTxn7QepqTfz8+FpSLTsmtNQ6H5uhRekp8Gqzr
W/fowuZE2HY78G1SfBFsGIg/UWuUDdFLKlIS4zGYGp0dGdUrgb7JBf82n24G
teOVLb+GakB/7vqOp95fYX9FQszD5mao63C6xLesE0roYi3LGlsBGdvPZB9g
Q4tOXVpjWzvs9rYceubcA5kBr++9UPwFFSorL76+/xfGnqt8Gr/TBdONBp7p
JX/hnL7rn4OZXbAu0Mrpwru/cGPdJoXGB12Q/9FjNer9C+Ol93FcaRckXypq
x1r9UCVa9elHaxcEcNbq4af9kKpfdTxcqhv0HgD71ZsByM48dIwe0g32SSvv
/Tw5BL33YTrZhgVC3fme5X5DkNN728nRngVlmtr6ycFDcPvVAxHJ3SxQxnqN
TjFD4JRw0NXzEAv6OYaTnwqGYMl4S95oEAvC9bZb1f8lDuJkK+ayoLTp9GjJ
8WGYij3z4+csC07ITby66TMMz5sGuDx8bFA6EBBxJnAYLpTLoyVCbAgbP6eo
GzUMVo9jNm+js8FWIdy84MEwrJCMnzipyoa+Y0nJ93qG4Qf/W/laazYsFnxl
End4BJwdVovU3WLDZ9WzgvJeI9BjWuz26C4bYszWvcvwH4GP3Pn26xls4Iso
2Po0YgQUvBx0TfLY0COaatv2cAQOetw03VfBhhJayD6FwRHgf8xoDmL9f/7N
Qbn+o3BMIGTPphUcEN00Z6hzYRTEdbyDDq/iwNu9L+ZfRIzCMo/phEgdDuin
6Vx8f3sUsi+oPXr1HweUli6NHHg5CpIn7A//tOTAX3X+W2t5xuCR4JFP3KMc
uKJX/eR1xBg4v1gum5bJgTbzIMvSuDHY+a0/4/19Dix30eksShqDi1fTPozk
cqAyLEUiLXcMsk6kSOgUcWC+1ffo+doxkFM4Pe/xkgN+AWpKBsLjIHn2iFj3
Rw5UR/8o1qGNw/2xT7tLWzkgnRFvtUJuHManzFDkVw48qZsPkNMYh8kJv/pF
HRwYWPTl04T5OIhcqamd7eHA4VdXIp9eGQf6yYYvL+c48Kxlk3Je7DhsXFW3
fiMPBQLUaEnmrXGoFjNWecZHQaakG/t6DhmvW5uYJERBxz598H43DucuGw8q
0ilw4Osd0xKaAGb5je8qyyi4L5t2dbnUBOwvTs6zVKVgbOWupQoLJ6AzbXDu
hDoF8TvfbBdTn4Btra7q6ZoUNGXdfthrNgGjub+Ca/QoMDXf6pYdPgHTJuIt
oiYUbB9y/+IbMwHZnFv+LVsocL4dYmOaOAFCTkUf4s0o8PxTbMi+PwGQ3RYv
uJWCm7FL5JdWT0B6eLpz3g4K0vQN4oYbJqDcZ3GouR0FD7rshd58noCcBf0O
HTspeKUXNb6PPQGpmXTxWQcKOF/GWlL4J8FWTjZ+0oWCwQtSlp5ik+DXMqJy
zJUC7oqVrw2ZZFzdeG/rPgokzu0r/L50Ev6r7PiccoCCdcr1UfLGk7Ahpqti
4AgFl4+mmdy8MAkZ0bX6cacoiKWXlblHTMJT6rdzvg8Ft8s+66yNm4SVDfdV
qk5TUCAuqvwpbRICasbudfpS0ProzCwNT8LGV388vp+l4Jdz7OnOmkmwes9X
3hBIQS/fw76ipknQzK0tKg2iYM7+11ebjknwWR0aduE8Bapcy2fRc5MwGfPh
x4cLFGhnumu5CE6BvlmwVWIoBf9ZhdzTlJiCV6837XW8SMG2lOLr9QpTMAj6
x+ouUeBo9kH4zvIp+Ci7+GBgGAX7B3tDjmlNwYVdrv9UL1Pgu3nJSWHDKeir
OKjkGU5BSN9/nC8mU3Bq4ku68BUKIm/Yu+RYTcGxIlp1KnEKJ3Kr2Z4pUGnZ
PFIWQUFOTNYbmYNTcOTixDSKpODxBqzPOf7/9+vJekNcHTmmFhZI5n8g8uNJ
FAVtIpY35y5OQcl/X8u0rlJARabw+1+dggTLx2bpxJMiI6eGbkxBuNeZEIlo
CoSjzDqP3Z2Cn0L8h84Qy4mSrphF5l+HJj8Tr4gaLHcpmAKFTtp67WsUbI1K
ur29Ygq6dEReNBPvFu0XqquZgsZI/rmFMRSciNrsZ/xhCmrerO93Ij4nmsh+
+WUKtmbGRd4gjo7qs1vXOQWojOfjO+K7ovCmsGcK5l0DasaJC6JuaGsMT4FF
ft9hxVgKKkR7UjK4U+AcZv3UiLgpylB8MR8XOLEJec7EHaLXAxNEuSBn9HL7
SeLBKE6PBJMLd96WpZ0j5hEzcLyymAu3lsQmhxHTrsZU8yznQjF9vUk4sYoY
Sy9QiwuLlhclhhLrXt2QObqWC17ZMzf9iI3Fommem7jwo1Bp8yHinVc7gylT
LggvUkzaRuwutq5/nw0XFl6du6NNfOZq5J5vDlzIPVFrKUZ8Wayjzm4fF9r+
XMnqJPElXtXVbzjChTV8FnlFxNliV7JNvblQdkLWNYD4+dXv0jiAC7/z+F4Z
ENeKrbmkH8qFeHGl2gmy3l+vhg0/juQCb2pQSD5xj9i3fZrxXPiyfg1rDzH3
6qqmrDtcYJ6xGxUgFhW/aKh0jwtiL6aLcsh+Lopue3grjwtu2ibyW4hXimvK
04u5MFljrt1O8mNjdMiVqHIuTK9TGzlG7BKt4X6+kQvdtkPBfiS/PMTPf5xo
5cK8pbLlKMm/89EtyLuDC+yiJ6+PEadGByoeHCTr13Gn1ITkb1d0Q5sFfRqG
apSb80g9jIirmFbKT0NP5T+RCVIvfNd8n25cOg17z+aM/Ee8/JpS3Gq9aeDr
U20pJPV2+Jq3pfSuaXjRwayzDqHAT6L6+bW9ZNxqf4h7MAVXrsmrCR2ehica
2ylfUs+51yr5pv2mwbNU/t1lUu9916TLfyVNw81KzR/O/hTE8R789y59GlLU
Rg3t/ChY7/vY+FHuNJy6b65iSvrJRRebugul07BfN913Eek38poRbSpfp+GR
SYL9pZMkH1Pb5EU7pwG3wbftnmT/Gap7R35PQ+qnPJasBwWPuG9YlZMkHuWp
qIRjFFjUzgwdXDgD7iEMLRt3CgY2bl1rvWQGbp87+nuA9MOEoiT/teozsKRF
SDNqPwWdievmBTbMQITzBetHpJ/6H/ISy3aYgaaktXwvnUi+8LFUe27OgErK
76v1VhRY++kca06ZgeaLNyeZpL+P9Ibkl96fgZCPqcOOFhQYtSjoRT4j8zf5
xX8g50NrmgNa2ToDKf4eN85vIufZpvrdHtKzsCTJaurzKtK//B/HDsXPwq8W
68ozohRIVv5XfzF5FiSz7pj9JOdbmXilgEzWLKjXHQ0AQQoYmR/P/vdsFprK
In4P/SP3g4bRgxe/zMJY2HYR4XEOaCxdry+tMAeWxnniwuS8HWwo69xwfw4S
mT3z9nkcuLvQZHF9wRzUVBfWj+VwwOLA+10uJXOwpzxoX0wWB9Inv9dfeDcH
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
PyW6z6DXCetsfGA1oyKP+k4YnA/aElDxP3L0eU0=
       "]]}, 
     {RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
s1FZQeU02DeW19dO2XeFztIdz2nQen3dmxh1EhdeDrbWr6FBmdLA4nYNEreu
ZryVrafB5/nr6Yc0SfxztHLH3yYaxKykpQpqkXjlRlpQWxsNgr9coKlrk3jX
dNHM804aDLz1iLtHOSp7W8w9Dg1Ep3bHqS8icQPP3evH+2iwhO+ymLAOib8W
22juGaTy0RCTcoSymOdIod0XGowmWN18T9lINMl8xRgNeNKztYx0SbztuWmt
8g+qHj5kG8ZRPu5HbhaapMF/L/QquijflI9mf5+hQZ2+SrOqHolfvtLZx/1D
g5InR9z2Uu4LbhmrXaCBxVFZ/3TK/OohYYX8dPjNNzPXQVnnHYPvmjAdzK5J
SPAtJrF9xMuLp0Xp8HHEIUufcpD+foa/JB0ubS5+uplyEoeW5SxLh4up2g4H
KJfFFRtYMejAXfzAJ5Iy28Tl6SIlOqjyrv53gfLcp99rJdXo8Op2NyOVskry
3ZZZTep6seOPqP0DBrR+xycdOiz/rvguibL3t5H+N/p02HS4IeAs5fhbSQfL
Demwy/bkuaOUC+zMZu4Y08GpYrWuB+V3M2T0OTM6NGXJbrCiPHE/WixkFR2k
dwt8UaAs56J73WMNHZb2MUVGqXjN+d5qrLemQ/M9j6JnlN1LQgoNbelgXc5p
P0050otpzrSnw42i9DCgnCFWVcPrQIdjj5/fmaPy/erF/s2jTnTQOrl6QzHl
4QN0dqcrHRJsLYM9KC+tdxnL9aQDq2zKLov6PR2Pzh1P3kuHf+kfZi0pH9PI
4D3pQwea0s3FrVR9vIgcVXAIogMZ8lPqE1U/vUuSM82D6XCKt6lxL2UewsxA
I5QOE+f7eUiq/mzNYtZORtChhL5/7jlVn/6Dui29UXRQU5WqUKN8MeXt9sZY
OiQHXvh3iqrn9+PMgzcv0kGR75yEPlXve3IfXoPbdEgyXbbDmOoXobU/lU9n
0EFX+/YBZ6qfigiTey+z6XDS4CYngOq3OfEXD1cV0cHK27ErlkXi1GN1TSZV
dPiStcXOk+rfVRLCW4/W0uH9uZ7tQPV3f65dV2kDHRzFreuVZElsSL7rN2yl
g82JnvoKKRI3reXO6fXRYXs5e3cG9T45RCpF+w3SQW/X1UhbERLLh3oJ53yh
w9iR2X+DNBLvyxuQ1Zqg8suPDEWFSDwvMW6gwicCuslm9vMLBDbq4dstrS0C
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
       "]]}, 
     {RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
+x/5zjCS
       "]]}, 
     {RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{TemplateBox[{"\"mean \"", 
         StyleBox["\"x\"", Italic, StripOnInput -> False]}, "RowDefault"],
       TemplateBox[{"\"mean \"", 
         StyleBox["\"y\"", Italic, StripOnInput -> False]}, "RowDefault"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.21832118518518517`, 0.3003134814814815, 
                    0.42062103703703707`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    
                    "RGBColor[0.32748177777777776, 0.4504702222222222, \
0.6309315555555556]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5219093333333333, 0.36209837037037035`, 
                    0.08417837037037039], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.782864, 0.5431475555555555, \
0.12626755555555558]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.19103103703703703`, 0.26277429629629634`, 
                    0.36804340740740743`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2865465555555555, 0.39416144444444445, \
0.5520651111111111]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.45667066666666667`, 0.31683607407407405`, 
                    0.07365607407407408], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.685006, 0.47525411111111104, \
0.11048411111111112]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1637408888888889, 0.22523511111111114`, 
                    0.31546577777777784`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.24561133333333335, 0.3378526666666667, \
0.4731986666666667]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.391432, 0.2715737777777778, 0.06313377777777779], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.587148, 0.40736066666666665, \
0.09470066666666668]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.65, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Beta]\"", TraditionalForm], 
     FormBox["\"mean\"", TraditionalForm]},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Epilog->{
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["1", "8"], StripOnInput -> False], TraditionalForm], 
      NCache[{1.1707963267948966`, 
        Complex[0.8522374025897782, 0.]}, {1.1707963267948966`, 
       0.8522374025897782}], Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["1", "2"], StripOnInput -> False], TraditionalForm], 
      NCache[{1.4707963267948965`, 
        Complex[0.7014979976940614, 0.]}, {1.4707963267948965`, 
       0.7014979976940614}], Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox["1", StripOnInput -> False], TraditionalForm], 
      NCache[{1.7707963267948965`, 
        Complex[0.41595317446024377`, 0.]}, {1.7707963267948965`, 
       0.41595317446024377`}], Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["3", "2"], StripOnInput -> False], TraditionalForm], 
      NCache[{2.0707963267948966`, 
        Complex[0.15035341570652722`, 0.]}, {2.0707963267948966`, 
       0.15035341570652722`}], Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{30, 6}, {3, 20}},
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {
       NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
       FormBox[
        FractionBox["\[Pi]", "2"], TraditionalForm]}, {
       NCache[Pi, 3.141592653589793], 
       FormBox["\[Pi]", TraditionalForm]}, {
       NCache[Rational[3, 2] Pi, 4.71238898038469], 
       FormBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
       NCache[2 Pi, 6.283185307179586], 
       FormBox[
        RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Line[CompressedData["
1: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
n69ZwQa7+eyJHsoaBo92/VnJhv//f+F/Apv+8A==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Line[CompressedData["
1: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
N6eO8Jr/AelKdow=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]], 
        Line[CompressedData["
1:eJw12Wk0Vd/fAHBDrntNyXSvQoZCkkqiEvubpKifkFJJKlOSCpFE5qlkSkqp
KBlCJTRIbYpEEiIU4d57doVEiUJ5zv/F8+qszzpnnbX3/g7n7LXVDhy1cxMS
EBCIFRQQ+N9VGIs18VaGm8bObPaJSSJIVUFVU+W8MyoN97ofSftXT7J1V+pR
tCF90v8Ube9OZu2cOyeQk+nUE2/afevquQ9SQ5FOy7Go3bQL2s0F7jyJRN+m
nN+uo31AbGGSwJ1YNFbdlKlBWwmJqGzLOosygmuGZhIJavejim6lJiGLj5b4
Pe2NbVzl4OcpyJN3UC6fds6wndutJ+dR4IjukB9tAdaLoqayC2i09IbFGtpO
GivGJoovIuuVnRpT5wiqMLlprJaXgVit3ZEPaCvslI20yrqC0k2q3Q/Tbk74
Oedq6nX0aNq3vC6BoPR3Jbq82iw04npQzZt2TZ9n84nn2Ui/9py0JG21qS52
9pOb6NfGusC1ZwmyYaY+WfkoB2npSf14fYag0/JWzg1lt1Dl+YHh7bQ/LK3I
/Vmch0zlOv12xRPENPG1irudj7SzNadb4wgystIZVsorQHtSopkbaae5Xl5p
kVWIdPX+FavEEvRfRlDNpdS7aJ78l6UJUQSZblMsS994DwmpPuvuiqTXa9cv
kf7ae2jQ5YOUOm1hj+IC/+claG9XhvCNcIL2hSuPXntSikx+HTbYd5qgidg/
Zl9Xl6HCoZvSESEEJSa2p614VIb8rIr8rgUTVHnl3KpXZeXopar025dBBCk+
+Bs6WvwQuavG9rcHEHSvsqvFWPcR0uq9Mfnan6BNL8o1Ym4/Qvo+xzIrjxMU
0OxdNzfvMXJK1Dl1zpeg1oEeKfOsJ2jiWl7RN2+CEuY/u5qeilH9SJxqvgtB
Fq+vLK+SrEKOH/gj2gcIehmzU26lXRW6ds5s9819BNX9belS+ViFRvuf/4ly
IujVYI3rj6Fq9KA8KHBqB0ENdbeDMqRr0L8Sbm/5JoKsIj2cpLbXoISzFwOb
Lej7pgsgMqMGRUWr3uebE/S6/KqIt3otmr2Nx5oEghpvJieDwUs0kim4p3MV
QW9CA3I/O7xCy+zWz3bVIsjaeEX8nsxXqP3pginOQoKaxr97tfS9QikLQ1Pq
1Gl7ey5/4lmPevM2Vs1Roe24pzLxVAM6KqmzerccnV9GZq0rrzeimylGhpUz
FBqYYMys82tGb6QMiupbKDSj8V+N0flmVI3in39topCczfn4JaXN6Cl1/eCs
Rgqh/Plyij+b0YzXuPuilxRK27lq0YhvC/I1fQ/6FRQyfey57ZpvK0r5g2Qg
m0IpQY15kz5t6HBtwGNbLwrl5sp4j6S0ofyo7ZtqPShU2bpTn5S0obVOd8JW
uFKI6FCVLaNtqEzPeXRmD4XWfPzbku/TjsLO/x3caU0hvvHS6R0+79GbZ/Fy
EssotOpvik3psU50/em8wZDvfLQm+NBFZnInelVYX+g0yEfGU2afnO52ok71
roOrPvOR6Z+fXszhTqS6h9396RMfrf+1PdbJqwu9Flj64vsbPrL+pvhM1P0D
qinMD1Qv5CO3nuzFexy70RebVaR1Px/Vf9oZKaTRh5pmFrdfq+KhHY2r5AUN
+hCfShJvreAh/mNO3ox5Hxr66VkyU8ZDAhc6G6bd+9Ajf1k7qwIeWrV5p8zE
7T7EXHdJ/moKD+U+dMge1O9HVZ0Hldfs56Go5B24zYyLzOWPrts7zUVgZj+V
e4CPNG/WupWpc9HuY5Yj5bu+IO6utHfRO/rQMzWdiKpbQ0iw+WLpZqNuZH9J
52bPkRF0TkBV+pFDB5on8nR9svsPpNwzVsk60opiV9Ter4obQ95BZWOP0+rR
ho1W+3JjxpF7afA7f4unqDZ+TDMq6DeKOpT8QyviKho4J1fZe2kStY75tgqE
3sP7T5QkjaROI91dDudjzF7gEPWa5aEP/6FFYoYOwt1NWO9fyLiQpwC4OYgX
jnxow3VOO3+qugrCs30RbncvduHl17w7Qo4LgctTwZ4Nmz9hc9vq3eW+wlAz
z9rtmWI/TjvrZSB8QhjclDc9zVXrx7xaeSnbU8LgsbZx/plF/ThizaHqoUhh
yNSym1q3uh9Xa8hqL7ggDKikqtF/Zz82HXf9lfpQGCKPWfYPXujHq64wk49N
C8P3K6N7hSS5eDG1tXZxzCy45BwmfGCQizs9dZPczswCvv7DNT2jXBwzzNx1
PXEWWPyr0t72m4v7JqqHZC7Ogu9sRfWlIjycJmYgN5k3C0L2YYc8FR6eXspx
eVU/CxxGeGYXbXi4KahPwE1SBM7Kzhf1vMfDp2YqG67NEYHAktMPjR7wsHZU
RlqnvAhcNv/yWaCShyPO2WlvUREByWduzyPqeNgoq2briqUi8GCj0XLzTzyc
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
GxdsnlJThP8/X/g/slL/7Q==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`]], 
        Line[CompressedData["
1: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
SeLBKE6PBJMLd96WpZ0j5hEzcLyymAu3lsQmhxHTrsZU8yznQjF9vUk4sYoY
Sy9QiwuLlhclhhLrXt2QObqWC17ZMzf9iI3Fommem7jwo1Bp8yHinVc7gylT
LggvUkzaRuwutq5/nw0XFl6du6NNfOZq5J5vDlzIPVFrKUZ8Wayjzm4fF9r+
XMnqJPElXtXVbzjChTV8FnlFxNliV7JNvblQdkLWNYD4+dXv0jiAC7/z+F4Z
ENeKrbmkH8qFeHGl2gmy3l+vhg0/juQCb2pQSD5xj9i3fZrxXPiyfg1rDzH3
6qqmrDtcYJ6xGxUgFhW/aKh0jwtiL6aLcsh+Lopue3grjwtu2ibyW4hXimvK
04u5MFljrt1O8mNjdMiVqHIuTK9TGzlG7BKt4X6+kQvdtkPBfiS/PMTPf5xo
5cK8pbLlKMm/89EtyLuDC+yiJ6+PEadGByoeHCTr13Gn1ITkb1d0Q5sFfRqG
apSb80g9jIirmFbKT0NP5T+RCVIvfNd8n25cOg17z+aM/Ee8/JpS3Gq9aeDr
U20pJPV2+Jq3pfSuaXjRwayzDqHAT6L6+bW9ZNxqf4h7MAVXrsmrCR2ehica
2ylfUs+51yr5pv2mwbNU/t1lUu9916TLfyVNw81KzR/O/hTE8R789y59GlLU
Rg3t/ChY7/vY+FHuNJy6b65iSvrJRRebugul07BfN913Eek38poRbSpfp+GR
SYL9pZMkH1Pb5EU7pwG3wbftnmT/Gap7R35PQ+qnPJasBwWPuG9YlZMkHuWp
qIRjFFjUzgwdXDgD7iEMLRt3CgY2bl1rvWQGbp87+nuA9MOEoiT/teozsKRF
SDNqPwWdievmBTbMQITzBetHpJ/6H/ISy3aYgaaktXwvnUi+8LFUe27OgErK
76v1VhRY++kca06ZgeaLNyeZpL+P9Ibkl96fgZCPqcOOFhQYtSjoRT4j8zf5
xX8g50NrmgNa2ToDKf4eN85vIufZpvrdHtKzsCTJaurzKtK//B/HDsXPwq8W
68ozohRIVv5XfzF5FiSz7pj9JOdbmXilgEzWLKjXHQ0AQQoYmR/P/vdsFprK
In4P/SP3g4bRgxe/zMJY2HYR4XEOaCxdry+tMAeWxnniwuS8HWwo69xwfw4S
mT3z9nkcuLvQZHF9wRzUVBfWj+VwwOLA+10uJXOwpzxoX0wWB9Inv9dfeDcH
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
PyW6z6DXCetsfGA1oyKP+k4YnA/aElDxP3L0eU0=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]], 
        Line[CompressedData["
1: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
s1FZQeU02DeW19dO2XeFztIdz2nQen3dmxh1EhdeDrbWr6FBmdLA4nYNEreu
ZryVrafB5/nr6Yc0SfxztHLH3yYaxKykpQpqkXjlRlpQWxsNgr9coKlrk3jX
dNHM804aDLz1iLtHOSp7W8w9Dg1Ep3bHqS8icQPP3evH+2iwhO+ymLAOib8W
22juGaTy0RCTcoSymOdIod0XGowmWN18T9lINMl8xRgNeNKztYx0SbztuWmt
8g+qHj5kG8ZRPu5HbhaapMF/L/QquijflI9mf5+hQZ2+SrOqHolfvtLZx/1D
g5InR9z2Uu4LbhmrXaCBxVFZ/3TK/OohYYX8dPjNNzPXQVnnHYPvmjAdzK5J
SPAtJrF9xMuLp0Xp8HHEIUufcpD+foa/JB0ubS5+uplyEoeW5SxLh4up2g4H
KJfFFRtYMejAXfzAJ5Iy28Tl6SIlOqjyrv53gfLcp99rJdXo8Op2NyOVskry
3ZZZTep6seOPqP0DBrR+xycdOiz/rvguibL3t5H+N/p02HS4IeAs5fhbSQfL
Demwy/bkuaOUC+zMZu4Y08GpYrWuB+V3M2T0OTM6NGXJbrCiPHE/WixkFR2k
dwt8UaAs56J73WMNHZb2MUVGqXjN+d5qrLemQ/M9j6JnlN1LQgoNbelgXc5p
P0050otpzrSnw42i9DCgnCFWVcPrQIdjj5/fmaPy/erF/s2jTnTQOrl6QzHl
4QN0dqcrHRJsLYM9KC+tdxnL9aQDq2zKLov6PR2Pzh1P3kuHf+kfZi0pH9PI
4D3pQwea0s3FrVR9vIgcVXAIogMZ8lPqE1U/vUuSM82D6XCKt6lxL2UewsxA
I5QOE+f7eUiq/mzNYtZORtChhL5/7jlVn/6Dui29UXRQU5WqUKN8MeXt9sZY
OiQHXvh3iqrn9+PMgzcv0kGR75yEPlXve3IfXoPbdEgyXbbDmOoXobU/lU9n
0EFX+/YBZ6qfigiTey+z6XDS4CYngOq3OfEXD1cV0cHK27ErlkXi1GN1TSZV
dPiStcXOk+rfVRLCW4/W0uH9uZ7tQPV3f65dV2kDHRzFreuVZElsSL7rN2yl
g82JnvoKKRI3reXO6fXRYXs5e3cG9T45RCpF+w3SQW/X1UhbERLLh3oJ53yh
w9iR2X+DNBLvyxuQ1Zqg8suPDEWFSDwvMW6gwicCuslm9vMLBDbq4dstrS0C
04QiEfyTwN2h64e26onAn63RPnd+EDhS8lxgooEI2PbWe7waJ/Bra/FwUVMR
wCZ8F6ZHCOydz0gWtBWBqOkgfr4B6n183ODVbz8RWOiBnqJ2Aq+ROmxncVAE
+nQ+uu1tJfBQfmnr8SMiYBX9xE78LYGNe816foWLgGxa6XmHJgK3rFs79S1B
BHZdfHb7eBW1vklv1/30QATCpGbveOYTODhbnsl5KAKRffr2TTkE/mTeRXv3
WAS6hwSCDLKp9c7LZeR5hQhkzq5R7r9D4IRC56LkNyLwr4SxYv4KgWU2bl2x
dlQEWjf+5f6OILD26Y0oQ18UTPhcVZjU+nhVhmZ0zVAULOhxrMe2BBbKaVS/
aCwKp3aMZm9YR+AvLbZ84atE4VJZ8UFPKwIXKa6v32ovCrkGk2xLQwKbPVm7
acFfFMzCYvrrqPXa7tuqHV75orD1qOMKiXYuXnPw+rr8IlGI7Pl6JaaFi41H
fy2bLBWFCP7xuO+NXKz4tZB2/oUoOHpGLn5cxcVjg6ovyt9Q499Ui+t/wMVJ
PXwq4uOioPWvoJWM5eLuN68/VRiLQdH0Qrbjci5+ba/bKmQuBtZKfnRiCRfj
5jMVTpZi4N5ywnCXDhfnNVqlfl4nBuMCf6vtlbj4xKvi9bKuYjDfYmrSLsDF
KhUpeQFh1HhXkqtjuznYu8D9EKtSDIZbDWxTjnHwk6Nf7R2rxaDbtuelyyEO
pq0O142vE4PXJ78HSR3g4MLWq32TLWIg+9781FEPDp6cbHNu6xUDlk140pe1
HHwGbTCPXxAD51xl0SRxDs7qXMEzZS0Objrlpv132bj/n1hKW7M4NNh22/8u
6cb/apjcqrfiUMCqvpGR340Vz2qrF7WLg4K08CHrrG7sImpVnMAVh/tGb8pD
r3TjBkbga+uv4nDZccvYzdBuXGDUzFdOk4D0xUnn+y268bF9Z4+mbZAAuVml
kwep72ehhr8u++olwMrsAHuwpBMvBC1eMO6WBP0084i7SzqwY52d9uEAKTh1
cLpvg3grdlLZ2Gr9WQrSs2R+Fvk248rhgW/lh6SB9+3p+lhOLT75VXWXwjdp
OL/pw0+7nmf43q6Z1QrHZeDtqSNi+yXvY3X64cP80zJgfPL5tJrZOeTAa5R7
6KgsjH00dWxbX4KG/BOd//sjC0vO2+p+9ahCbaIXtwSfkIPkYYmga2fq0SJV
3UqagDxcyP+mWsDTgvQjRJerXpAH4aULQlM/2lCs7OUpdboC2KwymnENfI82
KJUsfZWsAHJuh/ZN1nehzcqtgTVXFGC5aZUp/V0XclQZz8dXFWCxhPJdZncX
clMz0KlMU4C5Bl4D3eEuFKCVp1qeqQAyO2um+YS60cUlGZK5pQow8PDTtcc2
3ajDMmnifLsCWBj+PD36sht57TpS7izNgBt106EOd9koOSZv1FaWAR/KvPw4
99moLq9Pw1KeAeI2JmW7CtlIf8oxUYvFAA/LiZ0uz9lo5tJyv0l1BjgJRBYs
dLBREv7JvGbEgCiRTJH1ghxUqxkawd3KgNKXb72jfDhoamPRo7dODFDz/EY4
B3KQ3uGhLzXbGDBh6xGpFsxBiRWurgU7GBC69eba3AgO8nAxMzy5mwHpl1Zn
HrnCQZNnZz4qH2ZArlxw4lfMQTpf/1u3J5EBZqskpwLkuEjpbNTMqSTqfPC+
vHEWF0lpxD9IT2FAo3CjQ6AaF/12S5UlrzHgvfrtQ1up/XhLU/GA610qno43
rbWIi0LyBs5sKmHA0r3Hm138uajKb0udWQcD7o2lXlR6ykWP+V3CXTsZYKFs
1/Kigovy7robHOtmQEf47Xbnai5KZvullhIMeBD6WzeomYu8N8R4GwwwYHnU
6Ed7kotEdJ8KaE4ygOu9wzf/LxftGFZfL67AhKyRibMjVgQyXvApFmYy4bjg
JnIPEEiM+YDBp8iE1Eih+rZ1BKq2Mx2ZVmEC3c7OOd2eQHpFdpf7FjFBoYBt
9XUHgWaPhnAfmzKp/ZTYnU3BBOq4+NS62JwJYlxljvsxAhXen3+Qt5IJglxO
2v4wAu1hx51KX82EiXav0r2RBGpedUsrfj0TjIyQslQCgW7y1gW5uzLBQy1g
neldAh1TpLNddjDhXHJOVk8mgRxWOMDWnUyIGgo6FZlNID4fjoyNJxPmzovl
P8gnUGDT2NOlPkwIjRh/9vwxgawuy/PxhjLhi1Wu5e0GAinkuQf+Oc6ELd2j
LLKJQD+q73ZOhTPBdGB5oOwbAmX/XJw7EsGEUzPXvY+0UvnYvmZzZywT7I3+
3iPZBOpV9ruWm8oEXtnfA8c/E2j7IquhnmvU/E9vHo35SqC2pdImMmnUfPVG
q+JGCVS7pqI9Ip3K14frTaHfCZS3R1LcOYcJMlcVXSemCaThP+gRn8eEFAPN
4opZKv7g5wWVBVQ+fdrfRc4R6FLM/o26D5lgFyng8/UvgUKyn56Zf8oEbSH3
bk8BEo0WXuxY/oIJQZzFXsOCJPIu36vhV8mEJQJ38n2FSbSjQRS3VzOBeygz
wUGERFZfds/lNDNhYPfA3gpJEj35YWLX84YJZy2vzPFKk2jZb/oN6XdUPt/E
bgMZEmmKlJlGdDDBOvyBTbYciYQNaMFOJBMi3tEU6SwSRZn04rheJgSee1Ig
rkiiOatHEpUfmRBpPjhLVyLR2JZdhTqDTHD3SWz5qkwi3+3L/3gMM+FRbrjT
WxUSffQSsk/+woQw36qUPFUSdRwu+fxnjAm+qdvsbNVJtCn8rNny79T937Sr
aBokqotyP+s7QdXrNdfxWspPkwW02qeYoOg9eVpVi0RGN7nBQrNMkL4124cp
F2QVV1vOMUF3w7l5N20S3X7s5pXzjwltvcn7QhaRSL5yaRHJw4Kjgk8Kf1JO
rOObl+JnQbjyi5IAHRLR3rLtbQVZsPjyf4cIytFdhWknhVmwd2vH0FpdKt7e
6C8ldBZkdmYrZFI+NrzdfFiUBRLKnTyzlL+NL4lTkmBBVN76bFs9Kv4Zni5H
KRYkxPTzXKLct9ClFSfDglMWKQpvKO+kPQipkGNB6AebIZ7FVD6komp+KLDA
XeLrQUPKm1muUjosFnz+fKRoG+V6Df3dHkosKJBqzzlCeY3+QlGSCgtkynh2
Ut/36Jlx53y9Ggv2n/n9Kpnycsv8TX80WPD//y/8D2y5ty0=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`]], 
        Line[CompressedData["
1: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
+x/5zjCS
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Beta]", "mean"}, 
      AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, Epilog -> {
        Text[
         Style[
          Rational[1, 8]], {1.1707963267948966`, 
          Complex[0.8522374025897782, 0.]}, Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[
          Rational[1, 2]], {1.4707963267948965`, 
          Complex[0.7014979976940614, 0.]}, Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[1], {1.7707963267948965`, 
          Complex[0.41595317446024377`, 0.]}, Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[
          Rational[3, 2]], {2.0707963267948966`, 
          Complex[0.15035341570652722`, 0.]}, Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {{0, Rational[1, 2] Pi, Pi, Rational[3, 2] Pi, 2 Pi}, 
        Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668]]}, {
        Row[{"mean ", 
          Style["x", Italic]}], 
        Row[{"mean ", 
          Style["y", Italic]}]}, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {0.65, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6627400531507053`*^9, {3.6627401892710657`*^9, 3.6627402334281178`*^9}, {
   3.662740264992367*^9, 3.66274038738064*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"0.1", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
          FractionBox[
           RowBox[{"i", "-", "1"}], 
           RowBox[{
            RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{"Covxy", "[", 
            RowBox[{"\[Beta]", ",", 
             RowBox[{
             "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "]"}]}], "}"}], "]"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.662734775662026*^9, 3.6627347820781603`*^9}, {
   3.662740112301833*^9, 3.6627401136719522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gl6dt82NDCbw/nXGn0beiqCzl0pKPcMJHOyXfNrlvQjKvZ52bymWwBvUDz0q
+CSCEo4+PR/PIvDr7u8DP7+SepEvUJl4AvPo7nH0HhZBw7eNKA1JBE4dHc/G
4yLIZ+kd4/cjAu+9y5ymzIggiWlbQ+E0gnzPD14P+y2C2styNww9ITB3Xqgv
m5+Kfr9/usmimJxvu6W6S5iKHNzXP8wpIecLf+JeJU5Fxr5/14+XkvMdN4Wn
yJLj4qXmNExgRZmOpiF5KpqsHZ7nrCJwTZ03VWUdFc3qcDxqryYw1/pmZt4m
KgrPblpe/5rAj9rdP8yqU5HHWOnTtDoCG/ivltXaTkX9V/hshRoI3KdRb+Ol
TUUV/Kv5jzcS2L/nSlKFHhXZq4Y8DX5DxiNKpo9Dn4rOLw8b//97aLVeteLe
fVQ0d2LFKPMtge3GHR1CDlGRZW3DjWvNBKbck8hqPEJF6322cmq1kPYPlk8I
m1HRJTd7nx6SDebPqZtaUtF90wczTq2k/cfCrkxrKvJygeM9JPsfK372wZaK
qvrq8ne8I+1znZ6XtaeS9432ZVeSq/NX6Ng6UNGr3FX6zP9//zyT5/3wMhU5
vfZzu0cyJ/UEHnChoo78nwlBJCdXcFKUr1MRsYr53IJk5JS197InFRU7M2oF
SO6VNQ/J9aais9X76lJJ+34Nfxu++1FR1KRCxTqS13imCmkGUdEN7xfpIf//
nrvhiLFnGBUt5leEtJL+nun8GVsWSUWNwUunlkg9OAITO5ZiqehWhuMmMZKT
tx6QMmBTUYQn9TsfqR/6Nn0i6B4ViQnK5A3+/3to9N2E+kQq8l/fdimdjIff
bv0ewRQq2rQrdfXRetL+5KiCcToVPXCTau8i41l5n3GO8YSKJhLbgg7XkvYW
+keln1FR6nGLmU9kPiSnR6jalFCRbgdX9h8yX5ClpktSORUlStU7L1eQ6xcG
z62vpSL9d3niJS/I9e3UtS41UJGUQf7vy8/J9UU/3sh+S+bbJd9p7iICL/+3
cXnreypaeTpSdugpgR3pxtmbP1HRc9ucq6dyCNzx8voJ5a9UtGHLUeuKLAJn
USsLVw1RkfN85NiOxwQ+lm95ke8XFfWK3rAQI+vn5QlvGtcfcnz/leC3ZH1t
pDyq/vePin5k7jzjyiCwb6Z71AJFFL3kTpFzv0PO/1M1MiUgilZae0te8CZw
WPMxmBASRUuB1CkHT3K9R8OsURFRJH0xItLsOrmeofCeAXFR9MA1UK3vMoGX
7ls96JIVRRsadVzGTxA4Y9e0aY2KKOLfdnQycwuBu8X8M6pURdGhD5F6OqoE
Fh+SXH6pJopmk2QfFG4g8K0onewXW0WRsrR4xlk5Apv1BPE+1RFF/3moBD7h
IvCi38qy+MOi6P37NObfFjbeYvFUjDASRbss7UtXN7DxhY0GF5lHRdHgcT/z
zdVs/O6dAy3aTBTB8tW/3M/YOG1toUugtSiaN988ksZmY5OaQ4oujqIodjgm
p+w4Gz+r+Olq5ySKCoMSDqQas7H084dVFs6i6A1vYabHATbuzVyw1XMl7Ttv
Hvy6g42vRGfG83uJouameak8SbL/W/NTU8NEkf8gkXKuiYVbZ+oXPmaIon3M
Wpljqiy8fez6waYsUWRzQu1AmgIL3+1fQ+BsUXTe8v3JAToLn3nvuT0tTxQJ
mvTbK3Ky8EyZssu1ElHEyqWLF3UwsWhI6IBwvSji41q5e60nE5uuOthiMCyK
DlMk7bzy4rB7RPX9M6OiaKq9dz96FIcT/upd9BkXRUMTVuozcXF4pGsLZ+k0
+ftAX0MRjzjsw5bbtuU3yctXPPbpxeFs6jR7Nb8YKlZpWpdbzcC8FLbtoooY
ii3L+PoNx+Lyof7JImcxpJr2PLhpOQrXtSW4PL0ihtYoh3zn/RKF215afM9w
FUN6o/8dWFcShUfYdXP33cVQ9/MoRLkShSUPPPl720cMeRAfDE59jcRO6a78
R6PE0IXZPWVpRRF45UXO9UM5Yuh9Y+abYONwfHNU3oY+KYY+hI0av9EOwik2
87vo7uKobdVauttZV7yG38WF65c4+ka9nMO30wKOcmqkO1+TQIvCb6Xva3nD
4KUosxt/JRBV0cGgIjoMnM54bXX7J4GOuhY8jnkeBnOWF8SvLksg3kXpssM9
YcC9d3fbRS5JxO/087SrWjislZ8ytRKURKG3Ek3vvAmHM21HTLXkJJHI+6AN
1RwR8ElH2OSnjiRKWrtwV9cyCuy2LKh/15NEXts9bt33ioIxpUHq5G5JxF3M
PtedGAULkhUtAwaSSG1pXTbvcBRITzsZdxyWREeVv6Fxt2iwSGk6WmgtiVIC
nsxO7Y+BVsGII1e9JBGn/hObCrNYkPHc/4TwlkT7fQMG952LBbsBDv6XPpJI
0+qDRalbLPwsd6sRCJBET8/YJFy4Gwuyzqd1U+9IouML/bGNX2LhfOvWjR8S
JNHtuoG53LMM+MPs4t6FJdGT6FiD8yfjYC8n086+ShLxrNPx2OcYB5H/Ha0M
eyWJaPUdetQbcbBm/6ub7+vI/Zcm7zjNjoN989k/XFol0UJ8uNB0SxzEnPDr
ffSN3N+esg+YfP+sl1cq5+OmoblpQqZEgAWJT/+Ireelobj7Bxuu0VlA1292
0OejoUOnPBel1rKA95ybhJcQDe1KYLyQ2cmCocxXjuOSNPTDfbUK5wUWpGme
kWleTyP7WxPdoowF8nXbXMaUaEipylAxrpYFbKsVtbwqNJTyBn6UtJDvu5u5
V0CNhqJaHR+V9bPAoWqxLm8HDVmwueQTBNigfCTePe4ADYnOXNhcac6G5K9O
TU8P0dD6MvctbjZskL6C1jYZ0pDa/ukjYufZwBc3/JbbhIYOrPycueTGhpGP
muvdrWhoSWt+OJvNhsxzbe1Wl2hIjlb1xLidDWt/Pd7odpmGuD89n7v6iQ33
Qm74xv5HQ23/ahu8vrEhPGvNpsarNBRLn/oN02xwnHH21/WioVcVQgTBT4CK
t+AW+Ts0tEVdLNJtJwGh4av06JE0pK7JGkjcTcDgXfUDItGknv3Lz/L3EJBc
ZH5qiUFD+YJz2XFHCKBN3w/7eo+GKIuCbgfPEOD6L4f5PoGG9nF+E6k4R5D5
VZnUnEhD6R5PFmUvERCuPFD08hEN/Rs6+IpxlQAOO9W+xCwa0j0RfefqbQJs
r+yeZGfT0P3S0+YaQQSU+Zj8jsqlISfvAuOPoQS4378u4ltAQxer6z/0RxPQ
kRks4/GMht6cKrE5EEfAlpK7ii7FNPQ0yp+PySZgoqNc53QpDe049aNuJIGA
w/3N+46X01C8llvnTBIB6d97TYxf0tDUhsh/3x4RYCfC4wDVNDRSqcLwzSDg
w4EjcasbaahS7qV/egEB2y1PJ0o10RBmTMv8fkYA49zVTGozDZ3vPfZ8y3MC
jG6z8PI7GrpF27J4uoyArOj0xvl2GlpZei/pWAUBKxJfdE530lBS4Sr9rZiA
6tLu8Z4uGjp+4rBHRjUBaxqmf334TEM6ivF8+jUE3PrASWntJvUINIytriXg
06CEcH0PDeV0jlM31xGgPbdeuvIbDdW/lg3wqyeATdFeV9JPQw020aPlDQTM
ih5WyxukoYOzdIO+RgJMVtvszBimode7WHdm3hCQu9l5b/Io6c9B7trhJgKE
9PyM747T0BOv65N1bwm4dJhhHTNJQz1MIe7YZgJeW6WeD52mIcdn/Hx7WghQ
dCi+4vedhmrM8O9ukm+71d/0nKWhoP1E59lWAr4GfAq+8pOGxl6JJTaTrMeY
iL04T/p7qtZU8R0B8clLCWcWaKic6/SMHcm/ckUzrP7SUD/voxvhJB+rWFto
8o+G8mgXJ8n7IOS/2f7y4DINGex+aEjeF0Hk0/4GxElH3FPmTHeSnUasOrS5
6Cjle0KdPskNvxx7NHjoaPH608GfpP0NPLfGlFfQUQ+lc4pBcqBE9M81/HT0
NvC/fmmSUwgXnz2CdPSniMvLi/SnWs5kxQVhOvpwYNV0Jen/tySNmFAqHf1O
jdwzQerDoSgm80SMjgQUDngukvqtzvj+8K0EHT2bt476Tuq7W7VNZYZGR86G
C8FvSP1P5RUUikvTkbziVftwMj7e2+P0NGXp6MF/GuvVyPjdL7lWe3wlHUn/
evW2+DUBpXrHjnrJ09Fepw+2imT8f++lncFr6ahuW51+bhUBUg0/R74p0pHv
NhbRSObTjiPvr3Ir0ZH6jdfdb8h8c7MgAg5toqOdrmF7b70ggNnlIeS0mY5c
/LgcN5P5+uyUFStKnY4KA/PDqsl8/nFeJr19Gx3NTjRV339KgNjYgvovTTp6
vSTd15NNgIbzpxJpbVLfk5Yr+LMIcHa/33hKj45ehD+7IpBKQOSfm+Z+u+no
1Y/Msr5kArJ9bL48QnRU0LBTNvkBAWPBq6aG99KR0O11Co1kfV4gksRcj9DR
HePc2s8hBATJ+d1jGtNRWLD6yu4AAlKTzqx7bkpH97ts0l/5EtCXrqC5aEFH
ZXfCnMlDHmxLUqyCbekoxMf98ALZb27pBX7LOEPGU7y5RZHsRwmV5xzf2NGR
xc6gAs2TZP3Ur/cWdaCjGmZO2gpTAiy70pPuudCRderrKSddUq9TocoVV+mI
Z98GrhpNUq9vF/N7rtHR4dXqjzk0CGgb3fhK0ZOOHq9IylZRJODonydDuX50
RIndFWogSMABubzNr2LpKO88R0tIBxuMVrZcroqjoyZi08Lzt2wwWTWViVl0
NDT98Na712ywWq26oTyejpT5Z/IqS8j+vC5DvughHR1V8wqOuc+GiE3J1PR8
Ovqk+PXsInlexKjiI48L6UirX+Bu7TE2sDZ/vZNSRMZvJjnZ04gNieor+ZJf
kPnLkD6coMuGp9vucsRXkfHiujr2SZoNbbox38Pf0VFClIXALvL8eq/3VD2s
ndSrT+t6Onm+fd7V/F9IJ+n/nbTdi+T5NwBCYwFddOSgny53PoMFP/eE9nl/
o6OFOyf4NP1YIG3k1+78nY7aVJ0C3m9iga3NlSIzMSkU2sJYcfkaE2L9M8b3
S0ih09jT+poDE2oyehV0aVIoUPHptosnmaDy0yRqnYwUMpKWS5faw4T5yC0O
c2uk0BNjm49RYkyIwT+k2RpS6OOLjR0jWXFQvdbNu8tYCnHduWT/qIUBPw/m
FLw1lUIFAauVzKsYoOwyOFJlLoUat1K5fxQwIKrMwiLruBRyEIxDf1gMOHls
h9rN01LoikL6wR0nGTAXNN+z0kUKHdLimrnYFwsbRm/sORMlhWw3b+iUH4gB
uSC/eZ8YKVQnUWp3sC0GRBVCnjxgSCE3JC5wujIGFqyYEp/ZUij/ccov84QY
aKrP7bdIkkJlNrO+tuYx4JrRH2CYJ4WSjS68EPWOhpcOR2p2tEmhG/s9ToUI
RcLxoTX7hOnSyGbomoFbcwh0r3RgpzOlUfFE8mHj+RtguV5v8AtbGnErnKDx
M25A62ax7eLx0uhE6kJhiuoNqN5d9s77gTQ6UB568tZZT8g4QxU2S5NGR/Q4
+1oa3ME19XnA4nNpJLtPIM+WdQ1WqPJdNf0sjX7vL89W0HIEv+3dOLhbGuUb
Z+rmXrgEf/QKRMp7pJHqT6t2OfZFmDhik71hQBqF7dtGT5y7AG0uecN/J6TR
i4C5Kus8e0gotLJNW5JGLJ7nhUoHrIFWvjnnM4cMCts2/cEkxQqiaiiLolwy
KOWHxOzJZUu43Zkdf3OFDNIYkRFZ89wcLsxzdJqIyqDTfTFl6oaHoXe5c12w
uAxa+Y/PR4xyAE7wPXEtk5RBGRa07R9K9oCRjIXoBhkZ5K6xnbLLSAdqFVRO
n5STQWhz9w6TF9tgt8pyTswqGWTSQK9kG6lAydaOxdrVMmh731eeT0aysEU3
0/CvggyafOuXOJW4c/f/ADMDBpw=
     "]]}, 
   {RGBColor[0.4697671111111111, 0.41833244444444445`, 0.623423111111111], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
qvWg
     "]]}, 
   {RGBColor[0.4110462222222222, 0.36604088888888886`, 0.5454952222222222], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/pM44rYLtmikHZlVlkNckaL//39X63/lkSEw
     "]]}, 
   {RGBColor[0.3523253333333333, 0.3137493333333333, 0.46756733333333333`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"covariance\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    RGBColor[0.368417, 0.506779, 0.709798], 
    PointBox[
     NCache[{Rational[1, 4] Pi, Complex[0, 
         Rational[5, 256]] Rational[15, 2]^Rational[1, 2]/(Complex[0, 
          Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
         Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]], 
    RGBColor[0.528488, 0.470624, 0.701351], 
    PointBox[
     NCache[{Rational[1, 4] Pi, Rational[1, 2] (Complex[0, 
           Rational[-1, 12]] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]])^(-1) (Complex[0, 
             Rational[777, 2048]] 15^Rational[1, 2] - 3 ArcCosh[
            Rational[7, 8]]) + Rational[1, 36] (Complex[0, 
              Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
             Rational[7, 8]])^(-2) (Rational[3375, 16384] + 9 (Complex[0, 
               Rational[-119, 2048]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]]) (Complex[0, 
               Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
              Rational[7, 8]])))}, {
      0.7853981633974483, -0.023260525607782526`}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{30, 6}, {3, 20}},
  ImageSize->220,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.662733259495392*^9, 3.662733301027742*^9, {3.662733347120714*^9, 
   3.662733361847672*^9}, {3.662733417471547*^9, 3.662733421643958*^9}, 
   3.662733521957333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.25", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{
         "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "hv"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "hv"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"0.1", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"\[Beta]", ",", 
             RowBox[{"Covxy", "[", 
              RowBox[{"\[Beta]", ",", 
               RowBox[{
               "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               "]"}]}], "}"}], "]"}]}], "}"}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Varx", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "\[Beta]"}], "=", 
     RowBox[{
      RowBox[{"1", " ", "&"}], " ", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734763726993*^9, 
   3.6627347726223*^9}, {3.662740096621563*^9, 3.662740105088088*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
zPv1PoP/Afon71Q=
     "]]}, 
   {RGBColor[1., 0.733528, 0.10356295000000001`], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1:eJwVmHc81d8fx7lG9r3GvSgZFYmKkqjkfdpUZghfSUYkm5BRUklLSEqEZM/7
+bSRU1KkJZEoe2Rvyf59fv/weD4+97zf57ze4wwFe09TJxoHB8cr6s///3Nh
gS+dmhd0T708c6u050iZPEteSfb2cWj8yLzvsWsznmqONmyM9YTOe3/6du7a
jdt2feh4FnsebFXKAnl3meJ63+78jNhbYHyj55gHssc1NyZEH8SmgOPE2XZ1
XR9skBBUcS+2CGiZjDkDzXB8Q67sQXwshnX3dTi7RWNx/zTv0i7fGhDyl+Gh
bU7DS6sNKrRu14BlbDhjrWkaljC+fXXD4xrATQH123zSMGTLSUhP1IDY9nVC
ymQajrPUXjfq8w0KuB2I1ZseYd2Xp44k+9SC15Ul3RDVdBwT9Clr1rsOxr3b
rjcyMnFmppj7aEwdhOg57Dq7MROX1lpu7iHqgNVz/wftcCbuUeku/TZWBwE/
HVS+R2Ti7b8WvmV710OFRPMep7lM3LVDbd7C+weoL34e1GzLwtoLMcaPvX6C
wNe2I2/v5uDtIa53+aJ/wi8bzpUdRA7eMbe75VgRxW9j9vR+zMG6MxOn+YZ/
QorL4X25Szl4z5T5lWOnG8FR4+RJ2slcbDgkXbbsZBM8Wb2uamhDHnZqfqhq
899v+EoE2Qnm5uOTNkE+RNBvkOQxtvzzOh+7/DJ9yXv/NzyW+12W1ZCPXRu5
DhA/f0PctfGweu4C7FXvZM9r0QwlN1tCOo4V4JDP6xLYxi3AZHBUFwkU4g8t
lhdpq9vgl1cb71XDImzxSZvJuaUNNC6L0087FOGul1JZS3vbYGIFd+G6wCLM
cedn9fzJNvDtzDbVeViEtQ9Zik3ntsE1/rvEk7EinPn86MOBze3w4NNb+sg+
Nt6SoaXRv6cd1Da9OQtGbFweK/mu16wdfO7Zh4ZasnGLe0Nvt387vN05trbc
lY2Za46qtxW3w4oVbgNuUWx8KdoC1+3uAF0j1SCoZWOxc1tNvh/pAI4E3g+O
TWyceprV+c2xA57vvi4R0MHGpft/8H6N6IDwkm2h9uNsPDFvbvihugNUGWGJ
R0QJbH/KvPmVaSeUsJ0u3z1E4FELTc9Sh074zeN6NdKUwOf2MjlL/DrBVyeK
dtKKwPfl6te8iO+Eissmmj0nCfyt3syNbOqE3hDLD7NhBEa7zeYy7bughfef
pQdB4H8sZa2LPl3gfn/V8fJnBCYG5nyOh3eBXY7TAncpgVfdedQvmdYFmtcS
hszfE5ird7wxsr0LZq9sZSg1Ebi09D3TaawLvkapHhxuIbBfzH2TXZzdQM7g
yfROAndt3/1hRr4bnC6bXG0eJPD7mzEvXO26wc4vZ3PwIjV/e6fJ/V7dsHWU
9H1GI7GW1jb11WHd8HlkM62Nl8TZbW1Zv1K6IfPdoekFERJf01C/e7iV+u6a
8d1RlsS7+bi/K490gzetUFRsFYnnfjeI8Cx1g5/ksXMFiiR2izgf8Uq2B1ZV
xtYXriexQeOXMxtteyA0ykPm1zYS8xamEQIePZDTt9trRofEZeH+Qz2hPWC4
1vAnDyLxxvWyTikPeuBftFxj7z4SM867mzGae6DNR9GwwZjEVUd2RQ8O9kA6
d8GE0xESX1Bmfqqa74H6Svu7HeYkHv9WuueCzB8YMkr/mmFN4ro1Qhrj//0B
WX3Pt0ccSHxjptXjy+k/8Dnot7SpE4n3fXmcmxv8ByDsl42uM4mfBfy3yiHx
D6TPiz5scyWxx2E1W8j7A5E2z5Pj3UispMB1f0XJH4hzqr6w3YPEd6tzReua
/gDzz8+xQ94kNk45Z8Du/wMDd2uCX/qQmM/P9OqNWcqe08ZuCT8Sv9ZTeuci
0AtuY0nrbc+QOHDlLMe+5b2QUfDT+I4/idXHP+soqPTC6tYi4+IAEve9fxi4
sK0XTiTTVD8HktjaS3/0qVUvPDaedC0NIrH8RPTyHtdemHCw9MwNJnH3mZ97
WSG9oOEPchdDSJz7T85z/81eUA0oOrs/lMRewc4J/sm9sHfqfegkxVsXC99m
FvVCsuwrlZvnqHiG/R368boXZt60n2ecp+bLpSu1rLYXzhs9CDlHcUTE5d1a
nb3g2+gl30DxYf7Pbs6TvVT/++u6PIzEojck7t7l6YMLVq3/6VH8Q8TmTSWr
D7QeTY/bUZwU82hgem0fqMasUnek2F5igKm8rQ8CTtqIm1KsfHczsjzYB9IC
xUkqFA9LB7lG/tcHNbynPg1R/h4nvYl74dYHI9eK0hIpDpTjx72hfcDrMii3
hWLdNOM+qVt9cFbs7t7n1Hq4Fe+J66f2wUQqiCpSXJ3VuvMs0QcVH6MiQqn1
R6usdckpp/wN7st4TellXuAR2/i9D1bN6XoMU3ouV39Wyt/dBxIxbh28FLeR
Cz3b/vaBYFcjTYDSP1Nzn6jrsn7oeZ9bM03F5/SLGzvuS/VDe9YKgxoqfuo7
6pyq1/WDzq0LZ29T8f37akX07PZ+eLjy4NFdVPxLkUOxyuF+uHZt7k+jL5XP
b3O7rI/1Q0Dalg3HqPwR+rBtW8n5ftDq1Pi92pPEtYcuOAxE90NDCKnv7E7l
35eqmyvS+qEqeZ3vndMkXlV3tCO4oh/cToTRSCqfey1ShPLr+6Hl/W+3VCrf
Cxp7tv7u6YdpbdWks1Q9aLeeua7DPwALJzKODNqSePHEq6duywfgfYto+2Ub
Er/t4m5LUh2ApqGxnQJUPRn2396yYDAAL04ken83I7HTFNH8KnYAatu/sVz0
SawSOLNs+NEACPe7n7HcT+LRWbRZ9ukAkJ7MVxp7SBzCURNxrmEArk8psPKo
+o8VHFYDmUGQEMbWDzaS2DJK09pzwyAcT7vv1q1C4pWioZdSdAdBW07titRa
qj+xhBqX7Abh/aJiL8hR/UNBJfx1xiCMGgk03ab61ezn7e6pzwZBb+LqQX0B
EmsGHbIMqxyEzSLcuf08JM6vdduI+gbhFN1Tf2yewIkXi5rw+iFovv74rkg/
gQO7t2jgx0PwNsx9bdRrAj+J2SebUjEEDrv9lrhLqP1gpwX/+foh0BZ6KOvy
lMDO8QGtutNDcPR58KGJHAJbHCi+XrZ9GC58cRaXjSWwRg50vXozDHzfNu77
aEtgD3Pjrw9qh8EtPyyf35LAuZwnikM7h0FUWOzDFhOq/1uHR+/kGQHF5R7I
ZA+BGYLvdF7pjcDQeQlauhKBh90O3in9OgJf72v/ed7Hxmb3VB41e4yCs7D5
jh8n2HhZR757qf8oeO8U/25pxcbFqmraiedGIbpnxb2PxmwsjzU+W0aNAkNR
6+MFYOOhbp3p7wWjENEv8WaTDBtHaBgdqh4chcyRneOGGUX4xRffiWeuY3BS
tkH9iEshPi3199UdnzG4YWQiFHGkEMvaB0b6BY1B0W+uqETdQnxpKmTl5mtj
kGO9tt5DohCbyEQcKMgZAy0dVfaLsgLcf+pe4qPeMbD9vbpzQLgAr+B5tSf6
5Dg0L/+s7nI3D9cpnuWR9hyHVLurUwKheThqv2blw4BxGOES8Ymyz8O0yIKD
jyPHYXFhjaA2df7pFUg2+ZE7Do3BW8Sk3+TiZ4zzx2VGxuHtj8LrGzpzKP+7
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
     "]]}, 
   {RGBColor[1., 0.646929, 0.0801709], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVmHk4lG8Xxxkk64xlxpKEFKWQKEqdOxSFSEhS+SkUQmQJlcraIiFaZKns
u5nnSYU7IlKpRGmxZMu+lJAs7/P+M3N9rplzzn3O+d6ropOXlTONi4urgvr4
/zcPFmzs1rm4HV91k1PWtKtUYCmslo8/Ctt2BfiwNDfhP22xe7/EecFl+4s7
v2nswp07XnWRcRfgvppyd5KGLW7x7c3PiLsBpfVdvB3qLvj9td9i9+NS4XD1
cu7V6/yx+Z2gmttxRbDLwE/qoGIEvrai8n5iHIbvdT/DLaZu4cHpJYs7fN/D
h4yYAweWZ+LFleY1m+Pfw0Gl80MnjDKxpGV89Hr2eyirQruPu2diyF4hKfP7
PbiNvn4p9SQTJ9jprhn3+QDGNs9iTu3PwtufnNyf4tMEAZp7X5RezsY3g95k
zZ5uhvbao+rJH3JxZqb4qfGbzbDGX9H9/p9cXN5kp9VX0gya+RdfXJbJw31r
e8s/TDTDlOC/zYuOeXjLt/kP2adb4M/St6YFo3m4Z6vGnO3pT5BwVe1gHW8B
1p2/acn2boXaeaEi2rIivCXELWlpbCvsejP/pmpLEd76z6D9cFErXJ0b/+tk
X4S3//3tvnS0FZbF5/Gb3inChn9sIg+7f4GHq7ZafxYsxntHZCr5Xb6CoFwT
v01YMXZuS1dzOPQdWJWzItbuJdjFIcinJOg72IW7m+qeLcEnvlk9WXL3OzBU
V9cLRZZgty88xiWt36F65eU9oQ9KsHeLs9MS2zZwGMvjSWktwSFv19wptmyH
voZqnvQdpfhVu91l2spOaNnhcdlzCRvbvtFlcmt3wqfBt6YrJNi454l01qJR
J0w82nLj6Qo25rrV2jDn0glzK9z2Fuuysa6pnfh0bidonR9YlXSSjTMfH0gf
0voBWy2dTHbVsbF2xuaNg4Y/4NzFs2a3m9i4Ok6qtt/6B7jfu/37Yxsbt5/6
3N/r/wN+ch2Y4Z9kY6byAc3Opz/gat+WC/+t4OCwWFvcbNAFIx7RE+9Oc7D4
+U37Pu7vArxV5hQZzMFp7qzuD8e7IFSh7014OAeX7/q05F1EF6TbCIt03Obg
33M2e181dIHesJRjUCUHO520aauw6oZtqb/UTPkIPG6r41V+rBu25j6efCpC
4PNGTO5nZ7rhUeDCnDiLwHdXtCiXJXZTegjPDF5N4A8t1h6lX7vhQXeog/ou
AiMD63+ZTj1gKaqSIXaRwDMs1c2XfXpAKqY66GokgUuG/vkcvdQDLnk5quPX
Cax06+Gg1IMe+FOwd/LsXQLz9P/6EvWjB9IV1NNiSglcXv6S6TzRA3cvvLt2
pIzAZ27e3beDuxcKq6sVZSoJ3LPF4NVfhV4QfaChvvcVgV9ev1nm5tgLw7uL
dR+3U+N3cp7c5d0LVY++NX7rJvDmzXqaK0N7wWTL/a7BfgJnd3ZmfUvthVAa
y6v+F4GvbNRMMuvohUjtnluhfCQ2WMr7UXWsF+YqNsbNCJD43/fPonyLvdDk
mtlnL0pij4gLERXyfSCj8i6inUVi8y+NfupH+sBHvFHzx2oSLyl8UCLo2Qdw
eUdQ3loSV17yH+k71werysl/R9VJrL5O3jn1fh9496jdjtQhMePCKWtGWx80
Eomf3huQuH7/jtjh4T64b9V6fngniS+qMt/Uz/UBh8/a6JcJiX99KDe8KPcT
pMfWLyvfS+JmZeGNvw79hAi5G7kmB0l87W+HZ6P7T/iD1Ec5h0i8s5Gdmxv8
E8x40/SEjpCYDDikdOzeT/jn9aPdz4nEnmYaRyDvJ2yVs9e+cpzEqxV57i57
9hP8fKejolxInNSQK9b89SfYjXeoGLqR2DL1vHnx4E/IZVz0XHQn8dIzVtHX
Zn9Cb/Ov/IxTJH5usrr2hGA/gG3iDx0vEgcun+XaKdtP6bFLsNibxJq/3uor
ru0HlW3HVCR9SDzwMj1wXq8fEhSf6Tj5ktjee/c4cbAf9t/sUSr3I7HC71jZ
Prd+GA+X8WjzJ3GvX6sRK6Qf9CLT63sCSJw7s8Jr1/V++JhltrkpkMTewa53
/FP6Iadv6eOMsyTetFD4IrOoHzQ0u3YdDaL6GTo18ul5P1w4SutboPg5z3Zp
/qZ+MIGS+LBgEkdEhBts7qbsr1hbjFNsJvDWw3WyH3pHvKQNQkgsdk0yKYlv
APqWZIyepfiTqENVHWsAnjqzPyRRnHzz4dC0ygB8vBZYdY9iJ8khpqreAGhO
jFWEU6yapIXs9gyAy6xWnQ3FozJBblGHBig9nm0TopidXJVQ5jEAz22kuLOp
+IErBHD/uQHQ17qotZbi7Q8sB6RvDIBdnbFPHDV+3lW3JXanDYCijmxVJ5Vv
Q1bHtrMlA3Dxau0KJsWxa1VO5FQPgM0r7RsaVH1sCjzjvnyk7L95MzSp+slq
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
6Po6x6ZZFzZszTH9pyiDiE7F5cqadtv/B4ULDAU=
     "]]}, 
   {RGBColor[0.9849815, 0.511505, 0.0562295], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
o+67YMuetKP/lOXQK5Gi//9+V/N/63sgOQ==
     "]]}, 
   {RGBColor[0.969963, 0.376081, 0.0322881], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
rLIcyh/RkWX2Oxr9HyQp4kw=
     "]]}, 
   {RGBColor[0.896046, 0.24915299999999999`, 0.018122], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
SgzJ240enKCTOPtEdnxWtRj6YGVrNyRF4h0rLb/31oohvqnsHVWyJI44n3rI
74sYUpHaPi++ksTK603TH30XQ4IfFp5FqJD4dfPvzj+/xNC2t9f3f19DYoGt
Jp5hPWIoNeiupuImEmf2DRB4QAzFGOY7i+mSeFtC7AhtVAzphX5xat5KUuf5
rhNX/4qhA9+XPpc2ITF/fuS5uCV05P2oMm7OkhrvvKGiSZSO2j4d+tlhQ40X
/c6/VIKOCn/caGTbUeM911zLkKMju9p19XWOJF4l2/i+W5GODvW+rV3vROLK
N2F09ZV09MVmW6DfIRLzra6LzV9DR76zNVnX3Eic/in46/h6OrL3WKt55DCJ
jcOXyelsoqMrZ+UclDxI3K759mCoLh0pKqTIPztK4vAW/5RyfToKE+wP0fQk
8Yoo2XYeI0p/zMr3//ehFfoVq7Ztp6O7lyxnSrxJ7Drg6XHFlI6Ye6/I1/mQ
mHZPklNjTkebB3A99qX0d5UNitrQkUZ1t0y0H6U/5b7e2p6Kx40+buhP6WeJ
BsY60pGa8nHn9xSH733y+KszHSkHBzjqBlD6fIem5NzoKCb/Vnc4xRUFi7Y4
e9DRxJpTNOL/958u+WFpXlS8ugtkIcW89P2404+OQEm2L5Hi1HJemuoJOtJS
6Sx0phh5c7Z5hdCR1PUMMRrFrXK2V/LC6GjlxRfTFyn989X/qn+fp6N4qAnq
pOJVCskU0b5MR4y+oIsr/3+fq2xuGXKVjp6lJK80ovJz+fzndulNOnIN3b7P
gMqf51Jy4/xtOtp++fYyGcqf1I07pY3j6Oj9iw9nPlJ+oraR/Zfv0RGf0vHj
x/5/H3orIeltMh0JXZGitVL1OG9o1CKc8X+/AtdoH6H0h/qWW+bQ0Wx24O+j
7pT+/Rj3GC4V/3tF+9OulN50R5/MYzqaWenOr+9M6eXcWHuwmI5K1tfb9B+g
9Oy1/VLK6GjT+ijTk/up+QsjJlZX0dH1fTu2rttLze+6XudYNRXfDmN9e2tq
fsa3U0QtHb18eOe3kwWJF3zUFjZ+oaNzEd8jluwisSfLklj3nY5OJt3h9mwj
cePzE/tVf9ERe79CE9uIxBz6i8Kl3dT8xjEHGreQeG+B/dHFk3QkOLLkUD21
fp7vD2PyzVD9nxSg/oZaX2q09Iq5OTo6Ix8mn0atv3O5wVHTNAZS3kY7Ny9H
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
     "]]}, 
   {RGBColor[0.822129, 0.122225, 0.0039559], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
oyZMFrZq39f/t1YabZ7ZcaQJ79b9HwEI8GU=
     "]]}, 
   {RGBColor[0.6454355, 0.0611125, 0.00988975], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1:eJxFzmlM0nEcBnAED7zBg2ImQiYujBZmWyszz5kVhsy8IiUzmzVBseW8Zqaj
Wqb41zHd1FYmZmqajmyT1Apqvilq0TEjTUWzZHN5NUGotvz+nu3Zs8+7h5Ep
5p/D43A47t/+W8KI0+vpfRVhuP+hU+hMWn3G4U2v6GXxnzExeDJibOoxVg7W
FRi627FasLZ6idyC3QZzm4rVjVgvuNpvuEWOjYB/rNlbIwq04P0bdbyBvE/g
sa8plXj/SXB4ZKJJkTkDTsuLW1SmfgcPM1hXR9sXwImNrDa9aBHsY/c0Spb9
C3xtr6Z/9PoyOCb2qFAhXQVrbiwzq4p/o7+3vFQTjevgM4WPahcxM7hsu5pT
PmgB77aUreJzcOGbfnU6ZYmeZQPmtOZ+LLuEB0cnPEtTSgjgIMMJTZDUFiwh
5Ye2NtiBzz7U8n/K7MFM9kVe4V0HcD0t2qi/QwQLO3rl4c2OYBw5KXCqywkc
ZzyQnN7pDM56kCaiqlzA3ywumHbMFWz/ciMxU+MGtubutAZ/cAfz1HE7xBdI
4ATfI28i55BVs9NGpYgMLpmnCShG5DbB2iHKZQ8w3VEsJqwix9vs6RAVeIIN
OTX8IhOy1rmam1/sBQ6gBaqItt5gVqkzh3YTucqzdoXuSAHH+vSxX9Qhpwvy
lHzyFjBzvihKWIOcPEuPcaVsBeu3nZd3NCAnBYQavsiRtWxyiEcT8vOwobel
Lcj3he6ufAWy5N5gpXkQ2WEXMT9hHPlKiH5EqkdeD+13U00gL3AF3cwZ5Hfi
vjnTAnLzQEq6woLsrWL3jOOo4Bo13kwiIFfouptKHJCz13A6Hgl50qrzl3og
pxK7JENeyMepJ0lMKrKGwco45YMcxrL2yHyRnwS/N2v8kDkHO4+ZGMh/AHU7
CiA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"covariance\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["1.1707963267948966`", StripOnInput -> False], 
      TraditionalForm], 
     NCache[{0.25, 
       Complex[0.07735175385618553, 0.]}, {0.25, 0.07735175385618553}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox["2.3707963267948964`", StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.25, 
       Complex[0.1864489149290155, 0.]}, {1.25, 0.1864489149290155}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{30, 6}, {3, 20}},
  ImageSize->220,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.662733700853341*^9, 3.662733924458366*^9, 3.662734058534129*^9, {
   3.6627340939747753`*^9, 3.662734117854842*^9}, 3.662734177901001*^9, {
   3.6627342256114073`*^9, 3.6627342680878277`*^9}, 3.662734325865237*^9, {
   3.662734378113369*^9, 3.6627344163712893`*^9}, 3.662734500109329*^9, 
   3.662734538562728*^9, 3.662740106506262*^9, 3.662836712523353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.25", ",", "2", ",", "0.25"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6627341356158237`*^9, 3.662734169467423*^9}, {
  3.6627342445826*^9, 3.662734248139041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.25`", ",", "0.5`", ",", "0.75`", ",", "1.`", ",", "1.25`", ",", "1.5`", 
   ",", "1.75`", ",", "2.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.662734157738402*^9, 3.662734169862015*^9}, 
   3.662734248459066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", 
    RowBox[{"Length", "@", "hv"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662734463626368*^9, 3.6627344863565063`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.662734460409738*^9, 3.6627344869909887`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"1", ",", "4", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.662737714794441*^9, 3.662737722316408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.2`", ",", "1.4`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", 
   "2.2`", ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8`", ",", "3.`", 
   ",", "3.2`", ",", "3.4000000000000004`", ",", "3.6`", ",", 
   "3.8000000000000003`", ",", "4.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6627377226713657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Pi]", ",", 
       RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
      RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Meanx", "[", 
         RowBox[{
          RowBox[{
          "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma](X,Y)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Meanx", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734606196453*^9, 
   3.662734645344198*^9}, {3.662734724148766*^9, 3.6627347251648083`*^9}, {
   3.6627347852861853`*^9, 3.662734882680832*^9}, {3.662737507940373*^9, 
   3.6627376306413794`*^9}, {3.662737692117481*^9, 3.662737710261557*^9}, {
   3.662737826227929*^9, 3.6627378906333714`*^9}, {3.6627379481755466`*^9, 
   3.662737973727108*^9}, {3.662738011090568*^9, 3.66273820227133*^9}, {
   3.662738582147222*^9, 3.6627386102500067`*^9}, {3.6627386565494556`*^9, 
   3.662738675730899*^9}, {3.662738735220784*^9, 3.662738743725926*^9}, {
   3.662738801751446*^9, 3.662738803326022*^9}, {3.662738894290978*^9, 
   3.662738904788496*^9}, {3.6627389639501534`*^9, 3.662739160753665*^9}, {
   3.662739226020411*^9, 3.662739241707203*^9}, {3.6627393045579443`*^9, 
   3.662739369430656*^9}, {3.662739431441307*^9, 3.662739465112954*^9}, 
   3.662739588444475*^9, {3.662739980093663*^9, 3.662739998145885*^9}, {
   3.662836828171074*^9, 3.66283690615473*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
+JQVG642JOv/CTf2QkY=
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
c180TdzlVPLP/wGw1D42
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
ELhG5j2KFcnQ/z/gMkZX
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
9AjJGUIIgp36ByZk4/f/B4DgPpg=
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
blUYbYjX+x8B7Eld
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
hMC/wpJfXzl6378AykFh
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
X/l/fn0n5sD/AOL5OHg=
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
skoIQZGXZoPDp+Af/wYZ9zvk
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkGk41fkfhm0jx/S3ts2MNMi+N6G0fIzKElmikCwRUoTC35o1wzXZOpMw
k6WEkkYoW84nS0gdHE4ciYo6tkbSsYR+3zEv7ut5d1/Xc8t5BBz1EuDj4zuz
xn8rpDdQEO5hA7IZeG1bBAdXibwWz/8E1A5K6bL+z8EIrxqXmr0eIO5YyYoP
4WCQjuC0rpkfDDkOy3MDOajjyYyna4dBlsaCULkPB9OjKq0OKiRB9K3ejj3H
OAi029UyW69BUIatvYsOB69b542L5BaBY2v9rQruAD7lJic+13kIbqxw/f2m
A7gjP7Kb7YyQNJTj0VjZj4XKv+mP32kFRkM0JMr1493wdaaiUp0wuPeznm/i
S/Q3Kwru2toN4hF+mTvn2Jgtshr0+nAvGL4PnTa0Z+Po1BHG/5bZ8NU1jFVY
14cp32vliEcOQAF9snlUtQ9170z+sX3HK9g0fb4wJa0X9S//sk204TVM7tZ0
EaZYqOCmyFA3eAODs7sPDQWykOb8dX8F7y3kRyRomnB68L6iMrdSfxTaDzIm
wg/3IPt+81akj4GMK01oyKMbZ/Qr3Xyn3oPacx0Ww6AL9UcmJlZUuaAiK/Bu
szwTyYFUgezEcUhuKUoOXHiOCx1hnjIdE0BYA38bvO1E//W99neVpsDu09ge
/+pnOGgVY9N/aRp8kzdEjaV34MWKi/Qp/Ag87cHTZbHtmNrz0ltEZgbyubWK
6SfbsF88Jk7s1CeQofyh+chTFFXebzdoPQsuOOuqa9KKvre/aFaszsLHnBL3
FLUWdKuy1Fi58RmyRuTMt2xvxmsFr+c6LefA+Piv8eaiTXgoNYvhuzQHsk5M
/plZxFQarzwq+wtIBBgZpS024kavZK8NJjzgV9sXwRlswJ02T4x+nuDBYKOE
cTq3DpmG8nIrSfPgrljqnCpYi8VCDc9O/LIAUfsCqgzJQ9zkunhNi70ArrL1
6j6K1diWdVbtt/hFiJNzSdmuWYlibnGjdopLUO4W7TfpVoE9Ss35n1qXwGx7
zTsji3LsZe5WlLjwFapjR/J2Ft3Bc0LHuoqkl4Eu/GRxwb4YD/5YAozmZajq
ZPv+M3wTs7UVHhWfXwFzfN9zQC8fE9jGNoLiq8Bkv+Ql+OTgfcecyvePV9f8
bHPHMDoG+tF3Gbp9g2mmZ7dsyRW8F1PT4kp9g0Rlu/YXoQkYOi3kK8lPQUCX
BFGzTUAjh6NirYIUmHhu+HBDPQHZWv84qtIoqFOpk2x+G4+rw/IzX6QpCKI6
rYUt49Fib9qWFFUKHvQoiV5VisOppdP+VfYUPOOe8XrMiUaVC1KbRcooaCoy
zMiLC0Edv5krV8opsN7iQ0s0CcFd3p0CkhUUKF9uksz9PgTNT8TP/PCQgnqH
eZZjVjCeNZ57qo4UKMa8MFG5fxHLpXqDrfsocAu1BIvxINxRldmbtUKB+HGN
HA9BfzQs9zf7iaIgL7sh62yuHxqXmDPy+Qhc1fTWHNf1Q7s/+e+Wfkcgx1RE
9VePcxicEBRXL05gwSlDLK3DF2vsbHVGFAh8iG45c+CeN+7lSaQpWhI4XWAj
9Fe/OyaN3lvkWREoCE6LK77ojt09ZqdabQkE5EU4+Uq6o0d57E5PBwLhFk+7
9+e5YrL37KsCDwJWw5T9dyXOyOZ0K8uEE/DUpuS+CR5H2fZzmdORBIpCpJRp
DsfQ5+G6lfpLBLIltJkvyuxxORO6nBIJtMVmJGeesMOfLf4Ovp5OgDkZZVTH
tEG/xrQmqWICMcubQULODB+VqamPlhLQ8zfrshUyRZLT9seDMgK5Ejais9OH
8Goo5WPzgIDpOpXIrI4DWKt9Xizt8VqPGB5PIxhQQFY0zAUJHCvu2ph0eR9a
rC9+p9FMoFe6NlCtcA+OTAxXP29f+9dmTj+5ZIBCN4840/oILBXmzNRp6aJV
xmQr5yUBWTq3z0FPG69fuqxVyiHwJoOVrqqsgWrOjfymIwSONkrvunpSCYPN
nc5tekeA0KfXX7ipgI0G8+wPYwQibvFdGRGWQ5sNmqWJkwReb9s63+S5BXMF
nknafyTQKKjiOrQkjWOzpyMVPhHoFF40yXokjhpv+D7MfSawcWNty6q8CIYy
/7Jq5hGgadBiwkz58UnDrtrMxTX/HsnDm0IWGKJ32XKnlgnMWWdHLIVMMOyz
A3/X+UbgbUxJ9SErFuNG0vp5Qghwvwj++Op2bOO/gNFseA==
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox["\"\[Sigma](X,Y)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["0", StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1, 3], Complex[0, 
         Rational[10, 81]] 5^Rational[1, 2]/(Complex[0, 
          Rational[-2, 9]] 5^Rational[1, 2] + ArcCosh[
         Rational[2, 3]])}, {0.3333333333333333, 0.8021095556782352}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[29, 51], Complex[0, 
         Rational[2117, 397953]] 4234^Rational[1, 2]/(Complex[0, 
          Rational[-22, 2601]] 2117^Rational[1, 2] + ArcCosh[
         Rational[22, 51]])}, {0.5686274509803921, 0.4705622356383907}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[41, 51], 0}, {0.803921568627451, 0}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[53, 51], Complex[0, 
         Rational[-18179, 397953]] 106^Rational[1, 2]/(Complex[0, 
          Rational[14, 2601]] 53^Rational[1, 2] + ArcCosh[
         Rational[-2, 51]])}, {1.0392156862745099`, -0.28517786540193163`}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox["\[Pi]", StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[65, 51], Complex[0, 
         Rational[-4810, 397953]] 2405^Rational[1, 2]/(Complex[0, 
          Rational[14, 2601]] 2405^Rational[1, 2] + ArcCosh[
         Rational[-14, 51]])}, {1.2745098039215685`, -0.280546021625542}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.9993999926747469, 0.9993999926747469}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662836844192978*^9, 3.662836907515709*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "4"}], ",", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", 
       RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
      RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Covxy", "[", 
         RowBox[{
          RowBox[{
          "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(xy\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Covxy", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734606196453*^9, 
   3.662734645344198*^9}, {3.662734724148766*^9, 3.6627347251648083`*^9}, {
   3.6627347852861853`*^9, 3.662734882680832*^9}, {3.662737507940373*^9, 
   3.6627376306413794`*^9}, {3.662737692117481*^9, 3.662737710261557*^9}, {
   3.662737826227929*^9, 3.6627378906333714`*^9}, {3.6627379481755466`*^9, 
   3.662737973727108*^9}, {3.662738011090568*^9, 3.66273820227133*^9}, {
   3.662738582147222*^9, 3.6627386102500067`*^9}, {3.6627386565494556`*^9, 
   3.662738675730899*^9}, {3.662738735220784*^9, 3.662738743725926*^9}, {
   3.662738801751446*^9, 3.662738803326022*^9}, {3.662738894290978*^9, 
   3.662738904788496*^9}, {3.6627389639501534`*^9, 3.662739160753665*^9}, {
   3.662739226020411*^9, 3.662739241707203*^9}, {3.6627393045579443`*^9, 
   3.662739369430656*^9}, {3.662739431441307*^9, 3.662739465112954*^9}, 
   3.662739588444475*^9, {3.662739980093663*^9, 3.662739998145885*^9}, {
   3.662836734011841*^9, 3.662836752471727*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
XCuuN+r+D6FLpRM=
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
jsrn9zfOUhQFfTN7x/bKhX74H9/qjSU=
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
Uo598T9NA2/e
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
NA==
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
DJcUNQyu/h9wyoil
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nk4VO0bB3BbslQkLSRRtiKU3nhFd68olC0UI5StpMjyI5msCYWyJMky
RxGKZC1eHkSJolCkNy22MeaMsUVo5vf4a67P9T3nXHM/5zn3/ci7+Bx35+Ph
4dnKy8Oz/CvwVy8t2MUSnrJnDz9YLYmWuNvUZy5S4ByLp15QVQ5dca92rNZz
Aeoq/WAVcyXkq8k/vtv4AphvqZ1ON96NNF3fRaZoXAaH9kmKerQ+ukUtMzfc
fh2MDLmVhlOmCITzKmS23IGk6j9snlv26K5F9qhQxkO4MHbbo7nwHGoZib3W
rlkJdW9YkVMNl9GenJDOHgcEBb4/LusORSBCOWbfaGEzKLV/CeITikFFwSuP
iEi0wfRpt2Oz5vHoovHDgI4tndBDOmpLXrmN0oWWfP8z7YJBAectob3J6CfD
rH71Qg9UudlUh/LdQXGi6vfEQnpBIbchbeNwGtpdOJaqsKcfRGbc16q3paN9
0VpbRWr/A6f7AmraXhlou7Nivar2N0g17025+fM+Enb4faB05jtwP0rLUWyy
UImi8kjZvp9g9HR+0PlGNuopadqCUgaB0ejlcqIiB7H2lTl7MobAxCrugbY9
Dd1c21t4dmIICixbCkgKDakwF6fdZ4bAK2FHfu4pGnIhjGJdOEOwzehKnPBp
GuoV/VzqIDEMZ4sKp9o8aKjhO5fXXHcY/KSKj8sE0FDyDbOHe24MQy9z0e13
Ag3tG6DTF3eMgOEpn8qsehp652Nh76ExAq84ura7G2jIjbfqzfu9I6C48jN6
2YjvV4gqyoMROLgxd3aomYYmzm+5YGE7At7WvEOb2mmoYM5qIjd8BIzrm98f
7qUh6bW1sya9I5CQ5ri2lkVD3EMJfOnXRmGJes9bUJpAElPikvlxo8ATsUtH
ezOBlGipihWJo5A8mD/rIUMg86X7xu/TRyEs0PHYS1kCZVcUJQoVj0L4VjdP
n+0E0lNslQ7+OAqlxzU97qgR6IogvxZFiQ5mttMJmw4QKLHiuuE5VTpMvPv5
VRkIlOsiciJQkw4KPPbb9h0kUFv92uBkXTpcMWTFWhgQSCpIDrWZ04H/kdm7
/x0m0PNR/aP7g+jADPHVvm1OoF+tl11lWunQYWBSteRIIAH1A/fT3tHBko8S
xHHC9aTwd4t3Y/crcjnOBFJ3TDRYMUAHFC3iunSGQO6TD+RZ03TYdryNSncn
UI9U5ze0dQwqFv/hRF8kUNl5xVOuQWPgZJp3/lMIgRo6GSlfqWMQvr9O/BmV
QB17S9tPRo6BaaV/6I2rBGJwdPcfSxiDwajPpX+HEUg+xVL6rwfYK0/4xUUS
6HZtSJ9g5xgo74zzZsUS6OKqLpsiJQbYmuqEd6QSKLCxQUBUjQFTKeRw6B0C
hQc+rfDazQBnb++t6mkESv0eL7lLjwEtG9ir4+4SqKbiSM9TKwYIP2v4rJlB
ICHHOutKKgMSLq3WMs7B9Us84d8QyYBLYuy+YWyZ1xnlgTEM2PFC0jqSRiCN
3ZfX6SQzIErfoLmaINCJFVrdNY8Y0L+X977kQwI9KC443tDFgHVS5XJpBQR6
4nKXT76PAXmqh9bIFxKoauP1soivDGgWvfW+CLstwlXiEB3/f+ng7poiArFt
Zbta/jCgMdSn++0TAh3gpFi1q4yD/tjzpuelBPpsHmb5KXQc3FrE00qrCXRa
7ibRHzUOd98MuIg9J9DIZNrUQOw4PKJLql3EnkotSR1NHoc3893lii8ItOrL
1775/HHouHby3o0aAh08q3dmc+c4rL9q3rS9jkCvdIzLtvaMQ584svPDNhOx
4Vf4PA5GgvxMhE0p9spTGxyHLBM5Ybt6AvlPZ4zpz42DuK6PLBURKD/st+/p
rUy4aX+6NqWRQGpWK166KTCBMqe3rQu7fNtaSc8dTJATd7gu1oT3R4tKla8W
E/qzgg7HYH8WtVuIPMIEHr1f+edf4vq+uh6NOcYE96e58zTskRKfzJtWTLBp
aD3yCXvKKuZAqgMTFvmzB/SbcX3pVZF5Pkwoea41wdNCoGTPpu7CACYIF/nv
0sCW2t+hUBLMhNubPDxPYSsNDL+qimLCo/Vh/eXYBxXWi7bexc/rMc098Qqv
x6zcqbeZTPD/NtpBxTZ7rVb8nmBCraDvbwKbct7Q4vNjJmhWuhmPYfuX+qcw
EBPkw7I6vF4TaEanUcShhQnB5S3n4rEDGtdEtrcxAQn1dD9edlfhpScfmfD9
bqvM6PL1lLlRmS9M2JfVuMDXSqD/DRo6J3xnQjblVeEW7MCZb2be40xgvdwU
YoH9i7qrZYDNhF+OwVke2EErQvQsfjFhbbxoEhV7PqG1HC0yQf19n20S9uUN
G1Q1eUmILmWMP1zOs11zaYIk5FabWldjBys/k1q7ioT4AL74VuwrOseEpjaQ
4Hcmx3cUe6HhXpiLDAmUlruys9ghJqO/uuRJ6Dy8Jov3DYGWPuz1PqRMwsCN
VeQqbColcrhcjYRx3cw1G5fzn52nFPaQ8FLgNa/ccu61pSdVm4S2jLRXysv5
9PmjK/RJeFEu6aiOfZX6vOl/BiS8EznaooXNERDUHTlCQq3zIa42dmiC9bMT
ZiTUBa4U3b+crydUXh8nIWoTQddbzrNZOdp2JPwjIZ2uv5wr6W0scCSh8i+q
1LLDnsYlbnIlQdr+w4Xl+3l0elfEnSPhyMntyTrY4Q0KV39fJOGKGDVu73Ju
4jfj6U9CnvvwcQ3siA/Iq/8yCToGniwVbD7K6kHTUBL0k9eekseO/Emh1EaR
YHaEfn/Tcu5V8EE1joTMk3PFa5bz6VnjzEQSFuuMk/mXc+qhhlWpJPQEjxjP
4fWNEkjSvnqPBI1b/R/GsAUSBkrIbLweghq7vmBfW6+m5PQQry9JUtqX8+zg
rI5CEm6ckHeoWc6VXkvCUxKOn+zeVbCcP5WMf1pBQpzomu5U7GhtF365GhL2
pXwxDce+bvxnkqeFhBMVJ8ussQU/mHr6tpFgkSedux87xj79+49OvP6b7rlt
w449r9XZ1E8Cw3PyDBPvX6Hp8MNa30kQbfmW2YkdF9JR92CYBOessqJn2Dfi
PZ9cY5OAZtTBD1tkffX22VkSTm0kWyyxb2YJ3HdfJMGQ83yrOnZ8SU7cYUEW
SNx5cGwYf18J7z96CMmwQNF+NN4I+8b/DobJyLNgouh+4hbsWOnHdzWVWPBC
9+CNGfw9R7qFt9ppsmDIhuqTgx04v3NnoSEL5lc+m6LjfuGfdcegzoQF0c29
zc+xLxnwOHwwZ4EnoZUUg+0V//HmbzsWTAcUb9rWvNxvw0mTiyxodssaNMX9
x7GFscLJjwU246djJV4u9wNbWb8gFuR55Ch/xv3MpmKnRUYEC856l9q6YpsY
fyxl3GHBaq6Urxfuh3su7Qy4WY/raf3wxBT3T431d+JzXrKg8t6FP7zYajXc
h+WtLGCwxE2e436rJPDx45cuFgRYZXyQx96cHqatNsqC7nUlBfR/8ftt6Fl4
KzYBO7J7A41wf+d1h3U/JCfglJEllYn7P0e4SHVWagJy59yuJmPPW4ed2qIw
AXeLY/y+4HlBju6ov6gzAVpp1TvO4PnySSwsYs2ZCfAtme/eX0GgToF1EsIe
E+C9Q/5xTzmBWn/n5/J7TUD+w7TYC9g1gx0v5wMmwI6IP3GvDJ93qmUFB2Mn
wL2KgFE8v9yd629Ul05Apou7uU0x7i+9HBNNHjZ8anuX7Z+H+9kH4+RiPjZ4
6ttYkXie+r9N7t+5gg0JYRaiHtgXGpW8FEXYMBHadsfmAYGcHpvHS0uygVn0
dYUSnscGYdkdAipsiMn8TsnIxPtL+YD1Zws29FdflnmTjNfnT0FJ/HE2+PfY
1a/H/tO1TuSgLRvmi5X0zyTh+Rs61pBPYcOlqfoPM7dw/Z9S1QPc2aCSbmq3
JgGfv66PC4uFsEEnfceISAyBdEfSGwzz2aDatOvMzisE2vsvv8x8ARsgXqbm
eDCBdiV7Bz1+zIZkXtpk8GUCyR0wVJd4xgajsPtLzYH4+0qbuP+tlg2/9g1F
mfkTqMvocNCVD2yQ0OhwVblAIM+86V2lS2wYiJ9rW4HPazRh0v4vLhuy6qzH
pU8RqO/iSHQN7yTYvFZdq+FAION9n782C07C5I3Qizb2BFJ5XZ/wWXwSHgkv
eKbY4vlJjyP5FCeBnVNB/WlGIDc1uWJbs0l4d7LGsUWfQM7lx9QWsybhLe1b
Mw2fbyWnPbyqaJOguVKwzEkKv+89EUW+DybBTySFunkT3r9llSr0gkkQO6NQ
lLQe1/NMVvFj+SRcjuGcuySOzz8l7C1P30yCtlrYtbkVeH4Upoq5zk6C7aG5
x2psGrpD+2+q7dgU7M2ZergPn8+NY0W9gy2mwP8T7+NyREMLPrpjysenIGbQ
IksDn+9PQ/q3ayenYPWeycMKtTSkOmD99oDLFDinHSnlqaShxs3teWVBU8Cg
UMajC2iITHthl5E7BRKlb6KbEmnIKCGt3nN+CvanrooUsqOhBOGZYmr6NFSb
6A9avctB691j3SUPz4CkF0v2VVU22mvZcFCOPgP2z/vH21Oz0DvdbfKL12fh
6r96f2s5ZqJ8gdo3FK1fYJeQJ+JLZqANTnN31Ht+gXEM/UVcyD30Ku38zpjI
OegjX32p7LiL1jhH/LRWnAfFfz750xTT0HulppyJ5nmIsboQ4OGTirre/a0o
7vcbvl3f77w3NBl5Cdh2PFy3ABSfbQJbM28jQ+lHUN+0AEMHwKKfLwGla2yv
yvdeBJfjJicrWmNRVI+BJb/YEkip+Q1taL+GSuzulQ39uwRbCOWq5qBwdOlC
io6u8x/IFGX9Q+VcRk/Cql86cf7A0v444eoIX6TiJ7FR6DEH9PacXejjc0Oa
F1jx8cUcGGv4/cu9wxXpeLTxrS3lAOPY61KJDFdkQolkSVVyYPDhz7C3u13R
eYOpFlXEgZBcwYo3Li6oWKIrwKKbAxYrPaPU20+jPeVJXWmLHNAu2i/A8HFA
usUXjTdz8PXRfE80xR2QwSOT+hweLqicONzwtpSCrO/zFhWs4ILUoYREoWl7
FBDlG1EjxoV1o9USj0LsULW1lebAdi50HPxuaZZti/RmxBMVj3Ehu7HSgapp
ia7/fDI3Y86FsHHim9cjC9T53vhMsxUXXP8+2iEyYY5cisP3up7kQo7CF+n/
IsxQrAe7n+aCn1/plWpQZYp6+jqVZYK54CS62UPNyQjJvvZKGg/B1xfe+Rb0
whCdrVy5WBPKBbrSyzd6GwzRQhJ02F/jAjum89LRHgMkd/RpwN1bXHjxZaFl
j+tBdKEusVEinwtvJbMdbPO0UdXjnao/C7hwLkZX6X3SPsS99yr12WMueHub
+OpH/oWSAzlnLZ9x4R41l2Pso4Wea3ivSfyXC5XCJHr6Wx3xyYpcdkRcyCs3
iNixcRc6uir/h1oTF1YKaBruOaCKBuhfK9pfc0EkUMlVsEgZCeSaOQh3cyFK
/B+xAF55ZH57rLnvIxfmB5S6N9Jl0d3QaPWCPi4EyRJKi8Ob0U6HOt4jA1zo
DQyV5GhsQAEm9l4bfnBhycnp+pXQdahOe7ZneBDfz6kJ8mWII0vJXQXXxrjg
aRhyhveQEMrge7PWhskFloVCl9UPfjTIdgvZPsGFxgwnWf80br3aN57hqUku
FOc8ehK7Zr4+8F2medMMF7b6pBlU7Z+sb6jVeZ40h//vOnfrFM+RepGiHvkz
C1y4HhqYnnSxr94m/dJNzT9cKJ+kvTxytLE+6/qqWS4Xv58hT5X3ZZfq/g+g
0pI3
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/wGytEyP
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
4UMb/w9QB70A
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
RScN/g8+JQK3
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
LTxUTsrkxPr/Aw4d+RY=
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nk4VWsbBnDzkfSJqEihkIMknJLkllPGzFQ4GogGU4UQIVTmypRSSiEy
xNqljk5IIsoQilRU5m3vbZvKlP29/trX77rXuvZ63vWu53nlXHxs3Hi4uLhk
uLm4Fn/5/uq4G+RihdaMk6Z89QqY56xXm/RyxG4X/47wq1twzu2p81NdF5xm
MI7Y7dDGaXXekS3Gnuj2Clv6otYA6q6NEcmbA9GimsTPFrTClRDKYveGS+jR
e9O4zNAZWJLzWHptKjZV3JBeU+OB65aZg4I3szF2sXqD2NtzeD0QHfVW/QmK
XLNf6ffFQuNOcHO7UyX2T3QkNfskI2vj5a2D+TXg5c28uoP/Bh4G/WEkJNaA
wBapsc9VmfAyzvZrWtsMfXawqstAFtIF509/MW1F3K6/GiUCs/GDbl6xbLYd
d46KxPC35SJmqdoNkeAOOEq55+3tycOW/OEUeY0u0CsD/YxZD7H1oqaM0PMv
+Bk2pbuPVogNhxQqVLb14PGkgZaEWTGWOM3olUx+A3dntGb7l0coVtg4QG39
gfNWJ0xb0krQXly9tjK5F/drzl3K1y4Fayt16AS9D32lUgKPqksRJ9qRf2y0
D/Z5Cz2xNaVQYsxNuE32gW60K8OtthQuWXuiXRb68PrQxJNVDaXoWPqpxEms
H384XAjxfl+Kqm8cbgudfgjNzFsP9JQiKdY8WyO2H2FT8bqcuVJs7R4amvtz
AF0nHAU61Ck0+lg6uG8eQJqheUSCBoWj3GX1LVoDkL9+sNhAi0KSfOTDHAwg
8e/JlfnbKIyeXOtpaT+AO3JJyu56FPJ+WY/eCyfXD7UezjKjICX6fMqkYwBt
szWa0m4UOH8n8KRHDYL/77dN8ikUxMaXi+fGDKJm1c4Rn1QKindTFB4nDuJW
mGffv2kULOYzjFvSB7HNW9LL9AaFzMcPEwWLBtHGZ9DpnElBV+GNVNCHQcwJ
XpayyKNwToBX01FxCJ98JP3tnlNIfHxp93GVIdB8X2kG/0fhnovQvrPqQzCw
72q++4JCQ4VoUJLOEA6qud0dqqQgGSBb2WAxhEDZhPsnayg8G9xptiNgCHWl
0tu0Gyn8fBPoKv1mCDfWHn8+85UCn5peRlrjEKaMvCtFe0g9ybxty9uG8EVe
zkfpGwU150QD/u4hXBMueG/9g4Lb2H051sQQzg2tz04ZoNAu2dxTKTMMDxvj
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
sfP/6kfgTw==
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
n2GxWOid3jO6Rzbk2P8BfT39lg==
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nlYTV0bBvBmCiGKEkqDKEml+qRuEhKlpFeDpBIapNJIpNBAQrMMUaSi
ubPzRiMNiiZF8kqGptPZp9OkKJ1v9de5fte99z7rWXuvZy1Zx9MHnPl4eHhW
8/LwzP4KbP74INDRDJpf5DZdLViHae4a1bFTNrDseVA6XayJs87FdsVbHWEX
PBZiEb8VXmr8g5uM3MHuEzUYUtgFNad3obEbA7AqM/+hFPMAbgQVmBrKheFH
Ou/pwR0OgPDjIumV8aj8fD/G+KgnEvff75ub/Ahbs9Wd3icHo7o34nKDGgOe
B6UKw5/fgHrKuaY223Is0D1w7gidgIdrw7X6Ml+js2p7QdCle8gKnLNbRKwe
lHltm6VcKk4ZPfJpXNkEV8a+zcYrHyNp7rTXf8atkG7/V1xKIQPfmSZlC/60
Ybv4mSNmrCxEzlO9vfDcR9gHX+gt/ScbmzIH4uTVO9E6xyL48OtcaF3RWC3y
4j/kh1orO9F5kLNXKFPW/ordTfd0vn7Jh7Dtb/28sW58z0u1b6kvQI7C2t4C
re8o8Ti03/dWIdpyqlaWx/7Av0/Oy9ubFYGtVWDvwvyJsoSIjg2jRbi2+GPm
iaGfiDkRoWg/XgQl1tSo89hPGJSfWnNjogiOD3dGOM78REXftNzgVBE+zvuU
ZyvWA8Pa56axAgxUdHN5Tbf0oM9SZPcjcQZirpo8Ur/aA4GYhN46LQa0uvr7
p9b14mVhB/8qXwbend5vfXxjL/JN5uvL+TNwjJd606zZC3XhBSzFQHK//KWs
x+hFRvuttHXnGRhyXem+37IXj6fcQ6SvMJAxYT6UerEXlT/jZorjGJBa/GJ8
z8detP9KVaspYIC74zpf0uU+2P8IXLCdyYDYyKKl6ZF92PnvWErtIAOKD+IU
iqL7EKr6tXMfzYDp9B2j5qQ+7NGUNrbgMHC/KCt6bnYfynr6RM1+MbBVoU4q
sL0PPwcPaQvzUTgrxK9ho9gPlZI8tbPLKUQXhRmeVO5H7JzIL+2SFFIdRf7x
U+tH+L8pGmorKNSXLQ6M2dKPypbUz90rKUj6y5TXm/ajXqJkhboched9ent1
/fsh0TLHMW4DhV91AU7Sdf1QK7isZbWdgoCq/p2Ed/2QXJR4KdWAglgs//tF
7/tREqSDwR0UVO2iDQS7+pHG3csXsIuC83CaLHu0HyfGcp5f2EuhTbLpa/nq
AWhl6LK3WVIocFU47OQ/ACGZyRdJJyhUNDFjvwQNQNfmBCvvJIVGzbyGQ6ED
mJSIjKp1ocCc2aK77/oAhuKEpTluFGRjzaQ2pw3g74hgoKonhZsvznUINQ3A
2VFT42gAhVPzWw9mKTKh5xo2mBhOwa+yQmCeChMyojoTgREULvrlFrltYqIs
SivUJpJCXHfU0g1bmViXCIll1yiUFO1uyzVnInlTpPaFaApz7UotGEFM+IYZ
nBCIJ/WLPeOXCGWihHejeyOxdG1yoV84Ew7reYYTEihs3BSwRCeGCVcR/7Ny
SRT+EdR4X/KEiXcp1dfX36GQlp1xoKKVibaek2WcBxSeOSbyyXYwEV2tUpP6
kAK1LKwg5AsTd228TC1SyfsLcRLb0c+Ei96j7tw0ChzLVa3Vf5moEqydfyid
gv5MrHmD0iDmzKuIsntK4ZNpsNmHC4OIDj/mvbeIwlGZaw87Lw0iR/gj/Zq4
dzhhpCtiELtkHkrrMSiMxOXE9cUMYhXfkbh1FIX5n790TKYPYq6MCz1STGHb
ia0OK5oGkZhmaLL7BYUaHaOC1W2DkPpXne8ZsYnIQX75T4O4/JnXbeFLCjbZ
bo9VfgzCa81xq1biM6PJA3oTg+i4rJtmVEYhPfi319HVLLybaOCZqKCgYi74
6pg8C/PX9E/sqqRQuGbxUpd1LHif9k6LJ66oVqK8NFjI3TK+bGMVqW+e1Z/Q
3SxYteX4H3hF6vvitDd8Hwux0F6SRNybc/ruNXMWtpX6Ov1HPGIerh9ny4La
xv+tcXhN6kuiQh+fZuFvUIekbTWFGJeq95k+LIxzFh5OIJbUbZTPCWSBttpl
0Uys2NVTQ11iYV9Z29FtNWQ+5MXn1SWyMPAm8PeiWjIf4zKH395loTQ76+d2
YpNalezmhyyst5O/4kVs42q4/9NTFoIPLut9S3wm70wss5yF1ZM863zqKIzp
VIrYVrOQb7qNc4/Yp1I0tKGeBR0HCY2aWbdmej5rZ8GznlIWe0Out5nok/7M
QofW7W+biX1/GNpf72ah86rBEitiv7GvJh6DLJSbSzETiX8Fbaju4rBQJuRw
g0HsL3hu6/5fLOiuTclrIZ68XldYPsWC1vduExZxgISEshovDXl39ROC9SS/
75T6QIjGAm7KtDRx4Np8ycXzaRR0bhbVID6rs2/uiASNb2Hz0m2I/1TcDnaU
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
58kHCc04X9H7Pz6eFZM=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(xy\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1, 3], Rational[1, 2] (Complex[0, 
           Rational[-1, 12]] (Rational[-2, 9] 5^Rational[1, 2] + ArcCos[
             Rational[2, 3]])^(-1) (Complex[0, 
             Rational[74, 81]] 5^Rational[1, 2] - 3 ArcCosh[
            Rational[2, 3]]) + Rational[1, 36] (Complex[0, 
              Rational[-2, 9]] 5^Rational[1, 2] + ArcCosh[
             Rational[2, 3]])^(-2) (Rational[2000, 729] + 9 (Complex[0, 
               Rational[2, 81]] 5^Rational[1, 2] + ArcCosh[
              Rational[2, 3]]) (Complex[0, 
               Rational[-2, 9]] 5^Rational[1, 2] + ArcCosh[
              Rational[2, 3]])))}, {
      0.3333333333333333, -0.05432001776242282}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[29, 51], (Complex[0, 
           Rational[-1, 12]] (Rational[-22, 2601] 2117^Rational[1, 2] + ArcCos[
             Rational[22, 51]])^(-1) (Complex[0, 
             Rational[264814, 6765201]] 2117^Rational[1, 2] - 3 ArcCosh[
            Rational[22, 51]]) + Rational[1, 36] (Complex[0, 
              Rational[-22, 2601]] 2117^Rational[1, 2] + ArcCosh[
             Rational[22, 51]])^(-2) (Rational[151803769808, 17596287801] + 
          9 (Complex[0, 
               Rational[35926, 6765201]] 2117^Rational[1, 2] + ArcCosh[
              Rational[22, 51]]) (Complex[0, 
               Rational[-22, 2601]] 2117^Rational[1, 2] + ArcCosh[
              Rational[22, 51]]))) Cos[Rational[1, 8] Pi] 
       Sin[Rational[1, 8] Pi]}, {0.5686274509803921, -0.05508000295159438}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[41, 51], 0}, {0.803921568627451, 0}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[53, 51], -(Complex[0, 
           Rational[-1, 12]] (Rational[14, 2601] 53^Rational[1, 2] + ArcCos[
             Rational[-2, 51]])^(-1) (Complex[0, 
             Rational[-181958, 6765201]] 53^Rational[1, 2] - 3 ArcCosh[
            Rational[-2, 51]]) + Rational[1, 36] (Complex[0, 
              Rational[14, 2601]] 53^Rational[1, 2] + ArcCosh[
             Rational[-2, 51]])^(-2) (Rational[280243682768, 17596287801] + 
          9 (Complex[0, 
               Rational[-36302, 6765201]] 53^Rational[1, 2] + ArcCosh[
              Rational[-2, 51]]) (Complex[0, 
               Rational[14, 2601]] 53^Rational[1, 2] + ArcCosh[
              Rational[-2, 51]]))) Cos[Rational[1, 8] Pi] 
       Sin[Rational[1, 8] Pi]}, {1.0392156862745099`, 0.06309818232714853}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[65, 51], Rational[1, 2] (Complex[0, 
           Rational[1, 12]] (Rational[14, 2601] 2405^Rational[1, 2] + ArcCos[
             Rational[-14, 51]])^(-1) (Complex[0, 
             Rational[-176582, 6765201]] 2405^Rational[1, 2] - 3 ArcCosh[
            Rational[-14, 51]]) + Rational[-1, 36] (Complex[0, 
              Rational[14, 2601]] 2405^Rational[1, 2] + ArcCosh[
             Rational[-14, 51]])^(-2) (Rational[222569282000, 17596287801] + 
          9 (Complex[0, 
               Rational[-30926, 6765201]] 2405^Rational[1, 2] + ArcCosh[
              Rational[-14, 51]]) (Complex[0, 
               Rational[14, 2601]] 2405^Rational[1, 2] + ArcCosh[
              Rational[-14, 51]])))}, {1.2745098039215685`, 
      0.07785935181866135}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.09077599397167077, 0.09077599397167077}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662740021793724*^9, 3.6628367170050373`*^9, 
  3.6628367552055397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Varx", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(2\)], \(x\)]\)\>\
\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Varx", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662739478354604*^9, 3.6627394872880487`*^9}, {
  3.662739574862118*^9, 3.662739596046834*^9}, {3.6627399745660887`*^9, 
  3.662739993954824*^9}, {3.662836762825493*^9, 3.662836781382839*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
9Bck/gehbIsQ
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
J2stiXCaYWeEJgHvoCsBZQIkGN5FfH/0CJScNFfrlSEx0/LusYEVgQOzGyPl
jpOQGLt652YggZCBvIVZUxJ5niPaJsEEiI9G52rMSbC1ZayEwwg40u7sdTpD
Qsew1i85gkCY69TnZEcS49n6xbfiCTC7CAWxmyR8q4Y89tEISNRdfDjmQ+LD
XLrZ65cE3Iq5WGW3SWzlSqPuLiSw+BAt1ndJiAl0LwuUEJA89tI77gEJur5Y
cWgVAY+KyGrBDBJ+G7ckarUReJ2rqDSQRSLbz9fBlEmAfPL+cUEuiSt9HV5/
dxJ4dI3tRikgIfI75cfZzwRKd3vyR74lYfne793aAQKcEjw37OgkjojGTXZ9
I3CML6NfmUEitF2fmTJIoHf4y6umOhKtIapvt40QWJNywnZ9O4mRd+zE8EkC
plEjNV0dJLhlk7T5pgnE3Q5Wzeoi0QLZvjszBBRtK1Yd7SXxhsLUM5hb2d/Y
+qJwP4nBsp09D+cJVOybYw5+I7Fj00m11gUCFCGVrLsjJDbppjdKLRJ4ytmw
yXKcBNEUvF2dReDblLOPzCSJ0fauHapLBJT7OAZnpkm48JYaiiwTuNb8zJQx
u9K3oz1odMWryrVKHy6QWN/xfGs6mwBPDlPq3CKJg5Juv/RJApbxl8PVlkkU
rM4TqljxxBC+OZJc+XtpeQUE/gcBAa1X
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
IPgHB3Mktg==
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkHk4FGgAxpEKK5W1tnaxJFlHbipbvR22yFmmi2RzVIqKPKW05OwU0jg6
KceEsciVXGmUIz5pNpRlG+UYNaRxZJhv7R/v83t+f73v82p4HN/hLSUhIeEx
m/8pbd6eesbDCdu2D1Qcf6KAabrMQOjngrnMruyypiU4613qVrrWA2c7E4Uc
VQ34G80ZMrb2xbyA0csOcbow8mwOTzAMwo/Hivo1aiwQe67QwUozGua2nAEB
zwqQzShSUWUi6l3JY3U5BpIc7/bL3EyHV+XOcY8GT9T1XYxsMipGxd6eO6ye
QJjcCyZc12roxezQ+XI7FGnaFyz6H3IQZL+kqM8uCtln5m+VU2yEf7JSWVHk
FfhZpwe2qBKsMYwp9KiPQ7LMtH/XtjYoySwu/tP4Bnh8+6oFU1xYGZ2tiGUn
4dJ3BikLg9sxkmXDmLfgFowfDt5YbvIWouVfmx6334VFlOkvck+6YGs+PWy2
MQ2a7lpVeqt6UB+0LjtV5QFkXb+tzxf+i8SOreseGWcgT0u7r9CCh5uuhkNu
plng5tWqVif0wkRhnsmM/0MILArdffgfEJ8ZwbIsy4FF98CASKcPV/Q33j/X
zwbdHCOVHNmPe2pOUsN6+RivD/JUqR/Ahz8+u5TsLoCffBsjewUf6Sa4X5JR
iE6HUKc3IUM4dQ1WgvFHOJl/MoFf/QmN9upn3qwpRkzr3wdlVASIiHhZLplW
gjcLQ8MUDgxjc6QE/91kKeS01zt3Oo4g0yXFlL/9MXwyvq7Mnx6BX7uSmdqr
crg/stMX3fmCXZejFMXrK8BM7RpttBvFHjv/mlPcSvwek1jlMzkKgdqYbeDR
asTICtnnkr9CUB4REnC6Bj94X/RW2iKEb1f62iL7pzBzqtmgPiAEHv+2Jmpp
LZotl2mIosdgt3x+6rMPtciUftLgYjoOxD8TfuM8g/L+CaYBdxwW1orMQykc
PE88onshfAKHx+RMhsLroOAexnPWmoQf3y+N5f4crStq7w1zJlHfuC/B2PIF
2prXaC0K+IY666DX8jr1OCq9syX9+ykEbzmSIyXbAKufslBVO4VtOmbvekQN
SDbULMk8JkLujTHNVYONiOBucpqzcBoqI0scV3CakLcnpfBDxTScvFY8YOW+
xAnfhNWW7jPYsNRqaGdIM3JDS5/tF8+gQFW0R39jC34NUPxRJkcMn9hOzqQk
gZGv4OpVthiNc29NJEoTrD7YKLU4X4zX6xqDTecT2LiEC5YWi0H8Xh05JE9w
ZNNonV61GJ67+WHlygRsxbZAx9di8Ho9veT0CEwexbclisToO86SMN9BYMn2
s/5ZLIa6RomAySDYlGVTdU+CIvuTZLZwF4HzLcls1lwKrYL2kzmuBIER/mHl
CymK7FprZrwISp23G3VrUpiX6boZnSZYK1x0TcuO4qVVuk9aCkE0L3dC6EDx
quO6/+dbBKTV+gBnO0VtbFah+V0CD/Z5M8/dFD+tZueV3ye4eHDkbaoHxd4W
rWXMHAJuB9FWOUPBC/IPDK0gUHtxNH4omCLtk/DqxSqCQ8XzReUhFGclMwVX
awim4tGyN5LCYnPcxgscAnXbvwKTYmf7hnUEeEngW3ntqWLm7N46Z232W4KS
HF09HovivHKy1x9dBDTl+Y2CHIr1xZpuC7oJrp8SH3IqoKi5tEPo/J6gzPCY
wrUKirZYx7DYfgIpNbkgt2qKzrubD8sPEtjKZ77Xr6WQibOpDOMTdA/8U9T0
giJPUraD8ZlA+r69q+xrioQHSRPMUQKHuEFOx98UqQX90eQrQVJIlAGrg0Ic
e9iZCgl0XSslt3ZTMFyCpTdMzP5vs/eo8nuKjEvWIsdJgspVY9yPvRQXrC85
ML4ROCmtZEUOUtwOVT68SkRwU6phMeMTRWupIlNpmqB3xCtYc5jCID+wgzfr
+j0SH0e/UAQ3rB1InSE41XzboVZIcUBtl4q9mKDmyeqy+AmKbR9zzT/Oulw2
V+PAFIX+1vFeb0rASD5xxWiGojKjO6Bh1u9Ey49RSmG2TzwLgv8AtVArrQ==

     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
fwFvrxal
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
KPw=
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
SKP90azvGsSSeefDqzVp8GRs4hyJkwLf5IeZ0XA8zPxZRHyFctMzWkfD90bH
h3Liezpf7w+Bxsma+ZueE3PeMVUuG2kMnvgju5N47iaN16vsadL/+lABcabi
UdEJDxoNM//R2CjJQYHvZOztwzSComvstxJXNJ+avd+LxorNuc5OxG8jUua/
8qVhE5c7dYBY9XP5iuIwGoyy3eloYr0/LO8fiiBuTUqIJ0Z2y2q1KBq588/5
XCTet61nfVIsjd0eyo1/E98oE3f1TqbRL3Gs5RHxA7nzvRqpNMJMXO5XEtd5
KXq8TSf5prUG1xIPqOn42lymcY//KL2NWDvOLlb7Fo0xNki/j3hNX+es9wU0
rrTECgaIbczdkjPu0Eh4+a3wK7HXuP/l6aU0QrvWX54gLnLOKv1YSSO1oa5f
YiYHjEWJ5NFqGtIhKu6SxLY6TX9N1tAYyGNqZxEPTXGlpBppjI/c0ZWfKZxv
jltKE43Kw/km84jjmrXLlFtpQD1GfQHx0mzn/fr/0PhQbHJdhTjwtO/j8nZS
/32rVy2eKcwvTtbyXxqtgoB7S4jdzcufOL6l4bLvl/Uy4hJNjlzPOxoOQYe9
dYhFpAcPHXpP4/niY8d/I77ybr5C6CdSj9NpOvrEI/X6R8QHyXiz+rsMiM2L
rJ4lDhE3LvZdSXwufa+i4giN5Y0eX4yIuyKCva+O0fDSadpkQqxz6EKt9nca
OqrucabEIdtuLSidoGHyyapoFXHjquqjaydJP18ml68mVlzcWVc3ReOL2c5b
a4g9JMcW2dE0Ri7dCzUjfjA+3a9TQEPVt3TlWmLx/1Qb94kySLUNpoR2qDFV
GRJnoNw+b7s58bUCO3//6QwcyvLKhB5PPthESzKoevq7+Dpii9AItdhZDD4+
4RoJfcE9PVBWhoF75ldroXtsiloy5zCYtUV/o9B6Rg3qS+Yy+Nb9Vkvok0o9
wbfnMbhweOawcPxW8V9txgsYdC3kZAitNCytWbWIgbPeZh2hj3RohVqpMFj/
Mz5H+LyPK9dxOGoMkqm7jDA/yTynpa5LGGgatFoIvfO8T3i/JoOObMZTWI+b
gWdeeS8jvy9wPSGs1889f2v/0mEQLkYfFdZzw6aHEZG6DARuPBthvVP02jok
9RmMpB2VFvajT/HT8v8ZMsiO8Hsk7NepzwqduaYMGm3PVgr7S1G6K/TWMAi0
b10o7L9q+YbTZWsZJGyU+GsFcWVcgH6zBYOVcqXZwvUzyy/xzI71DKKuuKYJ
15erS+7b7o0MBhN2BWkRc3U6zo7ZMAiuax0Vrk8r+eF3IVvJ/Ad8Y1WJ03ni
xmL2DKSl2qcpExu3GL1XcGKwZMC8UpHY1ztltdleBuNdYVLC/fKUrm5+5Mbg
s4rUjxnEUueHdxsdYGCdLFcv3G+5dzdG6Xoy2DE1piUg+/HN6GSTqj+Do3cL
340Ra0Vq7s4OZLC/pUZhmPi47PbR+SEMzjBKpoPEsw0K5eVOMsiRFVn9Xvi+
8du9S/wsg6lE57UUcaJo/EhkPAOxfS6NzcLxkx9G0ucYDG/2/r1BOF6pTO7P
iwy2+RmOCt83N388G/58iUFlsMrOAmKZIK2I1iIGL9IHPSKId013mGNdwkB+
S/y9EOL89Ijr9fcZ2GYMfTpObFnW2VBVzqDmxZ6Fh4iDuPGyJbUMinPnXrEj
fhc6mpP2L4Nj1iGrFhHfiSx7/peA9K/zQGAueR8HfZXwlBMVID5BvS+b2GKn
g0yduAAOI2fNU4g79EacdWYK8IdgvCKKmH63ZPTHXAG+ZGX27SHeYp60IF5H
gIqYnyJziYe4B3zuOwqgtzDrmh85b7SPy8+XvC2AtVvcISly3hl4jyYm3hXg
w7kl+1lynq4+2CwmVyzAmoQB5wlia9fo0YUPBbjqdc2oh/iI5ff636oFEOsd
LCwhviv/KmBbuwBXTo417SReeT/5VTqfzBenqXWdnPdmd302KwkEiPnzx/N0
Ystb1lVXRViYSqzbf454R7ZoYf40FuytpbnC+0HAab+oClkWs7PLTKyIy3Zs
N+jRYOF4q751mNwvzCfmJGnZsjhtJJm6lji2787khB2L8vA7ofrEFGezW912
FiUi/t4axO53Txnv38kCC/T9ZxHHHRzvynFn0XFw86Jucr/peEMtUz7BQszC
bN0pYtVGr+SvYSxyDDtlA4kPPZzBr4hgkWv45KcnMS8ZL11iWIjb1DE7iBdv
uReQcYFF1H95c3SIvZ8m1cjfZJHQuby3k9ynHt1e/ltfPoufj1VXvyRmsxpS
S26zaFhgWVxH/L8gwSH7EhYGZ8XFSonL9Y/KJFWS/GZst04iFlOVCtlTzaLg
uOfjM8RbZt/8oFvLonVF8/aTxD2D7x60NLIYblQT9SGWuL5118x2FqNM0lk7
YruLX+revGYRzuEdtCLOiDijl/+GhZqs7EkL4uW7nopa9bCofRG504g4wNrF
S/EDyU/yofoK4qerfnZ86mfh/NFdbxmxvcKK/JgvLJKVj6kpE18Sa5JzHGbx
4egl6fnE/eMHwjTGSH71Ng7yxLq9Ip++f2MhdcP6pzRxUNtlu9oJFqJK50Sk
iJ89WV2ePMlCeuXJqOnEUoUd6m48FkXSb86JEztm+p4zYFhcDDvyhyjx37Gz
f7Isi5NSIuTDwf8BzA0OYw==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/o+G4jPsHB70g2jBWZqmYWIdB34I+D8bp+Fc
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
n0KBvZ1uqwofFbvKVr+RpWDEnHVdbSuf1E31A5QUhbCObJppzUf1hmABL+I6
ysK11I6Pcms9QxFit8dnV+7fyUd67bYL62dRuOIx9O2uGx8eIhq1L2ZSaGiu
W6Jwio/60fiESgkS/wqvmD/BfJxpZSzxJT6YP23s9Rk+6oJZZ2WIR2NQu+si
H0tsliXtF6ewcMuTgIQoPuz+yLVLiJH7xLvrxdJpZD7jF7uviFB4kaWh2ZHB
x+PCp4eNiPmJ5XFPs/i4mcG/+k+Ywo3jvIO2T/kQ9hBWcCF+qeM78/pbPgIu
zTa1mEpBUEn85J4iMt51b7ow8ZbpaT+1SvhQC9++q1SI3D96fzz/WMEHr8GN
2kQ8NdXKWayej5DEPZucBClYR/8ubf7Ch4CEn4MKccKZS9oZzXyMH4uYNzCF
3C+c300xb+VjxLxmSjhxgOUur7k/+VA6qrVtF/E7A1bDr04+brQyMzWJbWWW
ZVz8zYd7zoL+RgEKtwWrpLb/5SNzzg+lXOLOoQPBKoN8vOIt6r9GrNUm8Gv4
HxlvpXzjMPHxmiTrEiYfQUMRjluJ378xfBlD87GJk/xQj1g8s0HZdZSPHslL
M+WJt9/yu6Y7wYdQcm+sGHFy2HQWn0/iu1mA/Cj8DzsNtvM=
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13k8FV8bAHBR9jZbWX8kZCdrVE+J7FvhrRRSKvuWUkQoSZTsiahUKklZ
i5DswoxkS0SKSLZ7Z67tznvMP/P5fs6Zc8995pzzPCPl6nvIjZWFhWXrGhaW
1ftarZ6cS6420M/iGyVF2wXL1DYVmvcxUN9RFu83ZQiX3cpOlO12BUYo66f+
IQvwV2ObVDfxgrvi1tpjLg6gdqotMkk1GNgMC6rjJE7BndC3VobS0SCBG7k9
uOgPwPWkWEw8BVw5hKkn6VchzfrBGGdGLjRtfnBJkS8B6n/HXGtVKwEW3+MD
FftzYGd2SEeXYzXMPHoWs6XgGTyUu6E99rwO+s8z6HfLC+DFJQ5jbr4W8O8J
qxHkLQJvk9zz7eIdcCjQynnPiVJI51z2HzDrhJscl7SFvryDkQnLqvWLXfDL
oSxWSOgD3ORRubcxpAd0bD2zedfUgPrzP8nbd/bDnKC+xNfrH0H7usZ/3BUD
IGEjorZ1uBaknWWqFHWGwN9nrHpYtg64HBf2FtJ+gGJPSxRXcD0UyMj9fqs9
AjtOiOw/+bgBugpqxauTfsJSnyW7TU8j/NN+6+w+MQrkcD0/SWsC7cHx8SX5
31BQ41eeOtMM1IF41vRrY9DY7Wh9ebYFiKbgU2JN43Ar1eS6VWcrePN22r2Q
nQCx3bbGH0s+Q59VuE132CT0PhJZ13WtDQILA5Mmqv+CiJIulqPTDvHY1zOc
Yv/gScaRhdk/7dC9MTxiw8lpmDv5GJYiOoBbbu/hPusZkI9tO4itxcD9ybxy
4fIMkB7HhRYOYuBcZKG0lDULjFlhtu4rGKTkDMy1WMxBbK8Y3/gbDIziU6vc
GXOQ+ztA7sV3DLTZ7LgnFufApOZwHQxisOPSZgePlTl4Q4WudCFzu8VNebDO
A/m8zpA5hEH77kgxL955YPJMyVmMYPC/v96XfSTnQW9T28Gvv9F8zI20A03m
Ib4td2vWNAbxXLRXoenzEKI28ngtCw7Lxzp5Ne7PA1vABf44ZI/8Qs8/WfNg
UD+5kX8NDgetveUdHs+DXXbO6/9YcWAm/85VLZgH2ynDWxprcfCV7Ls/8mke
cuf4Ko04cbDVqbppMj0PI13upgKbcKiJyRxnzs7D6E+Lc/HIKv2XjUto87DX
w0aQfTMO3Fd01m1bnIfsr8PCBHJtbeHVpbU08OqzbMf4cdCwenyxQIQGmhX2
U35bcBB0i3ETOIhsf8zyuATqb0hPzjShgXNCqkINss9217rt5jR4rVP5RPo/
HBp+6ktr2dBAsOd30B/kYNfpH/bHaLDO83WYnxQOA84Ox9N8aLBws3mX13Yc
co9tPyySRoMLe94miyjgYKN3N/LRPRrclnPYF4C8Isx8o5BJg8jTrLeakR36
ejbpP6SBwoP0lQuKOHAeudXu+JIGneZVR9qUcPCynzPNqqbBDRPe6bOqOGja
1OyTHKdBEMPlu50mDoM9+/PvT9DAzAinHiDfdP60ZcsUDShzjYbx1Xafhn/r
52hQPDmzN0QLhxvxnzOXlmjAXLIdvq+NQ39LL6N7Ix3SXIpmW3VxuGo0Wxiv
QwdRxmzE2G4cFNoCxLj06HDGL0xTdg8OX+1oN67tpsPPItm408gKp0mnkP10
qOyZUfiB/CVyhdfdnA7/OILlvuzFQbaGy93QmQ5+h2q35+3DoU1vm9RSNB2W
8lPObzDEgZZVl51/E/W/a7jrILLYmrMSTnF0kDjqknwF2aPxpejHu3QQntm8
YRKZ005L6EYmHeqUGjZ9NMLB0NuEh/8tHUTE25yOGqN4YRM364rpYH7FMSEW
OUkjnvNCGR1KR2SPViCPLODr+irpIJb4vFDUBIfwaEeW7EY6eD3Eg3uQ32f7
0BW+08Ff4OglfTPUn3Xz+YEhOsgI0befQeY6UzQXP0KHK3K55xKQjygxpmfG
6LAH8y//iUwvj5gonaODGmESct0cB7XO5CEDTgKejo3fK7FA/bV0nGjcBBxZ
lGzrQw5P7xt4sp4AW0uTeyvI7U4S/Zz8BFRkZS4fsMTBc/JZV7s4AXnFozOt
yE/XVjQf0yDgvJdVZpMVDrzE5NZBLQI87W+6jyIHjImdO6lLAKsB9p1C3tMS
xn5uDwH/hgsrtKxx6LpjcCDImIDp0HVWWch6EYGJDFMC8rPH7UqRcwJyh0Ms
CLhYq8XWgexpz3410pYArnN7HChkVtGWyjuOBDjTrHocbXA4x7vEw+9EQFNx
u0gAcvuKomOqCwGKlVvYY5Dv/YhfyHQjYPSpVtdbZLWnttovfAnIMZqzXmuL
g5N63+u6KAIyCG4sFbluGzdlHE1ADdWS8gxZQUDfqjWGgD89QmvLkelE5l88
noAxu6j+HuS4Shf5oTQCAg9z+/EfwmHu1d1g1wwCXK5GhUghH8mubfyVSYBh
66SqKrJ05PYzfx8SIPW5IskU+b3x+KOFlwQ0KL8zuYwsuUt4LrSAALybO+s6
crSC2X6WNwRMHirMSEC2XZ8/xF5KQGesfOIT5FLmgEpsOQFq5UJxr5HFZtaH
ra8goPl+rOo75PFOXzGBGgL083YFtiJb1eV4ptUS0OZ3m78LubgEfy9ST4Ck
ataJgUOr60HjqFQLAeG8YtOTyKM3T+flfiZgbuGJ9jyyWUgKKdeB5nNJfMci
spATmaLSRcDKBi4ujsM4LCiYMsa6CXj+37nz65EHyIxjD/sIcJMdusyPXFX3
t/LYAAF69WFiwsgP7+79T2CIAP+n/zsqgXzNKSGibZiAB6GX1aWRzyiO/Iwe
JSCFlZErh2zK0Di4b4yAqKUfRYrISvXX8xb+EDC186CTKvLGxB7uor8EvAnV
zd2JPOck7+01TcCmkqbrWshdiiEdMnMEvK/hYNNFLmN8Vh+iEdASxy6mh5xR
L5GcTqL4bOjG9JFDE/0I20UCvhnekNqD7Oxce4RnhYAQLcUNe5ENlAQq6igC
Pk93pq5aZsFNPIyVBP9bdypWzdlQFq6zjoS8HQGhq55I5BqZ4SDBdOZW3+p4
bc6Ohi+4SfjM/69zN3Kh0qunp9aTYNf2/Nzq7ycuMDnFN5HwyhnL2IUc1GDj
2c1HgqtQoLsO8pGkR213BFG70eMuTWR9F5qq6VYSks0CBtSRJZQPJrKKkjAQ
O3tVBZllMY1WIU6CZNDOWgXknw1/HIIkSWi9ejBHFrkhSf+dijQJyiogug05
zyVedFyGBC92FQ1xZJ9FtR/HFEloidHU40O2bYw0EFAhYdzfV54XWTO5K7dN
jYQZtrGSdavrQTnYfZ82CXVsX56SaL0MLDa3LuiS8IzhwTODXNUoqlKkT0Jt
bvT6ceRrJ6vnZPaTQEtOmOhGPquy2X7oAAnbnz+qb1tdf0uuZekHSagRuLq3
DnljCnsojwUanxzlKkTOaLJcN+tAwgFRW64o5Csp2WdfHCWhvbes6wKyi+ts
86njaPyJy3s9kGWWk293nyRh617nKWvkQtWBLZVeJPzifvxeCDlpWflykC8J
j1L/XeZAvtAcPqASQMISJt9Pov2vf0r64cOLJGwreRe0eh40pHoo3Igk4YyQ
mXQi8tis2Qm+6yTomk4KRiBzWiomZN0gYeekZ7EvshnbX3pRHAlNXKZ0c+QO
X++PP1JJGNSSjmFB7jXxO6L3kgSd6zTqKDq/Fh7b3Kp/RULImi9lB5BFKLUq
m0LUnhErpox8vGRW+mwJWg+ZdX+Z6LwclgqcTqomoZx124sHyBOLQdFTX9D7
jYh/2o7OZx4Hh3fB3SQ8aQ7TKEJWeqP9l62PBI1qM580ZJ+zpK3IIAltO4un
nJDnvwSLG4+j959yT3AC5YPl/JDinGX0/x8obZ1F+WODc8TIYRkGnKiSdapF
+UjZ9YJtpxwDGvfuvJaFbOHmWWOjwIAduPWJYORYT/sHlqoMWFlilVdGZg+W
P2a8iwEStC07kkxRvZaA43qWDCgtjvtig/LjdK3UR6kgBjh4T9onofy7oUFI
LeciA/xTKpmnkVWaebIlLjPgwreq49rIXh30UNFwBqguZer2ovw9/q1ZV/Am
AxZkX/lvRf5B8y/kzGLAt795jFgDHDDZ2uzpOgZ8z3Ht1QX0/LpeqdxGBozu
FE1cRvUE5+jU4yMtDKgoCSGqkfc9FM772MEAPq/kaiPkQlH/wqR+BvR9brC3
RPVIwibJjzozDBDZ4ffMQh/tl8UrI+GiCyAh+SOOVweHzrZdMpsCFuC9PPtS
qjIO+XqDF1PPL8D34bBb5sg3nkW2iF1cAC8F6KFQPbY7otVXPhQ9bzKbcxb5
ieaJ9wbRCxDyOoPSQPVb8P2r1kEZC1AqK8es3oH2v3vjpf7aBXD1Vc99Io3y
6Vr79lz+RUh5VjyavxXVnxYimieFFuEcU97GFFkkZeieuPAiqAhIBvxC9WqT
jIdbqsQiGCUJ9oshyxqHL9+QX4TyooE9MYKoPrn5XMETFuGX2XCALR86jzYy
o9U9UbsAR0wBD6qPRJ5BVe0inHpc6nR/BYN0VenSpz5LMN00sSiB6v+oLgMb
to3L4JS641JDNQYFR+69Ha1cBjMWH5ez9zHw80rS1XNegbx58wipYAzyw8s+
OTFX4I3u17JAe/R9EcC3hfMlEyRF0joi1TFQ8/oXF/eKCRGV6bvZkHXPtLBu
LmTCxiqLiSg1DEyPRf4TLmFC/ycunmhVDDwM5uoVq5kQNbkSHK+MwSu+zvPW
X5gQZAWNz+Ux2Fl0tzN1iQnTmsZFEtsw0HvlbSLKZML7ck16nhQGBs9Mq7JZ
KFDii0nVQD58f82LvHUUWBqzL5tKYnA+yj/i/UYK3r9tDgyRwKDssK3aoDQF
O390qs6JYLCbtum2jAUF6yOkXusKYBA9kk/SrCgQGioLr+fHoAMzOVlnS8F3
0+U1h5FdX13VPPU/Ch59NJP148Mg5sxMf44rBZyh13cXbcKgq7dDTuwSBe7V
LFbO6zGQaPS8OxlCwc9qg2wGLwZnSziW3odRoJ515Wsi8uJdaD96jYL8d79Z
WngwkDR/fT7tDgVpWj0tB7gx8Ppw+yPfUwqabNrd3DkwKH2poDiSR0HOtwIt
fmTqXkPym5eo/XXAnip2DBIvMM/avKEgeI/H5q3I5ao+G25XUtDcpvT8G/q+
ZJXgDj5RTUHC1GmBBGRz3qfDSrUofnZ1S0bIg+Pfi1sbKRCc2O9ZyobB2keW
jlxfKMhoFlZ/yYqBVcKfut6vFHh3SA56IaeFXVfJ66VgdjsZrIas4PhhjfEg
BYGlHa0f1qD4mx71FBpG8fjwsugG8gcdetevnxSU/OSfOIxsI6Ccd+0PBf8c
uprnWTDIYG3ebPeXgrgJ9fpG5J8zp0Okp1G809eWPUBWGmL5NTdLQd5Ho+Fg
5AttmVa1NAqKY1+mOyDXVOiW3yUp0HZhWusic7/okjq5SMGDf76FEsh26X63
1FYoqP4k8J0bOSual05RaD52LOjC4P8VzNek
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(2\\)], \
\\(x\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["0", StripOnInput -> False], TraditionalForm], 
     NCache[{0.3333333333333333, 
       Complex[0.0076750385287811754`, 0.]}, {0.3333333333333333, 
      0.0076750385287811754`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "8"], StripOnInput -> False], TraditionalForm], 
     NCache[{0.6862745098039216, 
       Complex[0.057703959859499984`, 0.]}, {0.6862745098039216, 
      0.057703959859499984`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.0392156862745097`, 
       Complex[0.16471963993832694`, 0.]}, {1.0392156862745097`, 
      0.16471963993832694`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.392156862745098, 
       Complex[0.2517905251066118, 0.]}, {1.392156862745098, 
      0.2517905251066118}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.745098039215686, 
       Complex[0.262667584622212, 0.]}, {1.745098039215686, 
      0.262667584622212}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {0., 0.27194268376899067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662740027646262*^9, 3.6628367866128397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Covxy", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "4"}]}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.662734657605571*^9, 3.6627346578820257`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.662734658548483*^9, {3.662734699297*^9, 3.66273471348697*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(xy\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Corxy", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662738832252561*^9, 3.662738873442569*^9}, {
  3.662739507538682*^9, 3.662739527495575*^9}, {3.6627396059975967`*^9, 
  3.662739609213725*^9}, {3.662836796049951*^9, 3.662836805320606*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVjmk81AsbhpGEsqbtJC12IUWS6NGKElMICaGsUUpSnEJCiXTsJComkZ3I
Ms802SuisS8xdqMhe2j+b++H+3d9uD5c9067a+eucHFwcKT/3f/Jvb8t5Y4d
CaLtLbR3FU/iCrFLedbtAqzm3Bd7MXQS714ptirWsgMd2SP52pcm0UNlFXOv
3lX4uH1V8cTaSVSx/xoQuccbCsgf5kNcWPjUN9/wuGQQiMSQNmcc+YmsOcuU
gsvBYDTvIUGV+IkG11ZP7yKHQPnvx/36KxPIb2cezSkfCg1xzxKzSybwkyTh
ZrMpAmzpTZo+6hMIfGmF4tuiIW3Gpk//OBNZVXes6BXRoLSlkREpy8QXAYY8
T6xjgCIQtH3vWiauLC+YLSfHgq+Z1Yr193EsZZ1a7tiVACzmnLe14ziq06eO
xMolg7PO+/ry52MYa/RihDchFUz2a1sI7B/F8G1SO2R/pYLCTOaDWIlRDGK+
NT+hlwaVG7UXLHhH0Su4qM5/Pg3WG4WuDuwewfP4JXPp3Bu46PFhxTh4BMX2
LF+bWJsBLgFTWkrDw7juj186v30GnD2svKeteRi5P/P0y5VmwDbPqOp3OIwz
DqLnrjhlwpHFrQbt8cPY/EJerbfyHdiSk49tJw1jhKD5YuO/OVDaOJHJ/DSE
Id09Kix6Dij4XSbzFgyhTkueGs/GXKDL+erpvRpCjdcH3KTccuGavdArJf8h
lIVjvZe25oE9SLEf6Awhz+0L1I7b+WCsK1zHUTWIVcMhgZ9ViqA7QqE9lTGA
5LzCt7ctikBgzfoY1dYBDPHta5AMKILO3hbf1roBNBDV2OL7vQjCzu4eNssb
wGbtkSxFr/fwXtMCjvkPYF/UibawsmLwFa43fSo1gCtHuRRIJ0uB82EMq+w2
A3sFlI1W3Euh5oJnm4cbA6ntFp7psaUgqdZ9St2egQ/c8ygcY6UgImZ0fNyQ
gfwJl4zzQstgh0gNdUmGgZt+UXxFm8rhVMyk7suOftyX7NNIt0TY36wYqabX
j9Njv4oKHyDwG17kyoR+zFdzeh6VieCddoC5+0A/qtabOJssI5QaHGoykOnH
hKUYTpczVHgx8OEp7+p+TJS+njg2QYUKp4R3ppV9mOSzq3F0Nw0KDrhSqPp9
yE6xorUDDYKUzzXYHO1D6+q4olpjGpTscCB4DvWhhIjQ83QfGtiIDge5Kfbh
C/Kyk9NnGrwMXuMfL9SHyU10rlGXTyDA5/Samv0DX8oGq4+8rQRJSSlqVHsv
jsvV0YKxElLPlzo8qe/FfQprjeRaKoH8LydElvciTfGpozNHFRxl14s0pPQi
Y29sHPN8FQgbDSjOOfeilNabpclV1XDorEDoL3YPkkk1lEWrGtChb5Ke2deD
GXfW6PKL1oPcy2vPzChdODRRYXZQph5onNk64oVduOOSp5OTZj3knBzzG3vb
hTEn+x9V29XD3Zsx/knRXRiwvuxLQEE9+Akcl3Fx60LLLPdzyyafIdO22j5U
ogvX9bdYTcR+gYsD66uTgjrRTS/Vs2FbI/x7bHKwxrUDI2JtJbJVGwHjTo2R
7TqwcFiiNky/ESpGSHxhFh24FBi/9cytRjjoUOjprtuBQR/DaZ+/NMIGU8eR
QMkONErSChnU/gbsSl3WQnc7Om6Ube2f+AbR8Rzvik3aMY53xaP7VDM0KP/z
ttO0DRnjZygCS3RIGrFKrUlowUdrleOFfNrAIahWarUaHfe+HYuS2tcJocEC
HLt7mlH9oep2/rJu6BJX483DJpS0kabsPvADmLMGSiq0b8hn+ftw7mwfCAb2
aAo/bcRsadnhfHUG4M2TE2/6vyI9m7YNIwdg2a90p4fqF2Sp59s4jw9CSLt6
4t3MelTvHR1dlh+GG0rmEYdN65A4FsYVFzgCYU9qrmxerMH5Wm978dpRmFsl
xjhTWY1u65pNMmTGwYlqeEQkpAo7DO+TWu8xoVc8TOXPpUq8mXszchwn4CTv
sSSGxScM+9biwCvOArfHE57uejRsFbrvL2g7CSwHpaY1xh+RX/awcYfRFKjW
NufXulDROW1GKXdlCiRjr5++xaKgTYGB4nLSL5B2KROSUK/A6JTu6XqDaWBV
xFG7HMrwRFgMxXlxGpSkHyt2v/uAYXyzWb5xM0A4clct/lOCG66EXBE7OQvN
qe1eNzzeoxqJqrNjdBbCvPPvbfxZiF81d+1cDpoDarjmeR7vAiRzl9VdUJ2H
XIuHp+WYebjReiFamT4PSqRw6c77uVgd46IQHLAAzxPoec5LWSho488wll4E
n/gbbyz2Z+I3GVryZOUidLi52io/TsfmrwelhW/8hqho57y8/DR05TZtSF2/
BCpCkeYzm1/j8X/eAIW2BGlC26VFzVIwbo/ke7L7Mmjc8vH1dUzEB/SjpFVC
KyDvc5fhlRKD2ebx+YPlK7Dte5ir+etneP1qpIamzR8gke2sDrk8xnf3iz9Z
s/+ASaJ7Q5R+AHoxuZ1FONmg4P4q4otsAOqYnROsXMUG9d++fqI8AUhX/mku
z8cGySdm2nU0f1zp2cWaWc8GPf+WB4Na/nhaK3zzI3k29PCfyRlS9cPxxctu
BSZsoGyxarxh6YtyN0Q38Way4cjasezbWZ6ocpX15EkWG1qHAgMeenmihkM9
l0guG+xK46kl4In6FwJYW4rYsG38fEhE8010OTpdtRvZYFkuVbtu6QZmiTZ7
Gn1nQ6z/lUEvkgfuK3jWHLP899/ZwcFbmldRM8tNbyubDd8Sn7iLtrni0Tf6
lGQOAgQP79cR9HRF40TOjPTVBLj7pDJlclzQ84GHf6kQAee2J9vNyDtjsfFZ
lV5JAn5I3xwu2+eAWrPC4dIGBIjdbC2fi72EQYx3C7OGBCjMTi5Ya1zCxm96
tpVnCehY2izYlG+Ddll+avZmBPR43WfUalpjiMNUZ4odAedbWcUeFyyR3t4o
K36HgP9k7EsSu01Rosb1GdOHgJLD9elBqqboWLRmufQeAS7edjvYoSa49Awa
LAIJSLzO+ynjiDHuOJ3jGfuUgNMapDU5VBJerQj/KEomIEEt7DlZVg/fZyrs
ZqQT4GpdnZAjoItEfHVUXubfHvdascaFE/ifF9uRlEfAqq1zdRntx7Bkj7tg
eDkBRIRaumgyIJcEv7cVEnD3eXbsaJ42nl5H7lekETAfliIR03AIe0d7Cj/X
ELCkv4UdLqOB3K/OWPJ9J+B+1nI6zWIvGkaMVba3EJDTy6e1IWQPxt57qJze
TkC4w2DR3C1FVLCs4NTtJYD7FWxpfSmDnvoWrhv7CXhUlXJHkyGJFQfm6EMD
BLTNHf5cpbMTSWJK6YFjBEgrvhfXoGzGBK46EZMJAvhmmiYETorhwNRlH8lJ
AuQN9k5v2CqMij84hqZ/EeCfNpU8FcyLXl+fG9Jm/3rZHtfg/ziRWqZR8myB
gLSD4d2GnfMU/gz6TtslAg7+vMCnOzpKMYm7HqryhwDONNlA4VdNlKSgdXME
QQB/Z3ntUx7/iv8Bkh6ScA==
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/flfNWskBGyYJwgC3F1ldU85fNT/B8RlPnA=
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVj3k41IkDxoWtMDuSsm1LQhIKpSTJay0bORKK+EmuNOMqIffVrHTQTFRq
K2qdI0ckLRvSyBWKybGFDDmHQeMIzXf9/nif93n/+Lzv8yq4+dt4CgsJCfmt
6P8uuq8zPdTNGtEpzIY+Lg/LhKIG39cRtIDIq9r9PIR5ljmX6buhcOxZNv0D
D+e1RMZ3m/rAP7j8N0olD1ruzXHJmiFQve6UTafzcCOi2MpYKR6l+hQVpg4P
EMt8Jit3C/4ppnU5VyZx5+jD4bX3MuBsVhGmaTqBJLltW1WmM/C/w7Fp7w9N
IH4818HENBM7c6ZIEdoTCL5c2hA7l4k7Keybo1smcKLqbd6iTTZ0JXXXbJ/j
YoPmkj9Xgol5F7XqzVlc0MkOC62RhThto7cvV4KL2qEEWpNWKUKpCv0m42PY
kxbeynaqwvB8esBu8igeqVzWGc5loaHlgZdPyDCYoWsOi69vBLv62qTS3Bf4
mmYEtsi1Iqdygd9TOojUtcvnPx1pQwxrzXG5qAFwxiwrf1xk48LjU3tdKBxc
kdC4KxneiQLy9GrRyH7szh1N2bbnX5CSDr2oon+Gzh/a8uIVn9B0sfdTZEIf
lFyUK9X39+HMoNWeCKleiDl9Myjif8a9c8aCj8mfUKCsMlSsw4FGiIouzfgj
2AU1clXJA6hrv/mmm9uNSZ1iF8rYIFI8KbXq+V3Q6R0ZWVIdgudqrooEoxPE
b4nCqbRhdIdsI0VSOzBXH+IuWz+CTFKq4Sr3D/Altdkxt4/hL8vt0vnWbHRb
RVt3RI2j/6zpTIxlOy4UXUgeq+IibnXv/SH3NiS++3BmrewkNgW1Sxb5vUeH
ZHQs2ZWHXoOB93/S30FcxcC2++gUcqaZmyJCW0HJ/LqraHklzy68rvi7GS4l
FjuXHkzjsnFK9BbFt7iV/mmm0WIGln5pOrEBjTBJvF1JWZiBU6dZsjq7Holi
/PyI1K/ooT0f9DpZh42eCZ4bfuejs/Pm8dNvarHXutpw6wgfLcEfa3vsWGjW
U1RYip+FxqKDZtRUDbJEKxoctedw6kQHm3/hFWROzd/SYM9hfuBBspdMNd7c
pqpdjptHWLtXT6jRS5BdYjm2ygvwCXqtvi+lHO+216TxWAtQkwqypn4vQ1vz
AeV1Ad/QRtlydqNeKbxFj7dkSC9CcYfTwatPi2G8ORuVNYuIbtnR90qoCKma
Ss+z/JaQ1tY6n9/NxCW2kbWI5DKOWLL69+/KQoHD3eLBf5ZB6f9r+vmRRzjn
k6yr5/IdAYbUreVDd/Ekuuz1KcF3hG3qa9/MYyB4XJQitUqAqYdX05eaGTC0
tyGzRARQknc0G3vCAFtjwkFVTABqRmDcNJWB5R7Fya/SAjC6H3Fyh+kw10/a
dEVVAMn5cOG8uhsYW/DwLbETwFui0S+09Rp2BKz/aW2eAPkls2TGYRq0fCav
X88XgDwtk1UgRYPumUZhqSIBEnazhqY+XoKZY9zkz6UCkCyO+QyeuwSq0Uyt
epUAv478PJp0Pw7569sCj7YL0Kgr66u5FIM9JYy220sCSBPKkRGF4dDL9zX9
RSDAfcM5VRGrcBhlm1WmCRH4GqxiOMwNg+2fq5g5PxBwtpluaFQPQ+Cl87Hl
kgQyf3Ad3lgQgjLbY1q9SgQO+cU1hdcGQZ+/LknZgsDNKEwc/f0c4jlP5vlW
BBz65K/Iv/dH6ztTV9YxAiG0srxuGX+45cfsdbcnIKxo/4iU5YuEM1P/prsR
SH9RMtXTTgW7q1VFNpTAOue0h+TznthS580YDyfgZUm6daDJA16la5bKowi8
5Wf4jW73wCIDLSdpK7w68wKP44at5oWBd24QaE3siDfxOw2fl0mv1mcREBe5
qMcussfzPDV1Tg6BqxX1jqb3T4C4+yblaR4B7ezTHZXXjuNmsMDL+ikBdcOo
cPGLtnih6UdO+odAIb0iOV7kKIS3iIc4VxHYrTQS0SFvCXNSVv/OmpX/Rswb
zSbm6B3pedZUR+C2mSKnpvAwRB9bOom1E5DRfJJHEf0VVvRRVtcHAmkBMVWL
XAPcifpDI6eLwGPpLo250YNQc3q56nAvgSSWtH3cHh0Emp30luknIFnArfGO
0cbL/bPsLwME9imcbR4e14L1hl05tFECsqxB4zjjHbgn3CBlx13Z517XtuMo
YWDKI1yJt9KnUX/g7zvy2Nkn9GVmmsCkUWSTieQmBDfft6rhEzg44GHxk74U
qit0XzDmCVjL3HL9QlkNcSZbwXWRgOFMkF2N74KBXeq5a1rfCez6yPtma95v
8CCeNEsQBD4bUHe8K6Yf+g9lH3wN
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
GfaTiH76wf8Bllk4pQ==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
qu+/OtQz+PT0/wCnrUjF
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
E7LD81teELds+vf/Auw3Urs=
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
HCEE753VxlTVsg//H+m6Rb8=
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
vI/jnH3u/x3oSio=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IQQL0SIizq+L/v4/X2xLJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(xy\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{0.3333333333333333, 
       Complex[-0.8761991844522272, 0.]}, {
      0.3333333333333333, -0.8761991844522272}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{0.6862745098039216, 
       Complex[-0.5939060564767621, 0.]}, {
      0.6862745098039216, -0.5939060564767621}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.0392156862745097`, 
       Complex[0., 0.]}, {1.0392156862745097`, 0.}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.392156862745098, 
       Complex[0.24428690815648155`, 0.]}, {1.392156862745098, 
      0.24428690815648155`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.745098039215686, 
       Complex[0.1176389027169478, 0.]}, {1.745098039215686, 
      0.1176389027169478}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.999657067065967, 0.999657067065967}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.662738855715088*^9, {3.6627395272771606`*^9, 3.662739532345084*^9}, 
   3.662739613459598*^9, 3.662836811086557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<Correlation(X,Y)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Corxy", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662738832252561*^9, 3.662738873442569*^9}, {
  3.662739507538682*^9, 3.662739527495575*^9}, {3.6627396059975967`*^9, 
  3.662739609213725*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkHk4Ffgehy1nOhiXLFPcoSFZC6c0pnqavlFN9r1pcDExQpFOaTnpZiwh
uxCiQRdjLTsJX2FoeCyjYx1Zju1YTzh2zu82f3ye99/3/Sg6e1u5CvDx8bl/
3j+kfNuXznC2gA7ZjJ+ldzm4Qw5qcb3sgL8kfMpwm4MPXCsdKk87Q2Am+5jf
JgfpNMG5owaecC8iNWBmlYM0l/aAOO37oJhOra5Z5GD0wxKz80rBoGOnaOUw
ykEQziqTk08AM6qeeEgjBxPNf5sWep4J/9FrPPPwCQf/mAoNaqOVQ3HEzTuL
whw8lubbybRH+N7olkxxzCJmqIboTuc2wZL+s6Ot+xcxj0G9KCLZCu1B3oKW
TxfQyyDTp0O+E4xE3WVCpRYwSWiHPmTUDaEBwZSCkHlkzZrW/WuLCe3xhiI9
23P45EutZHHfPoik6CjK3JvDo7kz8YeODYJlb6rzi4lZ1H2s843I2yFwdEnp
oNvOopKTct3h70YgRcqFXt4xg8L2m2eKuKPApVquxXw7g6+UVadKdFmg3zKq
RstkI/NVgzzGjUPqO53DHwXZuKhb4uQxOwEZfate+S7TqDvMZm+rT8EmO3Oi
rm0KyblIgaSgaRCWFK2lHZrCtff3XeTes8GirtH6yONJ9BLttslTmYXWH7Ni
dnsmcMDMz6L30Rw8akFJadUJvF10O24W52FbXLbPyH8cI7t6rgrJLYL3oVko
a2Vhr7ifv9gVDpS5tMNTeRaKqJ6xHjD/BCGblRRH+hh6ZK1oFu18gpZ6UcW/
SkfRqdTkyPaLJRioG3R34xvFhPSh5VaTZaBVzRsG3x3GC5HP6jw2lqH5bcj3
qotDGCnMLXyYtALigQ9e/8/3b/zKNdRV+gcuxCek9X0zOYDHLerPKrC5YJi7
Z8PPtR/bTx1U3A5eBZK0nzE404vZlLd/2umswYPJzZMWRj24z3E9QYu5BsMR
J/IrGz9g87NrGiEB66C/lyH7XrYbxZz8WdbKG0DRzRu/FtaFXSoNaZymDbgg
9IWyFaUDu9tPKu+9tQmURIVxbnErXqdc6siU2oLmagV+t5QWPP/v36GuYQt+
ZNy2+c2wCZO0lSqyb2yD9g9OE92S7zCQqW8hKL4DbTFjWe4XavDVT8klEzU7
oHBWp75yXwXe9Iw7ccppF/5LVdVfiSnCAr/KRkfeLmTqLU0brmXj3TmKhwQ/
D8r/KsCVtmw8e9lKrEmQB65DMPMqIxuZWgs/qQvzIMqepNuaZuPOx4OLK1I8
sNtT/yYwKwuNT0fJPFHnQXMln8x520yc3fjFq9SGBw7HqcS8MwPVbknuF8rn
gbSJscbqVjLSPBcjIgp5ENHWE7JWnownrrYKSBTx4Na6dLgKPRkN7QIWZct5
8ObimwEpdhJe01/+4zDygEXLo2n2J2KhZLeP+QceDHndoea/S8BjpbHdz7Z5
EJ0pbxtfE4unCr0MvubxIJ3nJqryKBb1fzesS+Mj0FvY5bECsWidwp+X8wWB
lJfuaueaYtAnkO5fLU5g9nRFdFhaNFZaW9KGlQhoqLVrp02G42nu3ihlEwKP
07pZlYNBGMwqWOeaEegqdchNcg7Czi6DK02WBBbOFlfozwWic+Gvx10uEwg7
mOi3wwvA0KufBtOdCYiGVamY0/yR2d+pKscgMG9z+eIQwxcPtFyPnfMlEDyW
FOyQ9QDdyqnb1Y8IGKT7sLu6GbgVCx22QQSSKQreBTr3UcH4tU9iNIGx4HZT
WbE76Fkb9U4ym0Dtz+/7m+1vYEW+xmFWDgG+8L6bVzc9kSQ3xxfnE1i2Oien
nnodn97luVkUEwiMqd4NWXLHKu0bYlE1BKr0JCQkR1xQ4IDIfQck4GdEXVXL
dUZj0eyxIw0E5BKfy3szruAw+2NZWwuBYdGTenQ7R6S8NLUX/vC5Z7NlK7Lj
EprFzDT19xAQVxG59LLLGhMfPdbK6SfwqxrzQBrLEjXsa/kvDhOg5dgnTNBN
0MfQ9vq+MQKaLDWVuF0DrP1ulTk5TmBn5Ol+1dcX0EJaMydohoCeaquUhCzg
c4E/JWzmCdC/Nrkn4nsSxz/94qvEIVDG4WYJnzmOR0b4JpeXPv/B0pzpZ2rh
3fZUswYuAS5jyYf9lQrWvz1RFbtOwJOvXWCkSg5F8piKV7YImO41DlswFUeb
pJvhtF0CLyLkqN7qa3UvgkVXCfnsk/hwD881q/b/u7F+Kg==
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
QQB/Z3ntUx7/iv8Bkh6ScA==
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/flfNWskBGyYJwgC3F1ldU85fNT/B8RlPnA=
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVj3k41IkDxoWtMDuSsm1LQhIKpSTJay0bORKK+EmuNOMqIffVrHTQTFRq
K2qdI0ckLRvSyBWKybGFDDmHQeMIzXf9/nif93n/+Lzv8yq4+dt4CgsJCfmt
6P8uuq8zPdTNGtEpzIY+Lg/LhKIG39cRtIDIq9r9PIR5ljmX6buhcOxZNv0D
D+e1RMZ3m/rAP7j8N0olD1ruzXHJmiFQve6UTafzcCOi2MpYKR6l+hQVpg4P
EMt8Jit3C/4ppnU5VyZx5+jD4bX3MuBsVhGmaTqBJLltW1WmM/C/w7Fp7w9N
IH4818HENBM7c6ZIEdoTCL5c2hA7l4k7Keybo1smcKLqbd6iTTZ0JXXXbJ/j
YoPmkj9Xgol5F7XqzVlc0MkOC62RhThto7cvV4KL2qEEWpNWKUKpCv0m42PY
kxbeynaqwvB8esBu8igeqVzWGc5loaHlgZdPyDCYoWsOi69vBLv62qTS3Bf4
mmYEtsi1Iqdygd9TOojUtcvnPx1pQwxrzXG5qAFwxiwrf1xk48LjU3tdKBxc
kdC4KxneiQLy9GrRyH7szh1N2bbnX5CSDr2oon+Gzh/a8uIVn9B0sfdTZEIf
lFyUK9X39+HMoNWeCKleiDl9Myjif8a9c8aCj8mfUKCsMlSsw4FGiIouzfgj
2AU1clXJA6hrv/mmm9uNSZ1iF8rYIFI8KbXq+V3Q6R0ZWVIdgudqrooEoxPE
b4nCqbRhdIdsI0VSOzBXH+IuWz+CTFKq4Sr3D/Altdkxt4/hL8vt0vnWbHRb
RVt3RI2j/6zpTIxlOy4UXUgeq+IibnXv/SH3NiS++3BmrewkNgW1Sxb5vUeH
ZHQs2ZWHXoOB93/S30FcxcC2++gUcqaZmyJCW0HJ/LqraHklzy68rvi7GS4l
FjuXHkzjsnFK9BbFt7iV/mmm0WIGln5pOrEBjTBJvF1JWZiBU6dZsjq7Holi
/PyI1K/ooT0f9DpZh42eCZ4bfuejs/Pm8dNvarHXutpw6wgfLcEfa3vsWGjW
U1RYip+FxqKDZtRUDbJEKxoctedw6kQHm3/hFWROzd/SYM9hfuBBspdMNd7c
pqpdjptHWLtXT6jRS5BdYjm2ygvwCXqtvi+lHO+216TxWAtQkwqypn4vQ1vz
AeV1Ad/QRtlydqNeKbxFj7dkSC9CcYfTwatPi2G8ORuVNYuIbtnR90qoCKma
Ss+z/JaQ1tY6n9/NxCW2kbWI5DKOWLL69+/KQoHD3eLBf5ZB6f9r+vmRRzjn
k6yr5/IdAYbUreVDd/Ekuuz1KcF3hG3qa9/MYyB4XJQitUqAqYdX05eaGTC0
tyGzRARQknc0G3vCAFtjwkFVTABqRmDcNJWB5R7Fya/SAjC6H3Fyh+kw10/a
dEVVAMn5cOG8uhsYW/DwLbETwFui0S+09Rp2BKz/aW2eAPkls2TGYRq0fCav
X88XgDwtk1UgRYPumUZhqSIBEnazhqY+XoKZY9zkz6UCkCyO+QyeuwSq0Uyt
epUAv478PJp0Pw7569sCj7YL0Kgr66u5FIM9JYy220sCSBPKkRGF4dDL9zX9
RSDAfcM5VRGrcBhlm1WmCRH4GqxiOMwNg+2fq5g5PxBwtpluaFQPQ+Cl87Hl
kgQyf3Ad3lgQgjLbY1q9SgQO+cU1hdcGQZ+/LknZgsDNKEwc/f0c4jlP5vlW
BBz65K/Iv/dH6ztTV9YxAiG0srxuGX+45cfsdbcnIKxo/4iU5YuEM1P/prsR
SH9RMtXTTgW7q1VFNpTAOue0h+TznthS580YDyfgZUm6daDJA16la5bKowi8
5Wf4jW73wCIDLSdpK7w68wKP44at5oWBd24QaE3siDfxOw2fl0mv1mcREBe5
qMcussfzPDV1Tg6BqxX1jqb3T4C4+yblaR4B7ezTHZXXjuNmsMDL+ikBdcOo
cPGLtnih6UdO+odAIb0iOV7kKIS3iIc4VxHYrTQS0SFvCXNSVv/OmpX/Rswb
zSbm6B3pedZUR+C2mSKnpvAwRB9bOom1E5DRfJJHEf0VVvRRVtcHAmkBMVWL
XAPcifpDI6eLwGPpLo250YNQc3q56nAvgSSWtH3cHh0Emp30luknIFnArfGO
0cbL/bPsLwME9imcbR4e14L1hl05tFECsqxB4zjjHbgn3CBlx13Z517XtuMo
YWDKI1yJt9KnUX/g7zvy2Nkn9GVmmsCkUWSTieQmBDfft6rhEzg44GHxk74U
qit0XzDmCVjL3HL9QlkNcSZbwXWRgOFMkF2N74KBXeq5a1rfCez6yPtma95v
8CCeNEsQBD4bUHe8K6Yf+g9lH3wN
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
GfaTiH76wf8Bllk4pQ==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkGk4FfgCh5EmZCnF5EZE1jgOTYrk16AZYiw5prLksSWKHEyRRhGGe1GI
cKcw174UYij7VkaJy5FlZDm2Yz3iULbzv90P7/N+ez+8h11unHfn4+HhufqV
/5v/eF9GkIsVPtkOOLlssLFF5Ckcbzsc8ZD45dMaG7fdKx0r9V3wtvxE1r0V
NujUHXNaJtfRTLMTy5hng+raEZaoGYh35fOPmMNsPLhTZmGsEAnh0Y2pX5rZ
gGB2ubRMEubHJ/b0xrDx2PLptEBaFiyylJzocmy0TkWFv6VWYGn4ctYZ3UVo
pwd3MuzrEXBqQXLIfQGZyr/pTOe3gBW12yw2bR4FQbt+FBJvh/rG7U6lpjl4
m2QFvJfpxCaPVU7f5ixSBLboQ+e6YVOnO52nMgvm7E91IhsM3K7qmv3oMIPo
3ZRUseA+aDZ5tlVnsqCVP/PoiPYgzsjq7+gfmIZOxDFZoeohaIlYjU0fnoaC
k2Ld0RMjeJmtyse+MQVB+3WDEs4oVttOHDcvncQzReWpMh0mOK4q3ybzToLx
rEmmPnEcakv98bSzE1jUKXPynJ1AaXpgfFrcOHSGWaxN1SmEFfsuLEwyQYxi
+VLCp0HxeWfbQGVirS3QVbqNhaRm2yJq9Bi8hbtpBUqzsB89UEbtHcWAxV2r
DyFz+L7kSBNbcRT+Jf6Js/XzOEqT7LbaNYLYrt4rAtKLcB4MD2bmf8QHsbuh
os5sDLkVvW51H4KQsoHNgOUShIakYpiqf8Mze0WjZGsJux1PNcr1DsDphbn6
5pNP4KmwTuxJ6UdSxtByu/kyBLTXX9YY9eFsbHKd55dlGN1asgxf60WsIKf4
TsoKBFwEG6QbGZBwj3Lf/wMHhQ9poyL+PfjOquGMHIuDPp05i2T9bnToyR/e
jFwFvUQtP1rkv8jhr/7L7tgajlUd/w89phOSlz8nURhrGLSLEKxV78DrZC+1
38I+Y9h6ufL5k3aIOoUybRS/wPhO5wcBgzZ0KTWls1u+4NTIwYaqxVZ0d+gq
7vFbR69oeKeJfzOu8du+z9q3AVN5Wtk+1UYY/yMXdU0biOvog6NPLVI0Ff7M
8dmENlXBL+hlFe4zDK12iG3B8qANTY9ejmcXU8smarYgYSdyxYj1HL7XE0/q
OW0jJbaCbjyTi6K7lc2XudtwMPJiij7MwM05fs+9vFw0/+zV+Cs9A2cunBdt
2cFF6LCE2fr5DDAoCxdVBbnY1swskpTMwNZH+cWVfVxUMU8XDuimw0w/7kC0
KhebWrL3tOyeYPaLm/cLGhchxi/KxEtSoeIn/q1AIRcR2SuRXdUJoF5fjIkp
5uISpThT+J8JOHmlnW9vCRdCT9/c87qYAFO7sEWpCi6CNX8IjVmNh5fhcuvR
ei68rFc9fLXiUSzeHWDZw0WQv4cX0+kBtF/EdydvcqHAIhfSE6OhV+xtcpDL
RUu1+ukk3WgY5prWpfMQKDqFWI+NRMHm37wFeTsJ0vbaL4ZoRCHgPj30lRjB
243gqYl3kai0saYOKxBsTzMMRWTCoc/ZE6doThDOL9WmJR6CSGbRZ44FgeZy
Tf2626/o7DJxbrEmkDc4eXCi6g5ciu9953qBIDfhgDrFLRhRV5YGM1wIhJsY
46QtEIz+TmXpIIL+jH1hmp3+OPTmWvxcMMF9x+LVjeP+8KjYtfkqhCC0MydT
46kfNuLx/lI4QaaEXuiwHx1yZs8DHj8g6PKZC1Nw8MH12rhG8Zyv/e2p71XG
3fFnodpRZh7B31zFkfxxN5DU149KCwlUbhUWjEy7IuEm18OqlOB8q0xj1aYz
qjR9RONqCJ47nDVRyXUA3yGhQMd6ApOwFclzLDuYCeeMqTd9/UWpmf5Z+xKG
WR/L374hqJW9eoPCtAX/Hz/ZC/YQPH5A00+lW8Li4UxLfy/BHmqFrW2COR6H
RFDy+gnmpBPTeNtNoWZfy/vjMEGEohcfJ9QYAaaXrkmOEZhrLcu58xui9sQq
Y3KcIIAromhtDFjt18gLnyF4PWi6+/drOkjj+2svbZ7AuielbuCyNsaX3IIV
2ASt5yg7JagaUB/hmVz+RKCcHbPTW08JNzt+t2jiEHzjd1UtuF8WDdUnq+I/
E0j5Ss3JVuyHUAHjsPMGwam+VZuq+G9AS/H9F3WboKT0VskfHLbBk0jhVUII
qu+/OtQz+PT0/wCnrUjF
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
E7LD81teELds+vf/Auw3Urs=
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
HCEE753VxlTVsg//H+m6Rb8=
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
vI/jnH3u/x3oSio=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IQQL0SIizq+L/v4/X2xLJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox["\"Correlation(X,Y)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{0.3333333333333333, 
       Complex[-0.8761991844522272, 0.]}, {
      0.3333333333333333, -0.8761991844522272}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{0.6862745098039216, 
       Complex[-0.5939060564767621, 0.]}, {
      0.6862745098039216, -0.5939060564767621}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.0392156862745097`, 
       Complex[0., 0.]}, {1.0392156862745097`, 0.}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.392156862745098, 
       Complex[0.24428690815648155`, 0.]}, {1.392156862745098, 
      0.24428690815648155`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.745098039215686, 
       Complex[0.1176389027169478, 0.]}, {1.745098039215686, 
      0.1176389027169478}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.999657067065967, 0.999657067065967}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662836819026228*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{800, 519},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 3455, 117, 215, "Input"],
Cell[3858, 132, 410, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[4293, 146, 650, 22, 56, "Subsection"],
Cell[4946, 170, 475, 15, 46, "Input"],
Cell[5424, 187, 159, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[5608, 194, 776, 22, 58, "Input"],
Cell[6387, 218, 529, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6953, 241, 808, 25, 45, "Input"],
Cell[7764, 268, 3893, 76, 248, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11706, 350, 912, 32, 54, "Subsection"],
Cell[CellGroupData[{
Cell[12643, 386, 1227, 38, 84, "Input"],
Cell[13873, 426, 976, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14886, 463, 1031, 34, 63, "Input"],
Cell[15920, 499, 3629, 71, 248, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[19598, 576, 171, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[19794, 582, 1274, 38, 84, "Input"],
Cell[21071, 622, 145, 3, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21265, 631, 2118, 72, 185, "Subsection"],
Cell[CellGroupData[{
Cell[23408, 707, 1379, 40, 84, "Input"],
Cell[24790, 749, 1229, 42, 60, "Output"]
}, Open  ]],
Cell[26034, 794, 1151, 35, 69, "Input"],
Cell[27188, 831, 1902, 65, 67, InheritFromParent],
Cell[29093, 898, 1840, 65, 64, "Output"],
Cell[CellGroupData[{
Cell[30958, 967, 2329, 75, 104, "Input"],
Cell[33290, 1044, 4782, 90, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[38121, 1140, 1554, 49, 70, "Subsection"],
Cell[CellGroupData[{
Cell[39700, 1193, 1512, 44, 84, "Input"],
Cell[41215, 1239, 1308, 43, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42560, 1287, 1597, 51, 78, "Input"],
Cell[44160, 1340, 6998, 126, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51207, 1472, 409, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[51641, 1483, 1332, 39, 84, "Input"],
Cell[52976, 1524, 169, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53182, 1532, 2174, 68, 108, "Input"],
Cell[55359, 1602, 2584, 77, 117, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57992, 1685, 457, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[58474, 1696, 1332, 39, 84, "Input"],
Cell[59809, 1737, 141, 2, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59999, 1745, 458, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[60482, 1755, 942, 25, 47, "Input"],
Cell[61427, 1782, 1465, 42, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62929, 1829, 4037, 124, 184, "Input"],
Cell[66969, 1955, 862, 24, 58, "Output"],
Cell[67834, 1981, 862, 24, 58, "Output"],
Cell[68699, 2007, 4006, 121, 112, "Output"]
}, Open  ]],
Cell[72720, 2131, 3844, 118, 147, "Input"],
Cell[76567, 2251, 8045, 226, 322, InheritFromParent],
Cell[84615, 2479, 7823, 234, 291, InheritFromParent],
Cell[92441, 2715, 7791, 231, 118, "Output"],
Cell[CellGroupData[{
Cell[100257, 2950, 570, 17, 53, "Input"],
Cell[100830, 2969, 99, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[100978, 2976, 474, 8, 36, "Subsection"],
Cell[CellGroupData[{
Cell[101477, 2988, 2288, 70, 132, "Input"],
Cell[103768, 3060, 900, 29, 57, "Output"],
Cell[104671, 3091, 901, 29, 57, "Output"]
}, Open  ]],
Cell[105587, 3123, 92, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[105704, 3128, 171, 4, 28, "Input"],
Cell[105878, 3134, 381, 13, 65, "Output"]
}, Open  ]],
Cell[106274, 3150, 11653, 356, 524, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[117964, 3511, 344, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[118333, 3520, 35909, 761, 1577, "Input",
 InitializationCell->True,
 CellID->518614895],
Cell[154245, 4283, 64241, 1041, 550, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218535, 5330, 350, 5, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[218910, 5339, 22390, 539, 1242, "Input"],
Cell[241303, 5880, 106779, 1863, 480, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348131, 7749, 350, 5, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[348506, 7758, 18053, 447, 1060, "Input"],
Cell[366562, 8207, 34247, 631, 315, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400846, 8843, 940, 26, 87, "Input"],
Cell[401789, 8871, 7249, 187, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409075, 9063, 215, 5, 28, "Input"],
Cell[409293, 9070, 1614, 45, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410944, 9120, 8396, 232, 457, "Input"],
Cell[419343, 9354, 169312, 2952, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588692, 12311, 5499, 148, 376, "Input"],
Cell[594194, 12461, 61431, 1029, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655662, 13495, 6599, 171, 352, "Input"],
Cell[662264, 13668, 106080, 1772, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768381, 15445, 274, 7, 28, "Input"],
Cell[768658, 15454, 258, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768953, 15465, 215, 5, 28, "Input"],
Cell[769171, 15472, 218, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769426, 15482, 159, 3, 28, "Input"],
Cell[769588, 15487, 361, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769986, 15499, 5535, 134, 267, "Input"],
Cell[775524, 15635, 42181, 742, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817742, 16382, 5664, 138, 279, "Input"],
Cell[823409, 16522, 102118, 1734, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925564, 18261, 2941, 82, 146, "Input"],
Cell[928508, 18345, 64635, 1110, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993180, 19460, 197, 5, 28, "Input"],
Cell[993380, 19467, 115, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993532, 19474, 3021, 84, 161, "Input"],
Cell[996556, 19560, 44810, 787, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1041403, 20352, 2948, 84, 148, "Input"],
Cell[1044354, 20438, 44674, 784, 230, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

