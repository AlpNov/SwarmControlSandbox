(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1116168,      21919]
NotebookOptionsPosition[   1109420,      21689]
NotebookOutlinePosition[   1109779,      21705]
CellTagsIndexPosition[   1109736,      21702]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Haoran", ":", "  ", 
    RowBox[{
    "why", " ", "is", " ", "my", " ", "mean", " ", "and", " ", "Yvar", " ", 
     "sometimes", " ", 
     RowBox[{
     "complex", "?", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "code", " ", "examines", " ", "the", " ", "mean"}]}], "Title",
   FontSize->24], 
  StyleBox[" ", "Title",
   FontSize->24], 
  StyleBox[",", "Title",
   FontSize->24], 
  RowBox[{
   StyleBox["variance", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["and", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["covariance", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["of", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["a", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["very", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["large", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["swarm", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["of", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["robots", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["as", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["they", "Title",
    FontSize->24], 
   StyleBox["  ", "Title",
    FontSize->24], 
   StyleBox["move", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["inside", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["a", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   StyleBox["circular", "Title",
    FontSize->24], 
   StyleBox[" ", "Title",
    FontSize->24], 
   RowBox[{
    StyleBox["workplace", "Title",
     FontSize->24], 
    StyleBox[".", "Title",
     FontSize->24], "\n", 
    StyleBox["The", "Text"]}], 
   StyleBox[" ", "Text"], 
   StyleBox["swarm", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["is", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["large", "Text"]}], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{
   "but", " ", "the", " ", "robots", " ", "are", " ", "small", " ", "in", " ",
     "comparison"}], "Text"], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{
   "and", " ", "together", " ", "cover", " ", "an", " ", "area", " ", "of", 
    " ", "constant", " ", "volume", " ", 
    RowBox[{"A", ".", "\n", " ", "When"}], " ", "they", " ", "are", " ", 
    "pushed", " ", "to", " ", "a", " ", "side"}], "Text"], 
  StyleBox[",", "Text"], 
  StyleBox[" ", "Text"], 
  StyleBox[
   RowBox[{"they", " ", "flow", " ", "like", " ", 
    RowBox[{"water", ".", "\n", "We"}], " ", "want", " ", "to", " ", "know", 
    " ", "the", " ", "mean", " ", "position", " ", "variance", " ", "and", 
    " ", "covariance", " ", "of", " ", "this", " ", "swarm"}], 
   "Text"]}]], "Input",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "THe", " ", "circular", " ", "area", " ", "has", " ", "radius", " ", "1"}],
    ",", " ", 
   RowBox[{
   "The", " ", "area", " ", "under", " ", "a", " ", "chord", " ", "at", " ", 
    "height", " ", "h"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6619020894035683`*^9, 3.661902099965561*^9}, {
  3.661903034692583*^9, 3.661903057795144*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Area = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h"}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
   RowBox[{"ArcCos", "[", 
    RowBox[{"1", "-", "h"}], "]"}]}]],
  CellChangeTimes->{
   3.661906942790473*^9, {3.6619069768243093`*^9, 3.661907027719968*^9}}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.6619032320138683`*^9}, {
   3.661907068320734*^9, 3.661907070177676*^9}, 3.662951128767085*^9}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"cor", 
    RowBox[{"(", 
     RowBox[{"X", ",", "Y"}], ")"}]}], " ", "=", " ", Cell[BoxData[
    FormBox[
     FractionBox[
      RowBox[{"cov", 
       RowBox[{"(", 
        RowBox[{"X", ",", "Y"}], ")"}]}], 
      RowBox[{
       RowBox[{"sd", "(", "X", ")"}], "*", 
       RowBox[{"sd", "(", "Y", ")"}]}]], TraditionalForm]], "Text"]}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.661904202003482*^9, 3.661904202012471*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "h", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.6619070028103437`*^9, 3.661907013812645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", " ", "h", "<", " ", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"1", "-", "h"}], "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["x", "2"]}]]], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619068610354433`*^9, 3.661906867678734*^9}, {
  3.661906927469046*^9, 3.661906997181922*^9}, {3.661907770772512*^9, 
  3.661907782548327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
  SqrtBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
    SuperscriptBox["h", "3"]}]], "+", 
  RowBox[{"ArcCos", "[", 
   RowBox[{"1", "-", "h"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.661906942790473*^9, {3.6619069768243093`*^9, 3.661907027719968*^9}, {
   3.661907776396598*^9, 3.6619077840407543`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", "h"}], ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Dashed"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662951072036818*^9, 3.662951114361601*^9}, 
   3.662951163462722*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
D4MeFDw=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV0Gk4lXsXBvCN8OxoLrU1kKRUJLY6TnH/pQGlhEgkQ5RQGgy7pFI0IaGS
JBk24WTI0JEpOqGBTOUUQjLlNbUNGZ7n7PfDutb6fbrXdS+3P2niKMpisa4L
5//b0LGrurjbUUd4lpcoZGh3PjO3/8bZBlaxZ+tTNq0jI1Uf/JxjBpZs7eb4
LQvwd6Gvq5eSDViVTXVml1dAVWt+wiPOEbDen6BHJFTBmtcdxsg5g3VgTXjX
OBfVvQV+dkonwHor++hO2Gb8+VEjPZRzFpds7287qbUdK7SjE0ujPHEphMl5
b2IA6WTqsUCOB1b1bx92khGarjQFmSv5ovivf/XmXDBF8cNSzSDOVbBitPVN
6EPg1nhnrLTyR3Fd5batrrZ4SqmqFEYFgPw+G6bRbodQjwjFfrkbKI5/1eP0
6wgc9rrN26cUjEtHbY+VXnPBlcu3vG9ywkFEMrMtVTxQuMQpxzwvHJckayp7
13liLJcIFKzuIsZzwQNrNS+49g2ffBl1DzFH7DzubeXBzMr2aK/cA8Sckbgw
FHoBSpqa5nuUooV9JMq7u17BkbP9nBuceLSs3/FyXWMQNMRCz2W6x4OYx348
ER0M0VDu169l8Yh5Omufvv1tPE7jRal6JmCgaVWWpVcIvvSIydXV8MGys0kW
nxGKvXaLFOUCn8Lddnv/NOu7+HOPrmo2/QwDc9JLd1yMAhVu8GRgMAvG35+X
eBnzMfFH68QT2WyMcZ/oz7nDR1+Tt7mpXjZeFN692lHNR+2qJKmc8Gzob+qT
1TNLRPRLCc/zm3IwcE6kssAqCdzvpYYSF3JxXTGr6opHMmzVdQSLqTwMKAfk
vq55htyP6jt3LitCl6LjUPT8LBy40vil9NZrdNm5pPToF+JkxhmVCEEFBLlL
VRSs/sFQyKdyEZEqmD0J7mdlvUP5qzdFVVtq0ClzY7NWUDWceQYzLHvr4Fa6
wPnH8Xq8YqszqW6f4QtyP1zzX/DjXtOyK7/AXll7KOxSE4hMQazps0bMz5n1
va2uBSpljS/erPmGVE9PbnB/G+qIad/TvhZ8yUhYnaH/A67TXWrq1dpgfvlC
ftK1TrxrsCiYGfwd1hvmn709rQemOw60tre3g1dTMm+WXy82xtyyiFHsQPNH
rTUazX1oocPqjl3sRN7aIMedLwfww6AqTqa0C2qevcq0YBDpD77xqpf3QHVP
6q+tu38h4brYDeVzP+EkXZkhGiPAsMPBHqeXvWiTT+J8bh6G1LYAk4yFfTim
VpQ7ojUKn9k/pFut+8GKTFjxzXcM0oVrWZ+NBlB91auPX/Ab2p57p0rHB6DW
9XamxsIJRMUHxq2IGkRVgB/TdGASNvu5H9i7hpBhdbNMImsK2fWOYYUjQ8j/
NKVRJMFA6326aMe9X1A1vGUkJ88i8tudhsO2CaAbYevuXc4imlzNO1kdArSm
xKZVOIiQb0NBFXH+wzDO/Do+fVyE9Grs8+eoj8DiYccmv0hRovRTpUekdgTx
jZlW51XEyGtFjxr3y6NQ8LXodKsQI7fr6h1MFMcw2/LTZl+LaaTftPiO6Osx
5NW1ycz8No1k7l+gp3XqN3xOTn31dhMncR+uPGqbO47Z7VbcO/8TJ6Nl1ufn
lozDnjkccvW0BGm5UzQ8+8QEFH5bcF36JMhI9WaO38xJbDl54LqVlSRxD1co
5uVPwvuYq8quCkmy8IPC7HabKbgXB3xavYoipvWpk0voKSwW26Eex6OIb6Lr
eBWLhv2nc22D5yiSxFs35idG48yFd0Xwocjk0tRfXRSN5AhxpsGXInynlJ6s
eTQijnr7iFylyPjo04bdyjTy56fVKgdTJFY2McvHjEarpE5izROKvO91ylxv
QUPfeGOQeBxFRguV0tssadxrv3dtUzxFdjvwU/QP03DvnpYTwafISEpC7Pzj
NNQLDFv2plDEUDs+JPUijXTpgYiQLIoMHX7i2phMw/L52iCzNxQZvi+uafcX
jY5Wsdz9ZRQZq3Ke+pFGQ16eHtlfThEG6sH9WcK8Wqts07cUkZYvTRMtojF3
JXfWtkqKrGxpH1pdS6PvlJHBaD1FDtiu5nlM0AgO6M563E4Rq4hA3fEpGn6B
LV6Xf1DE5uMA+yKLwfaS0DX2HRRxJH9HXhdnED5P21K+iyKn5Q3zH85i4KzM
pN/+SZHAFhfm1QoGDo8kWv8YokiRbZr/zN0MSo7dvZhEUySvynVX8x4G9Km6
tHMMRXJ01sx5to+BjvUcsovFJqlLEqKMLBi47Fl9ulOETSIbIp8H2jOQ0tz+
XEqcTTyMA1qn8xjY6NISLCk2cS/SS/xynsGEtadpjtCuqiJuyb4M8saX5h2X
ZhN7aZ8xg6sMDjcXFH2YwSbG5adm3bjNoOVju7jPbDZZSw5pS/IZSC7OvH5m
AZsopcmKfU5ioLuO70TJsInCsoZyfgqDJZH63ZFCL5o0MduRwaBfvSXzxUI2
kXih7+Kfz0B10fZ5nzhsIrpKYsP+IgaZP53rzWXZZOpu6YhiCQNj6RUNdUIL
zuj4vS5jcD7q2KHyxWzSup77QKyWQaxr8r5bS9mkMXrQprZe2PfySUmB0A0z
0hTjGhicfXTe1HIZm1T+VE7f2szAcFesMkeOTd4e7PSY28pg46nbx88I/U9F
/Oa27wysS26mVAidnyhXdrlb2E9Z3UFneTZ5IdMUuK+XgZFXjH6m0M/9I02W
9zNoeqC2fkToZwKLRYODDHZ6ivG5y9kk2WFBc7GAgZu/gZKb0Ak1NXEhowws
N/DGooWO0Q1xth1nwCvNlK4QOirdaL3alPDf5srAbqHvy0kNMwwD03g9swmh
/wMrfxO0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 3.141592653574244}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662951091776312*^9, 3.662951115092743*^9}, 
   3.662951164234808*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Xmean = ",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
      RowBox[{"3", "/", "2"}]]}], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]],
  CellChangeTimes->{3.6619072925689*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, 
   3.661907333796159*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661907087024309*^9, 
  3.6619071260464077`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", 
   RowBox[{"h", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, {3.661907115432617*^9, 3.661907127876395*^9}, 
   3.661908961475361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.6619072925689*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Uv5I5z8nNgo2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.9996319449080772}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661907293527741*^9, 3.6619089626260567`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ymean = 0", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, 
   3.661907333796159*^9, {3.661907473915421*^9, 3.661907476002047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661907087024309*^9, 
  3.6619071260464077`*^9}, {3.6619074784520063`*^9, 3.66190747879558*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, {3.661907115432617*^9, 3.661907127876395*^9}, 
   3.661907479515522*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Xvar = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"64", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
     SuperscriptBox["h", "3"]}], "+", 
    RowBox[{"9", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", 
         RowBox[{"ArcSin", "[", 
          RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], ")"}]}]}], 
   RowBox[{"144", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]],
  CellChangeTimes->{3.661907979149125*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
   3.661903569346698*^9, 3.661903591750774*^9}, 3.6619074045984163`*^9, 
   3.661907987297773*^9, {3.6629513121747932`*^9, 3.6629513121748753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{
        SuperscriptBox["x", "2"], 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
   3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
   3.661903575700144*^9}, {3.661907377163926*^9, 3.6619073847908773`*^9}, {
   3.661907494294286*^9, 3.661907511396411*^9}, 3.6619079268060503`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
     RowBox[{"ArcCosh", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], ",", 
   RowBox[{"h", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.661907944304906*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
           RowBox[{"3", "/", "2"}]]}], 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}]], " ", 
             SuperscriptBox["h", 
              RowBox[{"3", "/", "2"}]]}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ")"}], "2"]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661907930560644*^9, 3.6619079518020678`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
     RowBox[{"ArcCosh", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}]], " ", 
        SuperscriptBox["h", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
       RowBox[{"ArcCosh", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
     SuperscriptBox["h", "3"]}], 
    RowBox[{"9", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}]], " ", 
         SuperscriptBox["h", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
        RowBox[{"ArcCosh", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.661907961556899*^9, 3.66190796849686*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "16"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
    SuperscriptBox["h", "3"]}], "+", 
   RowBox[{"9", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
  RowBox[{"36", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.661907979149125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
        SuperscriptBox["h", "3"]}], "+", 
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}]], " ", 
           SuperscriptBox["h", 
            RowBox[{"3", "/", "2"}]]}], "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}]], " ", 
           SuperscriptBox["h", 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}], 
          "+", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
      RowBox[{"36", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", "h"}]], " ", 
           SuperscriptBox["h", 
            RowBox[{"3", "/", "2"}]]}], "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"64", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
        SuperscriptBox["h", "3"]}], "+", 
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"4", " ", 
            RowBox[{"ArcSin", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], ")"}]}]}], 
      RowBox[{"144", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<xVar\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Dashed"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.66190361702921*^9, {3.661907414218561*^9, 3.6619074187042303`*^9}, 
   3.6619080130968018`*^9, {3.661910136369815*^9, 3.66191014208914*^9}, {
   3.662951230308854*^9, 3.662951257958886*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
2eW/IPE/pcmDow==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
AYn/Af9SiXs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"xVar\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.24999999999628802`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661903617732884*^9, 3.6619074196324673`*^9, 
  3.661908013784397*^9, 3.66191014312823*^9, 3.662951259999094*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Yvar = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"12", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], 
   RowBox[{"48", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]],
  CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
   3.6619036788959303`*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
   3.661903569346698*^9, 3.661903591750774*^9}, 3.661903652308301*^9, 
   3.661903685918302*^9, {3.661910314127285*^9, 3.661910314127383*^9}, 
   3.662951272324242*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"1", "-", "h"}], "1"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]], 
        RowBox[{
         SuperscriptBox["y", "2"], 
         RowBox[{"\[DifferentialD]", "y"}], 
         RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
         SuperscriptBox["h", "3"]}]], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}]], "-", 
     SuperscriptBox[
      RowBox[{"(", "0", ")"}], "2"]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661903655762889*^9, 3.661903674876617*^9}, {
  3.6619074396361837`*^9, 3.661907443056487*^9}, {3.661907530146758*^9, 
  3.661907539601375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
  RowBox[{"12", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
       SuperscriptBox["h", "3"]}]], "+", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
  3.6619036788959303`*^9, 3.6619075619871902`*^9, 3.661907601981011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"ArcCosh", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
           SuperscriptBox["h", "3"]}]], "+", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"12", " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], 
      RowBox[{"48", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<A\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Dashed"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.66190361702921*^9, 3.6619036955176277`*^9, {3.66190787538957*^9, 
   3.661907879099435*^9}, {3.662951277301814*^9, 3.662951298182444*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1nlYTd0XB/AGojRQpJSKBkQDykvFN03SXIaopJmUSnOiiUg0IBqlKJEQ
IiUNigq9nYvoJ6VIJd403Hvubby/3f3nPp/nPGeftffae+21ws3fzpOPh4dH
nZeHZ/bfzHOAUfvLc1uxhOvGkndH0X9/r9s3aSO4aop5V0hoQnJBW/Jj6d1w
VAyfyBHXR0V1lG+YijN43OLZ7stMob5lceE1aQ88upb9MWOhDXgkfl3myntj
TCJi/imJ3WD8eRHnquKH0B8ZGcNL9kGH2lh6SToYD/PZA8XCLlDcmltUnxMK
XaeWahURNwgXz7/OlI/AmghBYw8RD3Se6kzaqxIFcScNTyWRw6jNrtdOkj6N
+NXKcV/nBEDrffhDZcd4bAhhbVox5xjuzFdXq845A1Pb3a9N+ANxKSRD6a/8
OSTK/AzR4g2Gu/VRCVuVZDhn3FDImgzDqdjz4YnSaYheEdWXPBiNalmvp3sr
0+CtVP94OCgGnHJ95krHKxi5MeieOBoD3yGW//Ocq/AZr5RI+RuL3Y4uh/7I
Z6K4NulJ58ApqGhr77VSyUV12j7F1Paz8Aj+K31OugDf7UYfm5WkYCP/peOP
AgowEXjqbI10KvguaXV0NBagxjf0ks2BVFx/EJGjHlqI4PxxffveVHwZ5Jf/
+P4W0rtV+dkjF2HtKqUkf+EOcu6Or49ZkAYdq+3qT2buY4Gf1UDFPxmYn7Yz
f3ikDGxaVOGwTh7KqQ07dsjVAHPfS9GVRdh36uuX+vMN0OtYvMW2/T78Hwap
ZTCb0a+hE3lf+TFGUz818fK2IjZq2uho9FM01b2uadV7D3rII1t0pgLeETtF
9v/5iGNO9VtVdr5AneAGbsnRz4hPY7Usl6vFrZsNM8uUv+CBz+OfEbfqoC/5
4sau+1+hz5psaJtTD7XGr89eq36D2Mypq36WDfiov2vozlA3JPGN1y3/FXyF
fN63aX6HeKlZn1Tra7xtt38hmvwDUwfK++3nNmGXyb6e3t5edJ69/pNXuRmb
8s7b5yn1ISymssBk5Rt0z1z+eDi6H/rqex4/UnqLnztbb0rWD2BpnuuqCoF3
KM38FsFYMYg1Q2vTN/1+h8IE/nNrjv+Gm/iSqyLPW8Bydxj0ev4H2+fp6Nv7
/YsFRmfsHi4dQpBPx4thhVacWPhTuMfpL3zFgl/zVbRCuHotz2fLYWTLvp2z
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
gsbhtUV3TJc4sHkgySR0HJv1i+0HdRlYv7WqfVfkOBpLGNYmxKVK7n5+8eN4
Kf6RO0H6w/tjpZk3M8cRvcYkyJ70k8UXLYZFXo6jq5dh3bme5K/l1LXv4hOo
qPhjs1KF9NuNTpHiLyeQbRs26EL67e6LNayFfpPoCD+1dP0vCjRDVzpOdAp+
ObVqek0UAtJW1kZUTeFjYEWj7A0KS1tWLux1nkZx+ZGdOicp7GormZKdmYan
yd9Mgf0URg/m+34tnkHEkLph8kYKrPS52q73ZlDbY7RXkJjT6j3988EMojX1
753eQIGLDcl/y2Zg8c5A9cR6CsIK9Q/4amag9CM43E+DgnJ37+jqDzMYqZte
57qWwj6X1REhkzPokpupiFek4JhxYfvENHke80hqAbEzNSwYzcOFeL5CR+pK
Cp76FVkJc7loTJxKubaCQqCCWVW2GBdGTMevz+UpXOj24dYpcpGQWaooIkuh
xuVBvKgFF63pyvnCSyhUtvqad1lxcSZAoCxtMYWn21QX3bfl4rCVdsxy4hLZ
whxLey6Kjt+wXi9BIas96/EFNy6WuJrJui2iEGJzpkcoggurCp5Nv0XIetYY
Fn2J5KLXxNs2hthXnfdocRQX4cLejpLEbsInODtPc7GLr93cWJiCTdMxsXMp
XAg/DF72QIjCWv0DW+fd4oJtPPPh6TwKKg+W8X++TeJfx1x+gHilXHvTrbtc
JIs+LplDLDVlt9vkIRc8x8Ke2gtQEHhm6hNfxUW5i4ib6FwKfKsE1u+p4WKL
1O7ymjkUpq/U00ovuRhudssIJGYGbYtraOTiuM/A2k5+Cj0aWpn8H7h4btwk
1MhH4WvuiPOHNi5OKkqonSFuF3mgdLOdiyEXN9sdxP/+XlNq0MXFvU51disv
hTcO/SHiPeR5dUhxOvGr5gLd7z+4CLY43OBKXFUk3xj7i4uLI1IV0zwUnkl2
XrD9w8XZXM1frcSP47PsVvwl+fxzT72Q+D7TXmpkhIu/jM3/niQudl/SVcsk
84sZl3cgLnz//mYqmwvPVR7ZOsR521O9XSa4ONiaNCxPnFNqqaE5zcWhL55W
C4jT5RewuFwuePfykB+F/wOy/3H4
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
22zZ0AeD/wNyR9sb
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.2719426940412973}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66190369656746*^9, 3.66190787996672*^9, 
  3.662951298841151*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Covariance(X,Y) = E[X Y]- E[X]E[Y] =  E[X Y]- E[X] 0  =E[X Y] = 0\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", " ", "y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661904405593017*^9, 3.661904408864791*^9}, {
  3.661908105599658*^9, 3.6619081084505777`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.661903197216589*^9, 3.6619035786948957`*^9, 3.661904466318161*^9, {
   3.661908109729389*^9, 3.661908113343824*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["h", "2"]}]]}], "+", 
        RowBox[{"3", " ", "\[Pi]"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"ArcCos", "[", "h", "]"}]}]}], 
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "h", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "+", 
          RowBox[{"2", " ", 
           RowBox[{"ArcSin", "[", "h", "]"}]}]}], ")"}]}]], ",", "0"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["h", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["h", "2"]}]}], ")"}]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], "2"]}]]}], "}"}]}], 
   "}"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["h", "2"]}]]}], "+", 
        RowBox[{"3", " ", "\[Pi]"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"ArcCos", "[", "h", "]"}]}]}], 
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "h", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "+", 
          RowBox[{"2", " ", 
           RowBox[{"ArcSin", "[", "h", "]"}]}]}], ")"}]}]], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["h", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["h", "2"]}]}], ")"}]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["h", "2"]}]]}], "+", "\[Pi]", "-", 
           RowBox[{"ArcCos", "[", "h", "]"}]}], ")"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.661905152783251*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Correlation(X,Y) = E[X Y]- E[X]E[Y] =  E[X Y]- E[X] 0  =E[X Y] = 0\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}, {3.66190818330054*^9, 3.6619081846989727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "h", "<", "2"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"1", "-", "h"}], "1"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["x", "2"]}]]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["x", "2"]}]]], 
       RowBox[{"x", " ", "y", 
        RowBox[{"\[DifferentialD]", "y"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
        SuperscriptBox["h", "3"]}]], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6619025778856363`*^9, 3.661902652913597*^9}, {
  3.661903170906258*^9, 3.661903195637085*^9}, {3.661903575100444*^9, 
  3.661903575700144*^9}, {3.661904405593017*^9, 3.661904408864791*^9}, {
  3.662058019483017*^9, 3.6620580474076366`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.661903197216589*^9, 3.6619035786948957`*^9, 
  3.661904466318161*^9, 3.662058057040784*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotate Correlation Matrix", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619080509435*^9, 
  3.6619080554062757`*^9}, {3.66190818330054*^9, 3.6619081846989727`*^9}, {
  3.66205807280935*^9, 3.6620580795249567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "0"},
        {"0", "c"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}]}], 
   "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.662058490788466*^9, 3.6620585542368097`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
      RowBox[{
       RowBox[{"c", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620584936766453`*^9, 3.6620585548825703`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], "}"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.662058236566896*^9, 3.662058263602379*^9}, {
  3.6620585028026342`*^9, 3.662058503094388*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Beta]", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
     {
      RowBox[{"Sin", "[", "\[Beta]", "]"}], 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503935384*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Beta]", "]"}], 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503945734*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "h"}], ")"}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6620582395137568`*^9, 3.662058264082687*^9}, 
   3.662058503954541*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
         SuperscriptBox["h", "3"]}], "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], ")"}]}],
            "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.661905598200919*^9, 3.661905629640276*^9}, 
   3.661908251947041*^9, 3.661910331659224*^9, 3.6620579412024937`*^9}],

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "<", "h", "<", "1"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
             SuperscriptBox["h", "3"]}], "+", 
            RowBox[{"9", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]]}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                  ")"}]}]}], ")"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"ArcCosh", "[", 
               RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
          RowBox[{"12", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", 
               SuperscriptBox["h", "3"]}]], "+", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
             SuperscriptBox["h", "3"]}], "+", 
            RowBox[{"9", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]]}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}]], " ", 
                SuperscriptBox["h", 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}], "+", 
               RowBox[{"ArcCosh", "[", 
                RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                 ")"}]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
         RowBox[{"12", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", 
              SuperscriptBox["h", "3"]}]], "+", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6620579894257927`*^9, 3.662058001852796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[ImaginaryI]", " ", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
             SuperscriptBox["h", "3"]}]], "+", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "}"}]}], "}"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.662058139552994*^9, 3.6620581424760027`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "h"}], ")"}], " ", 
            SuperscriptBox["h", "3"]}]], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
           SuperscriptBox["h", "3"]}], "+", 
          RowBox[{"9", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", "h"}]], " ", 
              SuperscriptBox["h", 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
               ")"}]}], "+", 
             RowBox[{"ArcCosh", "[", 
              RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
       RowBox[{"36", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "h"}], ")"}], " ", "h"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[ImaginaryI]", " ", 
            RowBox[{"ArcCosh", "[", 
             RowBox[{"1", "-", "h"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "h"}], ")"}], " ", 
             SuperscriptBox["h", "3"]}]], "+", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.662058143714192*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "<", "h", "<", "1"}], ",", " ", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{"Covxy", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}], 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Varx", "[", 
         RowBox[{"\[Beta]", ",", "h"}], "]"}], "*", 
        RowBox[{"Vary", "[", 
         RowBox[{"\[Beta]", ",", "h"}], "]"}]}], ")"}]}]], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662058973741911*^9, 3.66205897627253*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.662058960985138*^9, 3.662059085251431*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calcs  (contains initialization cell that must run before the demonstration \
can)\
\>", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.661904699817528*^9, 
  3.661904700408017*^9}, {3.6620610354126453`*^9, 3.662061049396125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", "0"}], "}"}]}],
    ")"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}]], " ", 
            SuperscriptBox["h", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
           RowBox[{"ArcCosh", "[", 
            RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], ",", "0"}], "}"}]}],
    ")"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.661905003441337*^9, 3.661905074236294*^9}, {
  3.661908141335641*^9, 3.661908147740679*^9}, {3.661908988508297*^9, 
  3.661908993442408*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.6619050075715113`*^9, 3.661905074585012*^9}, 
   3.6619081484611597`*^9, 3.661908934978176*^9, 3.66190899446649*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}]], " ", 
       SuperscriptBox["h", 
        RowBox[{"3", "/", "2"}]]}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
      RowBox[{"ArcCosh", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.6619050075715113`*^9, 3.661905074585012*^9}, 
   3.6619081484611597`*^9, 3.661908934978176*^9, 3.661908994476111*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.661904880903648*^9, 3.661904922130698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Meanx", "[", 
  RowBox[{"0", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661909035315221*^9, 3.661909039468647*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox["3"]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["3"]}], "4"]}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.661909039913217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Varx", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], ",", "h"}], "]"}], ",", 
     RowBox[{
      RowBox[{"h", ">", "0"}], "&&", 
      RowBox[{"h", "<", "2"}]}]}], "}"}], ",", "h"}], "]"}]], "Input",
 CellChangeTimes->{{3.662952431837008*^9, 3.6629524339608393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.27194269409487615`", ",", 
   RowBox[{"{", 
    RowBox[{"h", "\[Rule]", "1.4291422537777079`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6629526901092157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Varx", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], ",", "h"}], "]"}], ",", 
     RowBox[{
      RowBox[{"h", ">", "0"}], "&&", 
      RowBox[{"h", "<", "2"}]}]}], "}"}], ",", "h"}], "]"}]], "Input",
 CellChangeTimes->{{3.662952331182115*^9, 3.6629524101097717`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.662952342203782*^9, 3.662952351512643*^9}, 
   3.662952384446653*^9, 3.662952564673664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Varx", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], ",", "h"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1.4291422537777079`", ",", "0.27194269409487615`"}], "}"}], 
       "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6629522897621613`*^9, 3.662952307696643*^9}, {
  3.662952730417983*^9, 3.66295275126768*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
22zZ0AeD/wNyR9sb
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[Large], 
    PointBox[{1.4291422537777079`, 0.27194269409487615`}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 0.2719426940412973}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6629523081780863`*^9, 3.662952751866459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Covxy", "[", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", "h"}], "]"}], ",", 
     RowBox[{
      RowBox[{"h", ">", "0"}], "&&", 
      RowBox[{"h", "<", "2"}]}]}], "}"}], ",", "h"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Covxy", "[", 
    RowBox[{
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", "h"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0.9170848796751496`", ",", "0.0907759942557099`"}], "}"}], 
       "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662952894702053*^9, 3.662953003521702*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0907759942557099`", ",", 
   RowBox[{"{", 
    RowBox[{"h", "\[Rule]", "0.9170848796751496`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6629529115958843`*^9, 3.662952966480063*^9}, 
   3.662953004142926*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV13c81d8fB3CjRJRQVrJCJCOr7cWPvqVoUElKJEVJCCWJbJGMFsmIUpQR
996oSEhLRlZlZHZxF1nJ+B33n/t4Pl7nnM/5fB6f877vq3DivKUTDxcXlx43
F9f89y4nev3bASfD01eWVrl8siz7nXvoRKeUKeRe0h13iclDXLApplDqANpe
vLMoE9FGcelV14sqdti+5f5OD8mN0Ny0/NEDqZPQFj8W3b7UCFxiAwlzci54
+fCr09dlpqhnvAlyUHHDq+phbUHRndhcp5sfL+WF8WrzvXoC+7B6W0pWRbIP
pn41pVXyW0Iomz91VM4XT5p2MqYWHUB7cPuNQypXcevVKk+bhYfx9n6F/g2p
EFy0zzPu+Hcceg2XCpRtQyGpe1x/77Q9nvJrapQmh8HxCv/OoCkHxHvfU2LL
RWLS5bizw7gjHPeeE9uvEgOhFuVEXsZpBF+LunRd6hZ6xuvbWr6eR6nMKeqh
kluwWlY0ouvkjkma0aii7W2IXTC52NftDlfW2PlXyXfQc9qfe2GHBw7Y2p9m
yCWi/MVlGYNvF6Cir39oj0oKUm9V+dsXX8RJL7ZUpFQmxNcsv9TsFQBd3vjL
L9wz8Uhhyx3lqQDwxOv9/Fmdieh3LMXnCERqnm+yps8jaPybWVdSGYgfg7xy
jQ2PocK95Zn+12vY6yCpJBf9FP/R7p140RGMzXuMNSmzuRgVWS9YMRYO/ltm
6ZzhIjgrNxuaTt8ErU5nxw7ZMuw/pbqwRv8uDge3/aiIqoT9+3sJQ+wHOF9w
QePe6EckW9qHi7g+xEhs8wdu7lq8PPb9nC3Zx4fy92W1Wxug2SLJ1xLzBC6+
ZktsGI3oSIiMsnfKQbmAztyzcy1oUzv3Q739OR5nVM5KK/9AGPPwlOK6fBiJ
v3loldsGnUKuh2rbCqBR3fby/dpO8MUUJdJ1XqDRyIr1lPULK6S3HxBRLoTr
4rMNTdrdcJFtq17JKcTnVus3S2N6EPW/8TtmhUWw+u9wV29vL2TrXy9+b0NB
idj62p6BXtg06ckuOEqBYpfAm25WL7ZU3Go1sqNgxO/VvV+TvUjKkP8f9QQF
sQWy+9qE+qDVOk6PPUvBF5m+0m96fZAIFL++0J8C0z8eye9C+vDI/6AhI4UC
g7Qo6zSlflxImL2T30FBfnmAr+DafrSIxbwv/0WBes+F+z5a/bBaVexQ302B
vMrRTvPN/TDdMftjqJ8CwWfrTv/d2w857iU/lrAp+EWr8bH060fUxrBlfHMU
RNUK31nQ0I+A/Na46lVU/JpNaHQO+I3Vha/CYw9RIcSoi7oY8hub5N1t5Q9T
sfH7EpOwyN+QK79Ul2tDRWxheEFGwm/E26SlVB+lwsjZL6Yj6zf84mc+009Q
kV5/YueBut/g4k5xH3Cj4kTm+tdQoOOYjptwbygVMXFuF/ao0KGRvk96ZzgV
JVdz1h5TpyNf5Eh1dgQVojbKiZf16RjhmVnkGkVFxRIpH4oZHbeFjJU6YqlQ
usilre5Jx5ufxV8D71PRZ1abIV5Bx0lO2cq3eSSPWnMz7gMdkwojwaIFVJz8
EnBZ6Csd9F8nLR1fUNG9R3s/z3eyvr62IheFig6ruFkmi46GE0djVEqoaD1m
ZVMlPYDYxQLpKpVUfPJoWerlOYBJPV/On2YqBAq1plgXB+AfdFNHrJWKnaPh
fS7+A6AHCbdpf6ei2mfj6+MRAyhq9HQ6/ZOKSr9El90pAwjU+WZZ3knFm1Db
SsVPA7jo6ZqmSqciP7HTt15hEDnm53dXTVDhqibzQ2fNIPa6TZs8n6RCtfjw
5lvrBrGN1VmY8JeK1Nb6qUMbBlFqXPfX9h95nhKVfm3mg6jJPSH3Y5aKc7ef
+P++OAj11W+/Ry+kQVW5r32n/yD4Ag3Mj/LR0FukYJgdNAhdvhSDtYtoONqY
NOt6YxBjTacvlPPTYC52I2Dk4SAEXKZutAvSsDbO49pMzSAmqj7s/SJCQ798
bpfdt0H4CY9tDxal4WH+oPHb1kEM3i0o2ihGg3SdI09wzyASK3mnU5bTICB8
KJj/7yBGZVV1bSRooEdvDhVTGoKtxFHzEBkaHkXwRqpdHgJncbEnRZkG0d6I
q5oBQ1ibf/G+jgqNVKilXrohQ0iNz3bPJT4yLnl8W8wQqPk35R+uoUH4pKb+
/odDCA3ddddXjQZf2HRd+jSEDUKqdPo6st+kjmb/2iG4DBm17dOg4cC445eg
xiHkrD/iTyPWfO5Gi+4YQrZ/wftATRp6pENupI0MISyH4cOrTYPFeO6mD9IM
TB5yO/hRh4aS/XpaNXIMbI4rWyWjS57v82KlBiUGEoXSE84R85ysFG7TZEDO
eFOEkB4NtPrvfez/MZBRW3p7sz4NShrHf47uYKBKJf5zEHF8RG/dX3MGDCWQ
95HYFexXvNYMeBbvCrQyoEHh+YJ4ibMM8Mau22W9gYYY/uvhMu4MGCjVsW8R
TzsK+yt4k+ul3zWpJ26WlnZWD2Cg8T1tbPtGGqIitAyRwMB/r0xC5TbRMNlT
pGt6j4FRzyUPLIlPYbOa2QMGbh37zzGE2GjcdLlVFgOqr9X/9RCPOR4ZPPWK
gXSRWpuEzTT4iP0Ta33LAL9dvVEZ8fi7+9vM3jMQUW13f2DeCu2x6vUMaP/Z
nbNpCxlf71+S3MyAoGml/XHiiUDZ3iVtDJyunYwMJp7sPL6B08+A2HD1hmri
Sze5HBwYDCiZ+L3un88N0683DDNwcIcMZcFWkrOMi0wmGChxoSkoEP990N1e
NM2ArIwNz1biyxbBi1R4mBhpWmJ9kHhqevX6u4uY8FjeLXdu3rZOIb6iTPRo
r1x6b368IF/uoAQTLOVE3RzifyWPW2xXMfG9xrnmNfGVMzu4axSZePruzs8v
xNNS9LWGqkysyNSy+zmff4w4kKfBRJGE0UH6fH5J7aq8LhOMD41v/8znqp+y
4jYywXSeSpshnmk5U89jyERt7puxhdtouBou+O+CCRNu1uplQsSzBs+U+nYy
cV9534zIfN5vvufQHiYmujbmr5jPbzMvVlsxIWI70iIxn2+PSd9ow8Qxp0gv
SeK5Uc3PT+2Y0Py5OGw+D8ysHZU+yURzcrDQ/HyuA+6y0S5MxMVy8c+vH8gr
snPGjYnrD2MuCRJzFxZ4uHkx8btys90C4qATlvc7fZn4xBYp/kf2zyP6p3Jf
ABNWCgqRw8RB5Qms8hAmUo95f+2bzz30JHWvM9GQuzKydT6XbzLOvMmEpLJC
8Udi3jrvsytuM5HVHG9XTBwSIH47LImJyk5/3yziBVq00olUJt6fYAvcms87
rOnOj5iQihgVDpjPYyZFfmQzselqUpTzfL4tccvufCY++7Ku7CNeyNzk9JpC
7ocy02NAzGfu9zLlLRNqE0Fic+R9Cvu3slv4PRPGcWJtv4j5cl4LXvvMxHDC
Lely4kWLZ+0cm5lwxoO/V4gjilMiGn8yMfAcSYeJ+V3wYnsXE07L+At05v0h
cKEqgwmta0bG3eT9j7iooJU4zIRs+OcSGrHAmneHF0+Q67m/yI4iXhzG+4zB
zYKP/CemJrGgaZhlgQQLVR8e8DiS87a17LzIexkWomyfdmoRu222qfuhwMLA
TqbTP3KeG7TX7VmwjoWk0V1uMcRJqxrMrI1YWDhw93wmOf9f7r3id93Owp/w
tLuniGfFHlUH7mKBN3iLyxpih8WXtmcfYKF06KDAI1JfVCdWGc84s3B6va1h
LKk/RzwXcYm6sRC6Ub9oB3E0k1OqcoGFrO/T32ZIPWP3VGzd589C8+8gkVPE
1DqXjRlxLDgZPQ9VIfXPNJuiZVbCwnFmxtHTpH76KKeyjpWx4Nxc5SNA/CQt
4rlnJQsiqTe3ZGuR+79rq578lYXzy3dV/Sb1tyGYew27m4VN9x7/sCT12f6Y
hextQTY8A85LDJD6Ht9q0P50GRvN1pld3sSVVvLJpSvYkA8zsuYmXrPrjxRd
jo1Gv07T5ao0sAwSV2zRY0Nm1RL1teT348qyPqGuo2zkXO/REFckv28/Xhi1
ObBx1fWxU6wCDd8zAr1aTrFx2+PLIQFigw0ybTXubPSOuztNyNHAOWaVUxLC
Rlr4Kf3KVTQ45pSb3XrGxrMwl2x5KRp2/ZcStmOajZvrlm3rW0rqwSKDY+lc
HKgZn3ppQNzIkJmQ5eUgai6dFbaEnA/q4Fppfg5E109HrRaiocMsLH6ZKAfM
B/eiLARouOf+xmFGmYPHXueenuSlQahUnavFgoM456iXqeNUMM3li67v42Dt
95Qj1DEqvv5c7mxoxYHlt/GAz6NU3Pw7U/voMAdyAbQDwyOkv9KvS/Vy5GC/
gZWqOpsKyWdeEPXloEXgc5j1b9I/Jb25apHJgYL4msQE0u8sVHuhw53Fweqj
9MrLTVT00x73Fz3lgFIn7mPfSEVW0809MnkcxCfwuKxpoGKtyAnZoWIOPl9f
nJBRQ4V2BF9pRC0Hw97piw6Sfmqbz96ZiikOzO8MjCTnUzF+hu5nNsPB5dHv
vWdI/5Z//NrU1zkONghK39yQS4WiWeHE9wXDuD/zXqgmhwp+GYkR9tJh3KgM
yaU/pqKxvKN/5ephKLZrJHYnk/5piVvdhd3D0LDO9O0i/WVyZnTG6uRhHLy2
6s/SI1QcN9Hd2pkyjOErsqwzpL9V7P7emJQ+DPWXc65VpP99IreGTzRrGP+k
Xo17W1FRlFTuzPViGGNbr22tMqfiS+y4Rnv1MBIFv2bKgIqZK/Yv7/wZRjpv
T1ieIhV2B/VqBHaP4I0B17MzfRTYr7RIe2kxglcS6q88eihw6HK6cHrfCKTL
Uh0udlFw8txdqaqDI2h3qPK62k6BS+iUU6D9CHjzH1D9mijworydHfceweep
iDc6VRRcX2Gh3Zs2gu36K4ITMiigNDkllI6PYEG7qJsy+T+y6Us+T/+dP1ha
4Lx09YciyG8/NZZgOgpufofK7aJF0NfTjyvqH8XFJr0K+oFCdI7c+JgROgZG
pLzoqcgXYOjuD5XSGUfVWZFojcQCqAxpDHJ/G0d/ZUJ7eFY+KpW8G9yvTUDX
QbKzRDYPNxubHC2VJiFTzLMRf56BbfU2jqdyErIMM7kb1Gy8OLjCZJPHXxgn
CES/XfcEGTXBD7pFp+Dn7KmcQ32EieqjfqLvpnDwo0BtzPhD/IorG1vm9g8Z
902uWuimYbx+i1TQ0mnUjoa4qWndh/stxbe+r6cRpTpQkRp+GxI1ist67WZQ
MWZ3svhQLKyank3LzM5AjrF/Z1xPGEaOp7u2Zc9i72PO10m1yxi7u1Df4fks
bl5+xH2qzxeTtS4zfXmzcNvxJn86zRdz0IlhF81CVvYx9xNJXwjJV+TxlJH5
dlckuRdfgvKv3hHVb7PIe1AsKT7mjcP2qr7e/2ZRW81f1sT2gO29aOOpmVkI
J++cMS7wgF0dRyCAaw55kiPL+j09SJ0sTopYOIfUonhmy7g7POV3vb4vPAe5
JbkOntzuiP51dq589RyulshDxNQVZfZ5oUvN51B2b8FXxlonlNS67u7YM4fj
7fnPUwtOgmq4ViR3P8lDxK6JbzqJZzKPki2syXrbtaOO7HJEUmtSYfSJOczp
z7pE+jjAe19Y12LfORjuaZXcz7GFe5lJ1g+/OQQsXG8xIWkLV03uc9lX50if
wTdx3eQITghdmTQLIfPFDShJKYex74OHcORNMt4gsWbXuYNQNzq2bdFjsl++
uWvtg3ugkifN2/KEjPcVfpMSZAFF2dYPj3PI+CyJ1ZFy5pCctjzwXwHxP/cz
e1zMwPdy59nQ18R8dRmrjUzBs4Zv/cEyMn/vgv15C0wwc7tiXOkd8Zm555dr
jTF6wTCosprsT06jV3DYEF1aeom830h+Tu/9jq0GaEsZtvvWRIwz6k/19NC6
JE8po5X4SUKS9jYdfB1Sy/9fB5nvEdn4kUcDn4789hbtIvm1Fu/N/mqo+pi5
pbuHmMK/zkBWBa+z5KqvDRD3lKXIFcvhpXh79H4G8aKYpX6zUigMTbJUYBNb
73327PFy5I5aSw4Pk/XvXtAP9xJGtuOKjrejJE+1mvGP4MOjhoaM2AmSz/n8
XLVnxjDNONbFfoo44EZpDYdtmJxvoaU9Q8aX8VF+Jjcb3pUTHJubIyaf1MrQ
bf8HG2aKYQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[Large], 
    PointBox[{0.9170848796751496, 0.0907759942557099}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {-0.001146891871236533, 0.09077599377760266}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6629529115958843`*^9, 3.662952966480063*^9}, 
   3.6629530042728653`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Meanx", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", "h"}], ")"}], " ", "h"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Meany", "[", 
    RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "h"}], ")"}], " ", "h"}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"a", "0"},
          {"0", "c"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", "\[Beta]", "]"}], "\[Transpose]"}]}], 
     "]"}], "//", 
    RowBox[{"MatrixForm", "\n", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"a", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "c"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "c"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Beta]", "]"}]}], 
          RowBox[{
           RowBox[{"c", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"a", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarXh", "[", "h_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"64", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "h"}], ")"}], "3"], " ", 
      SuperscriptBox["h", "3"]}], "+", 
     RowBox[{"9", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"1", "-", "h"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", 
          RowBox[{"ArcSin", "[", 
           RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], ")"}]}]}], 
    RowBox[{"144", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"1", "-", "h"}], "]"}]}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarYh", "[", "h_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"12", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "-", "h"}], "]"}]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], "]"}]}], 
   RowBox[{"48", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", "h"}]]}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Varx", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"VarXh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"VarYh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vary", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"VarYh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"VarXh", "[", "h", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Covxy", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"VarXh", "[", "h", "]"}], "-", 
     RowBox[{"VarYh", "[", "h", "]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Corxy", "[", 
   RowBox[{"\[Beta]_", ",", "h_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"Covxy", "[", 
    RowBox[{"\[Beta]", ",", "h"}], "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Varx", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}], "*", 
     RowBox[{"Vary", "[", 
      RowBox[{"\[Beta]", ",", "h"}], "]"}]}]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPts", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swarmPtsS", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "numPts"], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"+", "i"}], "+", 
           RowBox[{
            RowBox[{"Boole", "[", 
             RowBox[{"EvenQ", "[", "j", "]"}], "]"}], 
            FractionBox["1", "2"]}]}], ",", 
          RowBox[{
           RowBox[{"+", "j"}], 
           RowBox[{
            SqrtBox["3"], "/", "2"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "numPts"}], ",", "numPts"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"2", "/", 
             SqrtBox["3"]}], "numPts"}], "]"}]}], ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"2", "/", 
            SqrtBox["3"]}], "numPts"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"swarmPts", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"swarmPtsS", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "2"], 
          "+", 
          SuperscriptBox[
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "2"]}], ")"}], "<", "1"}], "&"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.661904855027299*^9, 3.6619048705912027`*^9}, {
   3.6619049357129908`*^9, 3.6619049875740547`*^9}, {3.6619050681500196`*^9, 
   3.66190508938859*^9}, {3.661908158454513*^9, 3.6619081634063177`*^9}, 
   3.661908915738571*^9, {3.661909002685758*^9, 3.661909007517338*^9}, {
   3.661909642137093*^9, 3.661909707966565*^9}, {3.6619098740984287`*^9, 
   3.6619099619554*^9}, {3.661910000119956*^9, 3.661910030667802*^9}, {
   3.661910347722147*^9, 3.661910376489798*^9}, 3.6619104286454477`*^9, 
   3.66205812519235*^9, {3.6620581744820004`*^9, 3.662058191514235*^9}, {
   3.66205861615609*^9, 3.662058793658361*^9}, {3.662058896839962*^9, 
   3.662058956061541*^9}, {3.662059002109943*^9, 3.6620590146025352`*^9}, {
   3.662734681692707*^9, 3.6627347100138206`*^9}, {3.662951363623816*^9, 
   3.662951392920684*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsection",
 CellChangeTimes->{{3.6619032053913393`*^9, 3.661903218112661*^9}, {
  3.661903569346698*^9, 3.661903591750774*^9}, {3.661904358844638*^9, 
  3.6619043621083508`*^9}, {3.661904413271488*^9, 3.661904442509713*^9}, {
  3.6619044841630163`*^9, 3.661904484857737*^9}, {3.6619047081295137`*^9, 
  3.6619047086161757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "mean", ",", "cov", ",", 
        RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", 
        "padding", ",", 
        RowBox[{"imsize", "=", "220"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Meanx", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Meany", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mean", "=", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cov", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"Covxy", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"varx", " ", "=", 
        RowBox[{"Chop", "[", " ", 
         RowBox[{"Varx", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vary", " ", "=", "  ", 
        RowBox[{"Chop", "[", 
         RowBox[{"Vary", "[", 
          RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padding", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", "Mean", "*)"}], 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Meanx", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
                  RowBox[{"Meany", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], 
               ",", 
               RowBox[{"PlotLegends", "\[Rule]", " ", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<mean \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"AxesOrigin", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "correlation", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Corxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<correlation\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"1.1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", 
                    RowBox[{"Corxy", "[", 
                    RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "]"}]}], 
                 "}"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "covariance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Covxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], 
                 "}"}]}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"0.1", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                 "}"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "cov"}], "}"}], "]"}]}], 
                 "}"}]}]}], " ", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "of", " ", "column"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"LightBlue", ",", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{
                   "interior", " ", "region", " ", "of", " ", "square"}], 
                   "*)"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"White", ",", 
                   RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "]"}], ",", 
                    "\[Beta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
                   "*)"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "[", "Green", "]"}], ",", 
                   RowBox[{"Arrowheads", "[", 
                    RowBox[{".04", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "1", ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Text", "[", 
                    RowBox[{"\"\<h\>\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"h", "/", "2"}]}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
                  RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showStats", ",", 
                   RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<area=``\\nmean=``\\ncov=``\>\"", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
                    SuperscriptBox["h", "3"]}]], "+", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ",", 
                    RowBox[{"Chop", "[", "mean", "]"}], ",", 
                    RowBox[{"Chop", "[", "cov", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "}"}]}], 
                  "]"}], ",", " ", 
                 RowBox[{"(*", 
                  RowBox[{"optional", " ", "title", " ", "info"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "swarm", " ", "of", " ", "robots"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showParticles", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011", "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"h", "<", "2"}], ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{"swarmPts", ",", 
                    RowBox[{"(*", 
                    RowBox[{"half", "-", 
                    RowBox[{"plane", " ", "test"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], 
                    ")"}]}], ">", "0"}], ")"}], "&"}]}], "]"}], ",", 
                    "swarmPts"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "Thick", ",", " ", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}]], " ", 
                    SuperscriptBox["h", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "]"}]}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "direction", " ", "of", " ", "the",
                    " ", "vector"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", 
                   RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                   RowBox[{"Point", "[", "mean", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"Opacity", "[", "0", "]"}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                   RowBox[{"Ellipsoid", "[", 
                    RowBox[{"mean", ",", 
                    RowBox[{"4", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"varx", ",", " ", "cov"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"cov", ",", "vary"}], "}"}]}], "}"}]}]}], "]"}]}],
                   "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{
                 RowBox[{"7", "/", "6"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
               RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"(*", "variance", "*)"}], 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Vary", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
                  RowBox[{"Varx", "[", 
                   RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
                    RowBox[{"3", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], 
                 "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<variance\>\""}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<var \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                   "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"ImageSize", "\[Rule]", "190"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], ",", " ", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "varx"}], "}"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[Beta]", ",", "vary"}], "}"}], "]"}]}], 
                 "}"}]}]}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "}"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
          "0", ",", "6.28", ",", "0.01", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h", ",", "0.5", ",", "\"\<h\>\""}], "}"}], ",", "0.001", 
          ",", "2", ",", "0.001", ",", " ", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "showParticles", ",", "False", ",", "\"\<show particles\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"showStats", ",", "False", ",", "\"\<show values\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.656795196820305*^9, {3.656972277848474*^9, 3.656972323742771*^9}, {
   3.656972354322016*^9, 3.656972357609967*^9}, 3.656988354648239*^9, {
   3.6569884705646152`*^9, 3.656988493135454*^9}, {3.656988550071396*^9, 
   3.656988655857045*^9}, {3.6569894603163233`*^9, 3.656989486843934*^9}, {
   3.656989531562786*^9, 3.656989542086897*^9}, {3.656989580748362*^9, 
   3.656989624204317*^9}, {3.656989981836008*^9, 3.656989982874411*^9}, {
   3.6569906483882103`*^9, 3.656990654815346*^9}, {3.656990701350219*^9, 
   3.6569907385448847`*^9}, {3.656990772879417*^9, 3.656990784627878*^9}, {
   3.656990844525193*^9, 3.656990872984708*^9}, {3.656991420376791*^9, 
   3.656991424030569*^9}, {3.656991460710334*^9, 3.656991461588852*^9}, {
   3.656991510682987*^9, 3.656991526908751*^9}, {3.6569915702020063`*^9, 
   3.656991597981056*^9}, {3.656991631840012*^9, 3.6569916431990967`*^9}, {
   3.656991773085187*^9, 3.656991817638687*^9}, {3.6569918505353537`*^9, 
   3.6569918654691887`*^9}, {3.6569921573185577`*^9, 
   3.6569921577836227`*^9}, {3.656992198749998*^9, 3.65699221010165*^9}, {
   3.656992283075183*^9, 3.656992289456553*^9}, {3.656992343293524*^9, 
   3.656992386613111*^9}, {3.65699244757166*^9, 3.656992453613069*^9}, {
   3.656992494370109*^9, 3.6569924948858013`*^9}, 3.657017817162533*^9, {
   3.657017949775469*^9, 3.657017950072247*^9}, 3.657018020500729*^9, {
   3.6570180550589437`*^9, 3.657018056409244*^9}, {3.65702014839144*^9, 
   3.6570201486591473`*^9}, {3.658596524000564*^9, 3.6585965331215763`*^9}, {
   3.658689571956876*^9, 3.658689572151148*^9}, 3.6587782739286213`*^9, {
   3.659310125641808*^9, 3.659310258185466*^9}, 3.659641501623365*^9, {
   3.659697767289062*^9, 3.659697771877007*^9}, {3.659697805599869*^9, 
   3.659697841016327*^9}, {3.659697873334496*^9, 3.659697887039423*^9}, {
   3.659697917152749*^9, 3.659697971904133*^9}, {3.6596980035509653`*^9, 
   3.6596980068131742`*^9}, {3.65969822328605*^9, 3.659698247844201*^9}, {
   3.659699686062976*^9, 3.659699692917746*^9}, {3.659699748401119*^9, 
   3.659699770831737*^9}, {3.659699812927397*^9, 3.659699851252578*^9}, {
   3.659713377252952*^9, 3.659713488826714*^9}, {3.6597135212528563`*^9, 
   3.659713536867614*^9}, {3.659713619853107*^9, 3.659713770565661*^9}, {
   3.6599525101019907`*^9, 3.659952598012911*^9}, {3.659952646231936*^9, 
   3.659952649446587*^9}, {3.659952687364767*^9, 3.659952710342092*^9}, {
   3.6599527595706673`*^9, 3.659952775991723*^9}, {3.659952812042877*^9, 
   3.659952841641481*^9}, {3.659952899643251*^9, 3.659952954290547*^9}, {
   3.660348378113248*^9, 3.660348400275343*^9}, {3.6603484413716383`*^9, 
   3.6603484437872972`*^9}, {3.660382725857903*^9, 3.660382733867496*^9}, {
   3.660382769628811*^9, 3.660382864853499*^9}, {3.6603829314227*^9, 
   3.660382958742292*^9}, {3.660382995879237*^9, 3.660383003484803*^9}, {
   3.660383048895123*^9, 3.660383049740139*^9}, {3.660383148687529*^9, 
   3.660383151822135*^9}, {3.660383215230227*^9, 3.660383240776403*^9}, {
   3.660383281321046*^9, 3.660383318882613*^9}, {3.6603833894635477`*^9, 
   3.6603833915443*^9}, {3.6603834927560673`*^9, 3.66038349388724*^9}, {
   3.660383619248096*^9, 3.660383639067501*^9}, {3.6603836725311823`*^9, 
   3.6603836966882677`*^9}, {3.660383745976446*^9, 3.660383796746139*^9}, {
   3.660383856063558*^9, 3.660383879329733*^9}, {3.660383913338663*^9, 
   3.660383933435248*^9}, 3.660383997431237*^9, {3.660384067824223*^9, 
   3.6603840991761*^9}, {3.6603841438120823`*^9, 3.660384184473242*^9}, {
   3.6603842548847303`*^9, 3.660384278833631*^9}, {3.6619057889021263`*^9, 
   3.6619059014409103`*^9}, {3.661905963696024*^9, 3.661906011764056*^9}, {
   3.661906100117427*^9, 3.661906116422687*^9}, {3.6619061728328342`*^9, 
   3.661906244097093*^9}, {3.6619062816728907`*^9, 3.661906304197302*^9}, {
   3.6619064119035683`*^9, 3.661906426443655*^9}, {3.6619064702106733`*^9, 
   3.6619065760539703`*^9}, {3.661906697839389*^9, 3.661906724718996*^9}, {
   3.66190679872246*^9, 3.661906834259137*^9}, 3.661908381162136*^9, {
   3.661908467196042*^9, 3.661908471537355*^9}, {3.6619085089461718`*^9, 
   3.661908590749057*^9}, {3.661909055892646*^9, 3.661909059730936*^9}, 
   3.661909092227436*^9, 3.661909123621414*^9, {3.661909336051154*^9, 
   3.661909345331167*^9}, 3.661909434479795*^9, {3.661909524537293*^9, 
   3.661909535151843*^9}, {3.661909588887903*^9, 3.6619095912470417`*^9}, {
   3.66190976476299*^9, 3.66190977625064*^9}, {3.6619098246851463`*^9, 
   3.661909850329974*^9}, {3.66191048414356*^9, 3.661910489821815*^9}, {
   3.6619106935974407`*^9, 3.661910697906108*^9}, {3.662059049942754*^9, 
   3.662059075166857*^9}, {3.6620591222436953`*^9, 3.6620592878877287`*^9}, {
   3.6620593375545387`*^9, 3.662059592038903*^9}, {3.6620596679396877`*^9, 
   3.662059735558916*^9}, {3.662059767940156*^9, 3.662059788442894*^9}, {
   3.662059841161194*^9, 3.662059853402713*^9}, {3.662059932607641*^9, 
   3.662059940222167*^9}, {3.662059971425899*^9, 3.662059979126845*^9}, {
   3.662060021922455*^9, 3.662060118631527*^9}, {3.662060160233466*^9, 
   3.66206020376115*^9}, {3.662060516651767*^9, 3.662060602533742*^9}, {
   3.662060663294269*^9, 3.6620606771875143`*^9}, {3.662060720727758*^9, 
   3.662060881645319*^9}, {3.662060925566379*^9, 3.662060948367436*^9}, {
   3.6620610967082987`*^9, 3.662061140241613*^9}, {3.662061172627388*^9, 
   3.6620612051710987`*^9}, {3.662061241766173*^9, 3.66206131631499*^9}, {
   3.66206143461867*^9, 3.6620614428789263`*^9}, {3.66206149357762*^9, 
   3.662061519291222*^9}},
 CellID->518614895],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.25, $CellContext`showParticles$$ = 
    False, $CellContext`showStats$$ = False, $CellContext`\[Beta]$$ = 1.45, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Beta]$$], 0, "\[Beta]"}, 0, 6.28, 0.01}, {{
       Hold[$CellContext`h$$], 0.5, "h"}, 0.001, 2, 0.001}, {{
       Hold[$CellContext`showParticles$$], False, "show particles"}, {
      True, False}}, {{
       Hold[$CellContext`showStats$$], False, "show values"}, {True, False}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[10], 
         Manipulate`Place[2], 
         Spacer[10], 
         Manipulate`Place[3], 
         Spacer[10], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {532., {221.134033203125, 226.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Beta]$902455$$ = 0, $CellContext`h$902456$$ = 
    0, $CellContext`showParticles$902457$$ = 
    False, $CellContext`showStats$902458$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0.5, $CellContext`showParticles$$ = 
        False, $CellContext`showStats$$ = False, $CellContext`\[Beta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$902455$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$902456$$, 0], 
        Hold[$CellContext`showParticles$$, \
$CellContext`showParticles$902457$$, False], 
        Hold[$CellContext`showStats$$, $CellContext`showStats$902458$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x$, $CellContext`y$, $CellContext`mean$, \
$CellContext`cov$, $CellContext`bwid$ = 
         0.05, $CellContext`varx$, $CellContext`vary$, $CellContext`padding$, \
$CellContext`imsize$ = 220}, $CellContext`x$ = Chop[
           $CellContext`Meanx[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`y$ = Chop[
           $CellContext`Meany[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`mean$ = {$CellContext`x$, $CellContext`y$}; $CellContext`cov$ = 
         Chop[
           $CellContext`Covxy[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`varx$ = Chop[
           $CellContext`Varx[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`vary$ = Chop[
           $CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`h$$]]; \
$CellContext`padding$ = {{30, 6}, {3, 20}}; Row[{Column[{
              Plot[{{
                 $CellContext`Meanx[$CellContext`\[Beta]$$, $CellContext`h$$], 
                 $CellContext`Meany[$CellContext`\[Beta]$$, \
$CellContext`h$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "mean"}, PlotLegends -> Placed[{
                  Row[{"mean ", 
                    Style["x", Italic]}], 
                  Row[{"mean ", 
                    Style["y", Italic]}]}, {0.65, 0.85}], 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Part[
                  ColorData[97, "ColorList"], 2]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 1], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`x$}], 
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`y$}]}], 
              Plot[{
                $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "correlation"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, 
               PlotRange -> {{0, 2 Pi}, 1.1 {-1, 1}}, PlotPoints -> 
               ControlActive[9, Automatic], PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 6]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 6], 
                 Point[{$CellContext`\[Beta]$$, 
                   $CellContext`Corxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}]}], 
              Plot[{
                $CellContext`Covxy[$CellContext`\[Beta]$$, \
$CellContext`h$$]}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "covariance"}, 
               ImageSize -> $CellContext`imsize$, Exclusions -> None, 
               ImagePadding -> $CellContext`padding$, PlotPoints -> 
               ControlActive[9, Automatic], 
               PlotRange -> {{0, 2 Pi}, 0.1 {-1, 1}}, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 5]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 5], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`cov$}]}]}] 
           Column[{
              Graphics[{{LightBlue, 
                 Disk[{0, 0}, 1]}, {White, 
                 Rotate[
                  
                  Rectangle[{-1, -1}, {
                   1 - $CellContext`h$$, 1}], $CellContext`\[Beta]$$, {0, 
                  0}]}, {
                 Darker[Green], 
                 Arrowheads[0.04 {-1, 1}], 
                 Arrow[{(1 - $CellContext`h$$) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}, 1 {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}}], 
                 Text["h", (1 - $CellContext`h$$/2) {
                    Cos[$CellContext`\[Beta]$$ + Pi/16], 
                    Sin[$CellContext`\[Beta]$$ + Pi/16]}]}, {Black, 
                 Thickness[$CellContext`bwid$], 
                 Circle[{0, 0}, 1 + $CellContext`bwid$]}, 
                If[$CellContext`showStats$$, {Black, 
                  Text[
                   StringForm[
                   "area=``\nmean=``\ncov=``", -((
                    2 - $CellContext`h$$) $CellContext`h$$)^
                    Rational[
                    1, 2] + ((-(-2 + $CellContext`h$$)) $CellContext`h$$^3)^
                    Rational[1, 2] + ArcCos[1 - $CellContext`h$$], 
                    Chop[$CellContext`mean$], 
                    Chop[$CellContext`cov$]], {0, 1/2}]}], 
                If[$CellContext`showParticles$$, {
                  PointSize[0.011], 
                  Lighter[Blue, 0.5], 
                  Point[
                   If[$CellContext`h$$ < 2, 
                    Select[$CellContext`swarmPts, Dot[{
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}, # - (1 - $CellContext`h$$) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}] > 
                    0& ], $CellContext`swarmPts]]}], {
                 Part[
                  ColorData[97, "ColorList"], 1], Thick, 
                 
                 Circle[{0, 
                  0}, -(2 ((-2 + $CellContext`h$$) $CellContext`h$$)^(3/2)/(
                   3 ((-2 + $CellContext`h$$)^
                    Rational[1, 2] $CellContext`h$$^(3/
                    2) - ((-2 + $CellContext`h$$) $CellContext`h$$)^
                    Rational[1, 2] + ArcCosh[1 - $CellContext`h$$])))]}, {
                Blue, 
                 Thickness[0.01], 
                 Arrow[{{0, 0}, (1/2) {
                    Cos[$CellContext`\[Beta]$$], 
                    Sin[$CellContext`\[Beta]$$]}}]}, {
                 Part[
                  ColorData[97, "ColorList"], 2], 
                 PointSize[Large], 
                 Point[$CellContext`mean$]}, {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Opacity[0], 
                 EdgeForm[{Thick, Red}], 
                 
                 Ellipsoid[$CellContext`mean$, 
                  4 {{$CellContext`varx$, $CellContext`cov$}, \
{$CellContext`cov$, $CellContext`vary$}}]}}, ImageSize -> 300, 
               PlotRange -> (7/6) {{-1, 1}, {-1, 1}}, PlotRangeClipping -> 
               True], 
              Plot[{{
                 $CellContext`Vary[$CellContext`\[Beta]$$, $CellContext`h$$], 
                 $CellContext`Varx[$CellContext`\[Beta]$$, \
$CellContext`h$$]}}, {$CellContext`\[Beta]$$, 0, 2 Pi}, 
               Ticks -> {{0, Pi/2, Pi, 3 (Pi/2), 2 Pi}, Automatic}, 
               AxesLabel -> {"\[Beta]", "variance"}, PlotLegends -> {
                 Row[{"var ", 
                   Style["y", Italic]}], 
                 Row[{"var ", 
                   Style["x", Italic]}]}, PlotRange -> {{0, 2 Pi}, {0, 0.3}}, 
               PlotPoints -> ControlActive[9, Automatic], ImageSize -> 190, 
               Exclusions -> None, PlotStyle -> {
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Part[
                  ColorData[97, "ColorList"], 4]}, Epilog -> {
                 PointSize[Large], 
                 Part[
                  ColorData[97, "ColorList"], 4], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`varx$}], 
                 Part[
                  ColorData[97, "ColorList"], 3], 
                 Point[{$CellContext`\[Beta]$$, $CellContext`vary$}]}]}]}]], 
      "Specifications" :> {{{$CellContext`\[Beta]$$, 0, "\[Beta]"}, 0, 6.28, 
         0.01, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         1}, {{$CellContext`h$$, 0.5, "h"}, 0.001, 2, 0.001, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`showParticles$$, False, "show particles"}, {
         True, False}, ControlPlacement -> 
         3}, {{$CellContext`showStats$$, False, "show values"}, {True, False},
          ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[10], 
          Manipulate`Place[2], 
          Spacer[10], 
          Manipulate`Place[3], 
          Spacer[10], 
          Manipulate`Place[4]}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{577., {264., 269.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`x = (5 Sqrt[15/2])/(
        256 (((-7) Sqrt[15])/64 + ArcCos[7/8])), $CellContext`y = (5 
         Sqrt[15/2])/(
        256 (((-7) Sqrt[15])/64 + ArcCos[7/8])), $CellContext`mean = {
        0., -0.7050201618985664}, $CellContext`padding = {{30, 6}, {3, 
        20}}, $CellContext`imsize = 220, $CellContext`Meanx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := (2 ((2 - $CellContext`h) $CellContext`h)^(3/2) 
         Cos[$CellContext`\[Beta]])/(
        3 ((-1 + $CellContext`h) Sqrt[(2 - $CellContext`h) $CellContext`h] + 
         ArcCos[1 - $CellContext`h])), $CellContext`\[Beta]$$ = 
       Pi/4, $CellContext`Meany[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := (2 ((2 - $CellContext`h) $CellContext`h)^(3/2) 
         Sin[$CellContext`\[Beta]])/(
        3 ((-1 + $CellContext`h) Sqrt[(2 - $CellContext`h) $CellContext`h] + 
         ArcCos[1 - $CellContext`h])), $CellContext`Covxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          
          Blank[]]] := ($CellContext`VarXh[$CellContext`h] - \
$CellContext`VarYh[$CellContext`h]) Cos[$CellContext`\[Beta]] 
        Sin[$CellContext`\[Beta]], $CellContext`VarXh[
         Blank[
         0.5]] := (((-16) (-2 + FE`h$$27)^3) 
          FE`h$$27^3 + (
           9 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + ArcCosh[1 - FE`h$$27])) (-
            Sqrt[(-2 + FE`h$$27) FE`h$$27] + (Sqrt[-2 + FE`h$$27] 
             FE`h$$27^(3/2)) (5 + (2 (-3 + FE`h$$27)) FE`h$$27) + 
           ArcCosh[1 - FE`h$$27]))/(
        36 (Sqrt[-2 + FE`h$$27] FE`h$$27^(3/2) - 
          Sqrt[(-2 + FE`h$$27) FE`h$$27] + 
          ArcCosh[1 - FE`h$$27])^2), $CellContext`VarXh[
         Blank[
         0.001]] := (((-16) (-2 + FE`h$$138)^3) 
          FE`h$$138^3 + (
           9 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + ArcCosh[1 - FE`h$$138])) (-
            Sqrt[(-2 + FE`h$$138) FE`h$$138] + (Sqrt[-2 + FE`h$$138] 
             FE`h$$138^(3/2)) (5 + (2 (-3 + FE`h$$138)) FE`h$$138) + 
           ArcCosh[1 - FE`h$$138]))/(
        36 (Sqrt[-2 + FE`h$$138] FE`h$$138^(3/2) - 
          Sqrt[(-2 + FE`h$$138) FE`h$$138] + 
          ArcCosh[1 - FE`h$$138])^2), $CellContext`VarXh[
         Blank[
         0.463]] := (((-16) (-2 + FE`h$$141)^3) 
          FE`h$$141^3 + (
           9 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + ArcCosh[1 - FE`h$$141])) (-
            Sqrt[(-2 + FE`h$$141) FE`h$$141] + (Sqrt[-2 + FE`h$$141] 
             FE`h$$141^(3/2)) (5 + (2 (-3 + FE`h$$141)) FE`h$$141) + 
           ArcCosh[1 - FE`h$$141]))/(
        36 (Sqrt[-2 + FE`h$$141] FE`h$$141^(3/2) - 
          Sqrt[(-2 + FE`h$$141) FE`h$$141] + 
          ArcCosh[1 - FE`h$$141])^2), $CellContext`VarXh[
         Pattern[$CellContext`h, 
          Blank[]]] := (64 (-2 + $CellContext`h)^3 $CellContext`h^3 + 
         9 ((-1 + $CellContext`h) 
            Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
           ArcCos[1 - $CellContext`h]) (4 ArcCos[1 - $CellContext`h] + 
           Sin[4 ArcSin[1 - $CellContext`h]]))/(
        144 ((-1 + $CellContext`h) 
           Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
          ArcCos[1 - $CellContext`h])^2), FE`h$$27 = 0.5, FE`h$$138 = 0.463, 
       FE`h$$141 = 0.463, $CellContext`VarYh[
         Blank[0.5]] := (
         I ((I Sqrt[(-(-2 + FE`h$$27)) FE`h$$27]) (3 + 
            FE`h$$27 (1 + (2 (-3 + FE`h$$27)) FE`h$$27)) - 3 
          ArcCosh[1 - FE`h$$27]))/(
        12 (-Sqrt[(2 - FE`h$$27) FE`h$$27] + 
         Sqrt[(-(-2 + FE`h$$27)) FE`h$$27^3] + 
         ArcCos[1 - FE`h$$27])), $CellContext`VarYh[
         Blank[0.001]] := (
         I ((I Sqrt[(-(-2 + FE`h$$138)) FE`h$$138]) (3 + 
            FE`h$$138 (1 + (2 (-3 + FE`h$$138)) FE`h$$138)) - 3 
          ArcCosh[1 - FE`h$$138]))/(
        12 (-Sqrt[(2 - FE`h$$138) FE`h$$138] + 
         Sqrt[(-(-2 + FE`h$$138)) FE`h$$138^3] + 
         ArcCos[1 - FE`h$$138])), $CellContext`VarYh[
         Blank[0.463]] := (
         I ((I Sqrt[(-(-2 + FE`h$$141)) FE`h$$141]) (3 + 
            FE`h$$141 (1 + (2 (-3 + FE`h$$141)) FE`h$$141)) - 3 
          ArcCosh[1 - FE`h$$141]))/(
        12 (-Sqrt[(2 - FE`h$$141) FE`h$$141] + 
         Sqrt[(-(-2 + FE`h$$141)) FE`h$$141^3] + 
         ArcCos[1 - FE`h$$141])), $CellContext`VarYh[
         Pattern[$CellContext`h, 
          Blank[]]] := (12 ArcCos[1 - $CellContext`h] - 8 
         Sin[2 ArcCos[1 - $CellContext`h]] + 
         Sin[4 ArcCos[1 - $CellContext`h]])/(
        48 ((-1 + $CellContext`h) 
          Sqrt[(-(-2 + $CellContext`h)) $CellContext`h] + 
         ArcCos[1 - $CellContext`h])), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[
         0.604]] := ((((-16) (-2 + FE`h$$18)^3) 
            FE`h$$18^3 + (
             9 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])) (-
              Sqrt[(-2 + FE`h$$18) FE`h$$18] + (Sqrt[-2 + FE`h$$18] 
               FE`h$$18^(3/2)) (5 + (2 (-3 + FE`h$$18)) FE`h$$18) + 
             ArcCosh[1 - FE`h$$18])) Cos[$CellContext`\[Beta]$]^2)/(
         36 (Sqrt[-2 + FE`h$$18] FE`h$$18^(3/2) - 
           Sqrt[(-2 + FE`h$$18) FE`h$$18] + ArcCosh[1 - FE`h$$18])^2) + ((
           I ((I Sqrt[(2 - FE`h$$18) FE`h$$18]) (3 + 
              FE`h$$18 (1 + (2 (-3 + FE`h$$18)) FE`h$$18)) - 3 
            ArcCosh[1 - FE`h$$18])) Sin[$CellContext`\[Beta]$]^2)/(
         12 (-Sqrt[(2 - FE`h$$18) FE`h$$18] + Sqrt[(2 - FE`h$$18) FE`h$$18^3] + 
          ArcCos[1 - FE`h$$18])), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[-0.5]] := (((FE`h$$307 (5 - 2 FE`h$$307^2)) 
            Sqrt[1 - FE`h$$307^2] + 3 Pi - 3 ArcCos[FE`h$$307]) 
          Cos[$CellContext`\[Beta]$]^2)/(
         6 ((2 FE`h$$307) Sqrt[1 - FE`h$$307^2] + Pi + 
          2 ArcSin[FE`h$$307])) + ((
           16 (-1 + FE`h$$307^2)^3 + (
             9 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
              FE`h$$307])) ((FE`h$$307 Sqrt[1 - FE`h$$307^2]) (-1 + 
               2 FE`h$$307^2) + Pi - ArcCos[FE`h$$307])) 
          Sin[$CellContext`\[Beta]$]^2)/(
         36 (FE`h$$307 Sqrt[1 - FE`h$$307^2] + Pi - ArcCos[
           FE`h$$307])^2), $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.5]] := $CellContext`VarXh[FE`h$$233] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$233] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.001]] := $CellContext`VarXh[FE`h$$138] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$138] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta]$, 
          Blank[]], 
         Blank[0.463]] := $CellContext`VarXh[FE`h$$141] 
         Cos[$CellContext`\[Beta]$]^2 + $CellContext`VarYh[FE`h$$141] 
         Sin[$CellContext`\[Beta]$]^2, $CellContext`Varx[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := $CellContext`VarXh[$CellContext`h] 
         Cos[$CellContext`\[Beta]]^2 + $CellContext`VarYh[$CellContext`h] 
         Sin[$CellContext`\[Beta]]^2, 
       Attributes[$CellContext`\[Beta]$] = {Temporary}, FE`h$$18 = 0.604, 
       FE`h$$307 = -0.5, FE`h$$233 = 0.5, $CellContext`Vary[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := $CellContext`VarYh[$CellContext`h] 
         Cos[$CellContext`\[Beta]]^2 + $CellContext`VarXh[$CellContext`h] 
         Sin[$CellContext`\[Beta]]^2, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`Corxy[
         Pattern[$CellContext`\[Beta], 
          Blank[]], 
         Pattern[$CellContext`h, 
          
          Blank[]]] := $CellContext`Covxy[$CellContext`\[Beta], \
$CellContext`h]/
        Sqrt[$CellContext`Varx[$CellContext`\[Beta], $CellContext`h] \
$CellContext`Vary[$CellContext`\[Beta], $CellContext`h]], \
$CellContext`swarmPts = {{(-39)/40, -Sqrt[3]/10}, {(-39)/40, -Sqrt[3]/
          20}, {(-39)/40, 0}, {(-39)/40, Sqrt[3]/20}, {(-39)/40, Sqrt[3]/
          10}, {(-37)/40, -Sqrt[3]/5}, {(-19)/20, ((-7) Sqrt[3])/40}, {(-37)/
          40, ((-3) Sqrt[3])/20}, {(-19)/20, -Sqrt[3]/8}, {(-37)/40, -Sqrt[3]/
          10}, {(-19)/20, ((-3) Sqrt[3])/40}, {(-37)/40, -Sqrt[3]/20}, {(-19)/
          20, -Sqrt[3]/40}, {(-37)/40, 0}, {(-19)/20, Sqrt[3]/40}, {(-37)/40, 
          Sqrt[3]/20}, {(-19)/20, (3 Sqrt[3])/40}, {(-37)/40, Sqrt[3]/
          10}, {(-19)/20, Sqrt[3]/8}, {(-37)/40, (3 Sqrt[3])/20}, {(-19)/
          20, (7 Sqrt[3])/40}, {(-37)/40, Sqrt[3]/5}, {(-7)/8, -Sqrt[3]/
          4}, {(-9)/10, ((-9) Sqrt[3])/40}, {(-7)/8, -Sqrt[3]/5}, {(-9)/
          10, ((-7) Sqrt[3])/40}, {(-7)/8, ((-3) Sqrt[3])/20}, {(-9)/10, -
          Sqrt[3]/8}, {(-7)/8, -Sqrt[3]/10}, {(-9)/10, ((-3) Sqrt[3])/
          40}, {(-7)/8, -Sqrt[3]/20}, {(-9)/10, -Sqrt[3]/40}, {(-7)/8, 
          0}, {(-9)/10, Sqrt[3]/40}, {(-7)/8, Sqrt[3]/20}, {(-9)/
          10, (3 Sqrt[3])/40}, {(-7)/8, Sqrt[3]/10}, {(-9)/10, Sqrt[3]/
          8}, {(-7)/8, (3 Sqrt[3])/20}, {(-9)/10, (7 Sqrt[3])/40}, {(-7)/8, 
          Sqrt[3]/5}, {(-9)/10, (9 Sqrt[3])/40}, {(-7)/8, Sqrt[3]/4}, {(-33)/
          40, ((-3) Sqrt[3])/10}, {(-17)/20, ((-11) Sqrt[3])/40}, {(-33)/40, -
          Sqrt[3]/4}, {(-17)/20, ((-9) Sqrt[3])/40}, {(-33)/40, -Sqrt[3]/
          5}, {(-17)/20, ((-7) Sqrt[3])/40}, {(-33)/40, ((-3) Sqrt[3])/
          20}, {(-17)/20, -Sqrt[3]/8}, {(-33)/40, -Sqrt[3]/10}, {(-17)/
          20, ((-3) Sqrt[3])/40}, {(-33)/40, -Sqrt[3]/20}, {(-17)/20, -
          Sqrt[3]/40}, {(-33)/40, 0}, {(-17)/20, Sqrt[3]/40}, {(-33)/40, 
          Sqrt[3]/20}, {(-17)/20, (3 Sqrt[3])/40}, {(-33)/40, Sqrt[3]/
          10}, {(-17)/20, Sqrt[3]/8}, {(-33)/40, (3 Sqrt[3])/20}, {(-17)/
          20, (7 Sqrt[3])/40}, {(-33)/40, Sqrt[3]/5}, {(-17)/20, (9 Sqrt[3])/
          40}, {(-33)/40, Sqrt[3]/4}, {(-17)/20, (11 Sqrt[3])/40}, {(-33)/
          40, (3 Sqrt[3])/10}, {(-31)/40, ((-7) Sqrt[3])/20}, {(-4)/
          5, ((-13) Sqrt[3])/40}, {(-31)/40, ((-3) Sqrt[3])/10}, {(-4)/
          5, ((-11) Sqrt[3])/40}, {(-31)/40, -Sqrt[3]/4}, {(-4)/
          5, ((-9) Sqrt[3])/40}, {(-31)/40, -Sqrt[3]/5}, {(-4)/
          5, ((-7) Sqrt[3])/40}, {(-31)/40, ((-3) Sqrt[3])/20}, {(-4)/5, -
          Sqrt[3]/8}, {(-31)/40, -Sqrt[3]/10}, {(-4)/5, ((-3) Sqrt[3])/
          40}, {(-31)/40, -Sqrt[3]/20}, {(-4)/5, -Sqrt[3]/40}, {(-31)/40, 
          0}, {(-4)/5, Sqrt[3]/40}, {(-31)/40, Sqrt[3]/20}, {(-4)/
          5, (3 Sqrt[3])/40}, {(-31)/40, Sqrt[3]/10}, {(-4)/5, Sqrt[3]/
          8}, {(-31)/40, (3 Sqrt[3])/20}, {(-4)/5, (7 Sqrt[3])/40}, {(-31)/40,
           Sqrt[3]/5}, {(-4)/5, (9 Sqrt[3])/40}, {(-31)/40, Sqrt[3]/4}, {(-4)/
          5, (11 Sqrt[3])/40}, {(-31)/40, (3 Sqrt[3])/10}, {(-4)/
          5, (13 Sqrt[3])/40}, {(-31)/40, (7 Sqrt[3])/20}, {(-3)/
          4, ((-3) Sqrt[3])/8}, {(-29)/40, ((-7) Sqrt[3])/20}, {(-3)/
          4, ((-13) Sqrt[3])/40}, {(-29)/40, ((-3) Sqrt[3])/10}, {(-3)/
          4, ((-11) Sqrt[3])/40}, {(-29)/40, -Sqrt[3]/4}, {(-3)/
          4, ((-9) Sqrt[3])/40}, {(-29)/40, -Sqrt[3]/5}, {(-3)/
          4, ((-7) Sqrt[3])/40}, {(-29)/40, ((-3) Sqrt[3])/20}, {(-3)/4, -
          Sqrt[3]/8}, {(-29)/40, -Sqrt[3]/10}, {(-3)/4, ((-3) Sqrt[3])/
          40}, {(-29)/40, -Sqrt[3]/20}, {(-3)/4, -Sqrt[3]/40}, {(-29)/40, 
          0}, {(-3)/4, Sqrt[3]/40}, {(-29)/40, Sqrt[3]/20}, {(-3)/
          4, (3 Sqrt[3])/40}, {(-29)/40, Sqrt[3]/10}, {(-3)/4, Sqrt[3]/
          8}, {(-29)/40, (3 Sqrt[3])/20}, {(-3)/4, (7 Sqrt[3])/40}, {(-29)/40,
           Sqrt[3]/5}, {(-3)/4, (9 Sqrt[3])/40}, {(-29)/40, Sqrt[3]/4}, {(-3)/
          4, (11 Sqrt[3])/40}, {(-29)/40, (3 Sqrt[3])/10}, {(-3)/
          4, (13 Sqrt[3])/40}, {(-29)/40, (7 Sqrt[3])/20}, {(-3)/
          4, (3 Sqrt[3])/8}, {(-27)/40, ((-2) Sqrt[3])/5}, {(-7)/
          10, ((-3) Sqrt[3])/8}, {(-27)/40, ((-7) Sqrt[3])/20}, {(-7)/
          10, ((-13) Sqrt[3])/40}, {(-27)/40, ((-3) Sqrt[3])/10}, {(-7)/
          10, ((-11) Sqrt[3])/40}, {(-27)/40, -Sqrt[3]/4}, {(-7)/
          10, ((-9) Sqrt[3])/40}, {(-27)/40, -Sqrt[3]/5}, {(-7)/
          10, ((-7) Sqrt[3])/40}, {(-27)/40, ((-3) Sqrt[3])/20}, {(-7)/10, -
          Sqrt[3]/8}, {(-27)/40, -Sqrt[3]/10}, {(-7)/10, ((-3) Sqrt[3])/
          40}, {(-27)/40, -Sqrt[3]/20}, {(-7)/10, -Sqrt[3]/40}, {(-27)/40, 
          0}, {(-7)/10, Sqrt[3]/40}, {(-27)/40, Sqrt[3]/20}, {(-7)/
          10, (3 Sqrt[3])/40}, {(-27)/40, Sqrt[3]/10}, {(-7)/10, Sqrt[3]/
          8}, {(-27)/40, (3 Sqrt[3])/20}, {(-7)/10, (7 Sqrt[3])/40}, {(-27)/
          40, Sqrt[3]/5}, {(-7)/10, (9 Sqrt[3])/40}, {(-27)/40, Sqrt[3]/
          4}, {(-7)/10, (11 Sqrt[3])/40}, {(-27)/40, (3 Sqrt[3])/10}, {(-7)/
          10, (13 Sqrt[3])/40}, {(-27)/40, (7 Sqrt[3])/20}, {(-7)/
          10, (3 Sqrt[3])/8}, {(-27)/40, (2 Sqrt[3])/5}, {(-5)/
          8, ((-9) Sqrt[3])/20}, {(-13)/20, ((-17) Sqrt[3])/40}, {(-5)/
          8, ((-2) Sqrt[3])/5}, {(-13)/20, ((-3) Sqrt[3])/8}, {(-5)/
          8, ((-7) Sqrt[3])/20}, {(-13)/20, ((-13) Sqrt[3])/40}, {(-5)/
          8, ((-3) Sqrt[3])/10}, {(-13)/20, ((-11) Sqrt[3])/40}, {(-5)/8, -
          Sqrt[3]/4}, {(-13)/20, ((-9) Sqrt[3])/40}, {(-5)/8, -Sqrt[3]/
          5}, {(-13)/20, ((-7) Sqrt[3])/40}, {(-5)/8, ((-3) Sqrt[3])/
          20}, {(-13)/20, -Sqrt[3]/8}, {(-5)/8, -Sqrt[3]/10}, {(-13)/
          20, ((-3) Sqrt[3])/40}, {(-5)/8, -Sqrt[3]/20}, {(-13)/20, -Sqrt[3]/
          40}, {(-5)/8, 0}, {(-13)/20, Sqrt[3]/40}, {(-5)/8, Sqrt[3]/
          20}, {(-13)/20, (3 Sqrt[3])/40}, {(-5)/8, Sqrt[3]/10}, {(-13)/20, 
          Sqrt[3]/8}, {(-5)/8, (3 Sqrt[3])/20}, {(-13)/20, (7 Sqrt[3])/
          40}, {(-5)/8, Sqrt[3]/5}, {(-13)/20, (9 Sqrt[3])/40}, {(-5)/8, 
          Sqrt[3]/4}, {(-13)/20, (11 Sqrt[3])/40}, {(-5)/8, (3 Sqrt[3])/
          10}, {(-13)/20, (13 Sqrt[3])/40}, {(-5)/8, (7 Sqrt[3])/20}, {(-13)/
          20, (3 Sqrt[3])/8}, {(-5)/8, (2 Sqrt[3])/5}, {(-13)/
          20, (17 Sqrt[3])/40}, {(-5)/8, (9 Sqrt[3])/20}, {(-23)/
          40, ((-9) Sqrt[3])/20}, {(-3)/5, ((-17) Sqrt[3])/40}, {(-23)/
          40, ((-2) Sqrt[3])/5}, {(-3)/5, ((-3) Sqrt[3])/8}, {(-23)/
          40, ((-7) Sqrt[3])/20}, {(-3)/5, ((-13) Sqrt[3])/40}, {(-23)/
          40, ((-3) Sqrt[3])/10}, {(-3)/5, ((-11) Sqrt[3])/40}, {(-23)/40, -
          Sqrt[3]/4}, {(-3)/5, ((-9) Sqrt[3])/40}, {(-23)/40, -Sqrt[3]/
          5}, {(-3)/5, ((-7) Sqrt[3])/40}, {(-23)/40, ((-3) Sqrt[3])/
          20}, {(-3)/5, -Sqrt[3]/8}, {(-23)/40, -Sqrt[3]/10}, {(-3)/
          5, ((-3) Sqrt[3])/40}, {(-23)/40, -Sqrt[3]/20}, {(-3)/5, -Sqrt[3]/
          40}, {(-23)/40, 0}, {(-3)/5, Sqrt[3]/40}, {(-23)/40, Sqrt[3]/
          20}, {(-3)/5, (3 Sqrt[3])/40}, {(-23)/40, Sqrt[3]/10}, {(-3)/5, 
          Sqrt[3]/8}, {(-23)/40, (3 Sqrt[3])/20}, {(-3)/5, (7 Sqrt[3])/
          40}, {(-23)/40, Sqrt[3]/5}, {(-3)/5, (9 Sqrt[3])/40}, {(-23)/40, 
          Sqrt[3]/4}, {(-3)/5, (11 Sqrt[3])/40}, {(-23)/40, (3 Sqrt[3])/
          10}, {(-3)/5, (13 Sqrt[3])/40}, {(-23)/40, (7 Sqrt[3])/20}, {(-3)/
          5, (3 Sqrt[3])/8}, {(-23)/40, (2 Sqrt[3])/5}, {(-3)/5, (17 Sqrt[3])/
          40}, {(-23)/40, (9 Sqrt[3])/20}, {(-11)/20, ((-19) Sqrt[3])/
          40}, {(-21)/40, ((-9) Sqrt[3])/20}, {(-11)/20, ((-17) Sqrt[3])/
          40}, {(-21)/40, ((-2) Sqrt[3])/5}, {(-11)/20, ((-3) Sqrt[3])/
          8}, {(-21)/40, ((-7) Sqrt[3])/20}, {(-11)/20, ((-13) Sqrt[3])/
          40}, {(-21)/40, ((-3) Sqrt[3])/10}, {(-11)/20, ((-11) Sqrt[3])/
          40}, {(-21)/40, -Sqrt[3]/4}, {(-11)/20, ((-9) Sqrt[3])/40}, {(-21)/
          40, -Sqrt[3]/5}, {(-11)/20, ((-7) Sqrt[3])/40}, {(-21)/
          40, ((-3) Sqrt[3])/20}, {(-11)/20, -Sqrt[3]/8}, {(-21)/40, -Sqrt[3]/
          10}, {(-11)/20, ((-3) Sqrt[3])/40}, {(-21)/40, -Sqrt[3]/20}, {(-11)/
          20, -Sqrt[3]/40}, {(-21)/40, 0}, {(-11)/20, Sqrt[3]/40}, {(-21)/40, 
          Sqrt[3]/20}, {(-11)/20, (3 Sqrt[3])/40}, {(-21)/40, Sqrt[3]/
          10}, {(-11)/20, Sqrt[3]/8}, {(-21)/40, (3 Sqrt[3])/20}, {(-11)/
          20, (7 Sqrt[3])/40}, {(-21)/40, Sqrt[3]/5}, {(-11)/20, (9 Sqrt[3])/
          40}, {(-21)/40, Sqrt[3]/4}, {(-11)/20, (11 Sqrt[3])/40}, {(-21)/
          40, (3 Sqrt[3])/10}, {(-11)/20, (13 Sqrt[3])/40}, {(-21)/
          40, (7 Sqrt[3])/20}, {(-11)/20, (3 Sqrt[3])/8}, {(-21)/
          40, (2 Sqrt[3])/5}, {(-11)/20, (17 Sqrt[3])/40}, {(-21)/
          40, (9 Sqrt[3])/20}, {(-11)/20, (19 Sqrt[3])/40}, {(-19)/40, -
          Sqrt[3]/2}, {(-1)/2, ((-19) Sqrt[3])/40}, {(-19)/40, ((-9) Sqrt[3])/
          20}, {(-1)/2, ((-17) Sqrt[3])/40}, {(-19)/40, ((-2) Sqrt[3])/
          5}, {(-1)/2, ((-3) Sqrt[3])/8}, {(-19)/40, ((-7) Sqrt[3])/
          20}, {(-1)/2, ((-13) Sqrt[3])/40}, {(-19)/40, ((-3) Sqrt[3])/
          10}, {(-1)/2, ((-11) Sqrt[3])/40}, {(-19)/40, -Sqrt[3]/4}, {(-1)/
          2, ((-9) Sqrt[3])/40}, {(-19)/40, -Sqrt[3]/5}, {(-1)/
          2, ((-7) Sqrt[3])/40}, {(-19)/40, ((-3) Sqrt[3])/20}, {(-1)/2, -
          Sqrt[3]/8}, {(-19)/40, -Sqrt[3]/10}, {(-1)/2, ((-3) Sqrt[3])/
          40}, {(-19)/40, -Sqrt[3]/20}, {(-1)/2, -Sqrt[3]/40}, {(-19)/40, 
          0}, {(-1)/2, Sqrt[3]/40}, {(-19)/40, Sqrt[3]/20}, {(-1)/
          2, (3 Sqrt[3])/40}, {(-19)/40, Sqrt[3]/10}, {(-1)/2, Sqrt[3]/
          8}, {(-19)/40, (3 Sqrt[3])/20}, {(-1)/2, (7 Sqrt[3])/40}, {(-19)/40,
           Sqrt[3]/5}, {(-1)/2, (9 Sqrt[3])/40}, {(-19)/40, Sqrt[3]/4}, {(-1)/
          2, (11 Sqrt[3])/40}, {(-19)/40, (3 Sqrt[3])/10}, {(-1)/
          2, (13 Sqrt[3])/40}, {(-19)/40, (7 Sqrt[3])/20}, {(-1)/
          2, (3 Sqrt[3])/8}, {(-19)/40, (2 Sqrt[3])/5}, {(-1)/2, (17 Sqrt[3])/
          40}, {(-19)/40, (9 Sqrt[3])/20}, {(-1)/2, (19 Sqrt[3])/40}, {(-19)/
          40, Sqrt[3]/2}, {(-17)/40, -Sqrt[3]/2}, {(-9)/20, ((-19) Sqrt[3])/
          40}, {(-17)/40, ((-9) Sqrt[3])/20}, {(-9)/20, ((-17) Sqrt[3])/
          40}, {(-17)/40, ((-2) Sqrt[3])/5}, {(-9)/20, ((-3) Sqrt[3])/
          8}, {(-17)/40, ((-7) Sqrt[3])/20}, {(-9)/20, ((-13) Sqrt[3])/
          40}, {(-17)/40, ((-3) Sqrt[3])/10}, {(-9)/20, ((-11) Sqrt[3])/
          40}, {(-17)/40, -Sqrt[3]/4}, {(-9)/20, ((-9) Sqrt[3])/40}, {(-17)/
          40, -Sqrt[3]/5}, {(-9)/20, ((-7) Sqrt[3])/40}, {(-17)/
          40, ((-3) Sqrt[3])/20}, {(-9)/20, -Sqrt[3]/8}, {(-17)/40, -Sqrt[3]/
          10}, {(-9)/20, ((-3) Sqrt[3])/40}, {(-17)/40, -Sqrt[3]/20}, {(-9)/
          20, -Sqrt[3]/40}, {(-17)/40, 0}, {(-9)/20, Sqrt[3]/40}, {(-17)/40, 
          Sqrt[3]/20}, {(-9)/20, (3 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/
          10}, {(-9)/20, Sqrt[3]/8}, {(-17)/40, (3 Sqrt[3])/20}, {(-9)/
          20, (7 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/5}, {(-9)/20, (9 Sqrt[3])/
          40}, {(-17)/40, Sqrt[3]/4}, {(-9)/20, (11 Sqrt[3])/40}, {(-17)/
          40, (3 Sqrt[3])/10}, {(-9)/20, (13 Sqrt[3])/40}, {(-17)/
          40, (7 Sqrt[3])/20}, {(-9)/20, (3 Sqrt[3])/8}, {(-17)/
          40, (2 Sqrt[3])/5}, {(-9)/20, (17 Sqrt[3])/40}, {(-17)/
          40, (9 Sqrt[3])/20}, {(-9)/20, (19 Sqrt[3])/40}, {(-17)/40, Sqrt[3]/
          2}, {(-2)/5, ((-21) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/2}, {(-2)/
          5, ((-19) Sqrt[3])/40}, {(-3)/8, ((-9) Sqrt[3])/20}, {(-2)/
          5, ((-17) Sqrt[3])/40}, {(-3)/8, ((-2) Sqrt[3])/5}, {(-2)/
          5, ((-3) Sqrt[3])/8}, {(-3)/8, ((-7) Sqrt[3])/20}, {(-2)/
          5, ((-13) Sqrt[3])/40}, {(-3)/8, ((-3) Sqrt[3])/10}, {(-2)/
          5, ((-11) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/4}, {(-2)/
          5, ((-9) Sqrt[3])/40}, {(-3)/8, -Sqrt[3]/5}, {(-2)/
          5, ((-7) Sqrt[3])/40}, {(-3)/8, ((-3) Sqrt[3])/20}, {(-2)/5, -
          Sqrt[3]/8}, {(-3)/8, -Sqrt[3]/10}, {(-2)/5, ((-3) Sqrt[3])/
          40}, {(-3)/8, -Sqrt[3]/20}, {(-2)/5, -Sqrt[3]/40}, {(-3)/8, 
          0}, {(-2)/5, Sqrt[3]/40}, {(-3)/8, Sqrt[3]/20}, {(-2)/
          5, (3 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/10}, {(-2)/5, Sqrt[3]/
          8}, {(-3)/8, (3 Sqrt[3])/20}, {(-2)/5, (7 Sqrt[3])/40}, {(-3)/8, 
          Sqrt[3]/5}, {(-2)/5, (9 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/4}, {(-2)/
          5, (11 Sqrt[3])/40}, {(-3)/8, (3 Sqrt[3])/10}, {(-2)/
          5, (13 Sqrt[3])/40}, {(-3)/8, (7 Sqrt[3])/20}, {(-2)/5, (3 Sqrt[3])/
          8}, {(-3)/8, (2 Sqrt[3])/5}, {(-2)/5, (17 Sqrt[3])/40}, {(-3)/
          8, (9 Sqrt[3])/20}, {(-2)/5, (19 Sqrt[3])/40}, {(-3)/8, Sqrt[3]/
          2}, {(-2)/5, (21 Sqrt[3])/40}, {(-7)/20, ((-21) Sqrt[3])/
          40}, {(-13)/40, -Sqrt[3]/2}, {(-7)/20, ((-19) Sqrt[3])/40}, {(-13)/
          40, ((-9) Sqrt[3])/20}, {(-7)/20, ((-17) Sqrt[3])/40}, {(-13)/
          40, ((-2) Sqrt[3])/5}, {(-7)/20, ((-3) Sqrt[3])/8}, {(-13)/
          40, ((-7) Sqrt[3])/20}, {(-7)/20, ((-13) Sqrt[3])/40}, {(-13)/
          40, ((-3) Sqrt[3])/10}, {(-7)/20, ((-11) Sqrt[3])/40}, {(-13)/40, -
          Sqrt[3]/4}, {(-7)/20, ((-9) Sqrt[3])/40}, {(-13)/40, -Sqrt[3]/
          5}, {(-7)/20, ((-7) Sqrt[3])/40}, {(-13)/40, ((-3) Sqrt[3])/
          20}, {(-7)/20, -Sqrt[3]/8}, {(-13)/40, -Sqrt[3]/10}, {(-7)/
          20, ((-3) Sqrt[3])/40}, {(-13)/40, -Sqrt[3]/20}, {(-7)/20, -Sqrt[3]/
          40}, {(-13)/40, 0}, {(-7)/20, Sqrt[3]/40}, {(-13)/40, Sqrt[3]/
          20}, {(-7)/20, (3 Sqrt[3])/40}, {(-13)/40, Sqrt[3]/10}, {(-7)/20, 
          Sqrt[3]/8}, {(-13)/40, (3 Sqrt[3])/20}, {(-7)/20, (7 Sqrt[3])/
          40}, {(-13)/40, Sqrt[3]/5}, {(-7)/20, (9 Sqrt[3])/40}, {(-13)/40, 
          Sqrt[3]/4}, {(-7)/20, (11 Sqrt[3])/40}, {(-13)/40, (3 Sqrt[3])/
          10}, {(-7)/20, (13 Sqrt[3])/40}, {(-13)/40, (7 Sqrt[3])/20}, {(-7)/
          20, (3 Sqrt[3])/8}, {(-13)/40, (2 Sqrt[3])/5}, {(-7)/
          20, (17 Sqrt[3])/40}, {(-13)/40, (9 Sqrt[3])/20}, {(-7)/
          20, (19 Sqrt[3])/40}, {(-13)/40, Sqrt[3]/2}, {(-7)/20, (21 Sqrt[3])/
          40}, {(-11)/40, ((-11) Sqrt[3])/20}, {(-3)/10, ((-21) Sqrt[3])/
          40}, {(-11)/40, -Sqrt[3]/2}, {(-3)/10, ((-19) Sqrt[3])/40}, {(-11)/
          40, ((-9) Sqrt[3])/20}, {(-3)/10, ((-17) Sqrt[3])/40}, {(-11)/
          40, ((-2) Sqrt[3])/5}, {(-3)/10, ((-3) Sqrt[3])/8}, {(-11)/
          40, ((-7) Sqrt[3])/20}, {(-3)/10, ((-13) Sqrt[3])/40}, {(-11)/
          40, ((-3) Sqrt[3])/10}, {(-3)/10, ((-11) Sqrt[3])/40}, {(-11)/40, -
          Sqrt[3]/4}, {(-3)/10, ((-9) Sqrt[3])/40}, {(-11)/40, -Sqrt[3]/
          5}, {(-3)/10, ((-7) Sqrt[3])/40}, {(-11)/40, ((-3) Sqrt[3])/
          20}, {(-3)/10, -Sqrt[3]/8}, {(-11)/40, -Sqrt[3]/10}, {(-3)/
          10, ((-3) Sqrt[3])/40}, {(-11)/40, -Sqrt[3]/20}, {(-3)/10, -Sqrt[3]/
          40}, {(-11)/40, 0}, {(-3)/10, Sqrt[3]/40}, {(-11)/40, Sqrt[3]/
          20}, {(-3)/10, (3 Sqrt[3])/40}, {(-11)/40, Sqrt[3]/10}, {(-3)/10, 
          Sqrt[3]/8}, {(-11)/40, (3 Sqrt[3])/20}, {(-3)/10, (7 Sqrt[3])/
          40}, {(-11)/40, Sqrt[3]/5}, {(-3)/10, (9 Sqrt[3])/40}, {(-11)/40, 
          Sqrt[3]/4}, {(-3)/10, (11 Sqrt[3])/40}, {(-11)/40, (3 Sqrt[3])/
          10}, {(-3)/10, (13 Sqrt[3])/40}, {(-11)/40, (7 Sqrt[3])/20}, {(-3)/
          10, (3 Sqrt[3])/8}, {(-11)/40, (2 Sqrt[3])/5}, {(-3)/
          10, (17 Sqrt[3])/40}, {(-11)/40, (9 Sqrt[3])/20}, {(-3)/
          10, (19 Sqrt[3])/40}, {(-11)/40, Sqrt[3]/2}, {(-3)/10, (21 Sqrt[3])/
          40}, {(-11)/40, (11 Sqrt[3])/20}, {(-9)/40, ((-11) Sqrt[3])/
          20}, {(-1)/4, ((-21) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/2}, {(-1)/
          4, ((-19) Sqrt[3])/40}, {(-9)/40, ((-9) Sqrt[3])/20}, {(-1)/
          4, ((-17) Sqrt[3])/40}, {(-9)/40, ((-2) Sqrt[3])/5}, {(-1)/
          4, ((-3) Sqrt[3])/8}, {(-9)/40, ((-7) Sqrt[3])/20}, {(-1)/
          4, ((-13) Sqrt[3])/40}, {(-9)/40, ((-3) Sqrt[3])/10}, {(-1)/
          4, ((-11) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/4}, {(-1)/
          4, ((-9) Sqrt[3])/40}, {(-9)/40, -Sqrt[3]/5}, {(-1)/
          4, ((-7) Sqrt[3])/40}, {(-9)/40, ((-3) Sqrt[3])/20}, {(-1)/4, -
          Sqrt[3]/8}, {(-9)/40, -Sqrt[3]/10}, {(-1)/4, ((-3) Sqrt[3])/
          40}, {(-9)/40, -Sqrt[3]/20}, {(-1)/4, -Sqrt[3]/40}, {(-9)/40, 
          0}, {(-1)/4, Sqrt[3]/40}, {(-9)/40, Sqrt[3]/20}, {(-1)/
          4, (3 Sqrt[3])/40}, {(-9)/40, Sqrt[3]/10}, {(-1)/4, Sqrt[3]/
          8}, {(-9)/40, (3 Sqrt[3])/20}, {(-1)/4, (7 Sqrt[3])/40}, {(-9)/40, 
          Sqrt[3]/5}, {(-1)/4, (9 Sqrt[3])/40}, {(-9)/40, Sqrt[3]/4}, {(-1)/
          4, (11 Sqrt[3])/40}, {(-9)/40, (3 Sqrt[3])/10}, {(-1)/
          4, (13 Sqrt[3])/40}, {(-9)/40, (7 Sqrt[3])/20}, {(-1)/
          4, (3 Sqrt[3])/8}, {(-9)/40, (2 Sqrt[3])/5}, {(-1)/4, (17 Sqrt[3])/
          40}, {(-9)/40, (9 Sqrt[3])/20}, {(-1)/4, (19 Sqrt[3])/40}, {(-9)/40,
           Sqrt[3]/2}, {(-1)/4, (21 Sqrt[3])/40}, {(-9)/40, (11 Sqrt[3])/
          20}, {(-7)/40, ((-11) Sqrt[3])/20}, {(-1)/5, ((-21) Sqrt[3])/
          40}, {(-7)/40, -Sqrt[3]/2}, {(-1)/5, ((-19) Sqrt[3])/40}, {(-7)/
          40, ((-9) Sqrt[3])/20}, {(-1)/5, ((-17) Sqrt[3])/40}, {(-7)/
          40, ((-2) Sqrt[3])/5}, {(-1)/5, ((-3) Sqrt[3])/8}, {(-7)/
          40, ((-7) Sqrt[3])/20}, {(-1)/5, ((-13) Sqrt[3])/40}, {(-7)/
          40, ((-3) Sqrt[3])/10}, {(-1)/5, ((-11) Sqrt[3])/40}, {(-7)/40, -
          Sqrt[3]/4}, {(-1)/5, ((-9) Sqrt[3])/40}, {(-7)/40, -Sqrt[3]/
          5}, {(-1)/5, ((-7) Sqrt[3])/40}, {(-7)/40, ((-3) Sqrt[3])/
          20}, {(-1)/5, -Sqrt[3]/8}, {(-7)/40, -Sqrt[3]/10}, {(-1)/
          5, ((-3) Sqrt[3])/40}, {(-7)/40, -Sqrt[3]/20}, {(-1)/5, -Sqrt[3]/
          40}, {(-7)/40, 0}, {(-1)/5, Sqrt[3]/40}, {(-7)/40, Sqrt[3]/
          20}, {(-1)/5, (3 Sqrt[3])/40}, {(-7)/40, Sqrt[3]/10}, {(-1)/5, 
          Sqrt[3]/8}, {(-7)/40, (3 Sqrt[3])/20}, {(-1)/5, (7 Sqrt[3])/
          40}, {(-7)/40, Sqrt[3]/5}, {(-1)/5, (9 Sqrt[3])/40}, {(-7)/40, 
          Sqrt[3]/4}, {(-1)/5, (11 Sqrt[3])/40}, {(-7)/40, (3 Sqrt[3])/
          10}, {(-1)/5, (13 Sqrt[3])/40}, {(-7)/40, (7 Sqrt[3])/20}, {(-1)/
          5, (3 Sqrt[3])/8}, {(-7)/40, (2 Sqrt[3])/5}, {(-1)/5, (17 Sqrt[3])/
          40}, {(-7)/40, (9 Sqrt[3])/20}, {(-1)/5, (19 Sqrt[3])/40}, {(-7)/40,
           Sqrt[3]/2}, {(-1)/5, (21 Sqrt[3])/40}, {(-7)/40, (11 Sqrt[3])/
          20}, {(-1)/8, ((-11) Sqrt[3])/20}, {(-3)/20, ((-21) Sqrt[3])/
          40}, {(-1)/8, -Sqrt[3]/2}, {(-3)/20, ((-19) Sqrt[3])/40}, {(-1)/
          8, ((-9) Sqrt[3])/20}, {(-3)/20, ((-17) Sqrt[3])/40}, {(-1)/
          8, ((-2) Sqrt[3])/5}, {(-3)/20, ((-3) Sqrt[3])/8}, {(-1)/
          8, ((-7) Sqrt[3])/20}, {(-3)/20, ((-13) Sqrt[3])/40}, {(-1)/
          8, ((-3) Sqrt[3])/10}, {(-3)/20, ((-11) Sqrt[3])/40}, {(-1)/8, -
          Sqrt[3]/4}, {(-3)/20, ((-9) Sqrt[3])/40}, {(-1)/8, -Sqrt[3]/
          5}, {(-3)/20, ((-7) Sqrt[3])/40}, {(-1)/8, ((-3) Sqrt[3])/
          20}, {(-3)/20, -Sqrt[3]/8}, {(-1)/8, -Sqrt[3]/10}, {(-3)/
          20, ((-3) Sqrt[3])/40}, {(-1)/8, -Sqrt[3]/20}, {(-3)/20, -Sqrt[3]/
          40}, {(-1)/8, 0}, {(-3)/20, Sqrt[3]/40}, {(-1)/8, Sqrt[3]/
          20}, {(-3)/20, (3 Sqrt[3])/40}, {(-1)/8, Sqrt[3]/10}, {(-3)/20, 
          Sqrt[3]/8}, {(-1)/8, (3 Sqrt[3])/20}, {(-3)/20, (7 Sqrt[3])/
          40}, {(-1)/8, Sqrt[3]/5}, {(-3)/20, (9 Sqrt[3])/40}, {(-1)/8, 
          Sqrt[3]/4}, {(-3)/20, (11 Sqrt[3])/40}, {(-1)/8, (3 Sqrt[3])/
          10}, {(-3)/20, (13 Sqrt[3])/40}, {(-1)/8, (7 Sqrt[3])/20}, {(-3)/
          20, (3 Sqrt[3])/8}, {(-1)/8, (2 Sqrt[3])/5}, {(-3)/20, (17 Sqrt[3])/
          40}, {(-1)/8, (9 Sqrt[3])/20}, {(-3)/20, (19 Sqrt[3])/40}, {(-1)/8, 
          Sqrt[3]/2}, {(-3)/20, (21 Sqrt[3])/40}, {(-1)/8, (11 Sqrt[3])/
          20}, {(-3)/40, ((-11) Sqrt[3])/20}, {(-1)/10, ((-21) Sqrt[3])/
          40}, {(-3)/40, -Sqrt[3]/2}, {(-1)/10, ((-19) Sqrt[3])/40}, {(-3)/
          40, ((-9) Sqrt[3])/20}, {(-1)/10, ((-17) Sqrt[3])/40}, {(-3)/
          40, ((-2) Sqrt[3])/5}, {(-1)/10, ((-3) Sqrt[3])/8}, {(-3)/
          40, ((-7) Sqrt[3])/20}, {(-1)/10, ((-13) Sqrt[3])/40}, {(-3)/
          40, ((-3) Sqrt[3])/10}, {(-1)/10, ((-11) Sqrt[3])/40}, {(-3)/40, -
          Sqrt[3]/4}, {(-1)/10, ((-9) Sqrt[3])/40}, {(-3)/40, -Sqrt[3]/
          5}, {(-1)/10, ((-7) Sqrt[3])/40}, {(-3)/40, ((-3) Sqrt[3])/
          20}, {(-1)/10, -Sqrt[3]/8}, {(-3)/40, -Sqrt[3]/10}, {(-1)/
          10, ((-3) Sqrt[3])/40}, {(-3)/40, -Sqrt[3]/20}, {(-1)/10, -Sqrt[3]/
          40}, {(-3)/40, 0}, {(-1)/10, Sqrt[3]/40}, {(-3)/40, Sqrt[3]/
          20}, {(-1)/10, (3 Sqrt[3])/40}, {(-3)/40, Sqrt[3]/10}, {(-1)/10, 
          Sqrt[3]/8}, {(-3)/40, (3 Sqrt[3])/20}, {(-1)/10, (7 Sqrt[3])/
          40}, {(-3)/40, Sqrt[3]/5}, {(-1)/10, (9 Sqrt[3])/40}, {(-3)/40, 
          Sqrt[3]/4}, {(-1)/10, (11 Sqrt[3])/40}, {(-3)/40, (3 Sqrt[3])/
          10}, {(-1)/10, (13 Sqrt[3])/40}, {(-3)/40, (7 Sqrt[3])/20}, {(-1)/
          10, (3 Sqrt[3])/8}, {(-3)/40, (2 Sqrt[3])/5}, {(-1)/
          10, (17 Sqrt[3])/40}, {(-3)/40, (9 Sqrt[3])/20}, {(-1)/
          10, (19 Sqrt[3])/40}, {(-3)/40, Sqrt[3]/2}, {(-1)/10, (21 Sqrt[3])/
          40}, {(-3)/40, (11 Sqrt[3])/20}, {(-1)/20, ((-23) Sqrt[3])/
          40}, {(-1)/40, ((-11) Sqrt[3])/20}, {(-1)/20, ((-21) Sqrt[3])/
          40}, {(-1)/40, -Sqrt[3]/2}, {(-1)/20, ((-19) Sqrt[3])/40}, {(-1)/
          40, ((-9) Sqrt[3])/20}, {(-1)/20, ((-17) Sqrt[3])/40}, {(-1)/
          40, ((-2) Sqrt[3])/5}, {(-1)/20, ((-3) Sqrt[3])/8}, {(-1)/
          40, ((-7) Sqrt[3])/20}, {(-1)/20, ((-13) Sqrt[3])/40}, {(-1)/
          40, ((-3) Sqrt[3])/10}, {(-1)/20, ((-11) Sqrt[3])/40}, {(-1)/40, -
          Sqrt[3]/4}, {(-1)/20, ((-9) Sqrt[3])/40}, {(-1)/40, -Sqrt[3]/
          5}, {(-1)/20, ((-7) Sqrt[3])/40}, {(-1)/40, ((-3) Sqrt[3])/
          20}, {(-1)/20, -Sqrt[3]/8}, {(-1)/40, -Sqrt[3]/10}, {(-1)/
          20, ((-3) Sqrt[3])/40}, {(-1)/40, -Sqrt[3]/20}, {(-1)/20, -Sqrt[3]/
          40}, {(-1)/40, 0}, {(-1)/20, Sqrt[3]/40}, {(-1)/40, Sqrt[3]/
          20}, {(-1)/20, (3 Sqrt[3])/40}, {(-1)/40, Sqrt[3]/10}, {(-1)/20, 
          Sqrt[3]/8}, {(-1)/40, (3 Sqrt[3])/20}, {(-1)/20, (7 Sqrt[3])/
          40}, {(-1)/40, Sqrt[3]/5}, {(-1)/20, (9 Sqrt[3])/40}, {(-1)/40, 
          Sqrt[3]/4}, {(-1)/20, (11 Sqrt[3])/40}, {(-1)/40, (3 Sqrt[3])/
          10}, {(-1)/20, (13 Sqrt[3])/40}, {(-1)/40, (7 Sqrt[3])/20}, {(-1)/
          20, (3 Sqrt[3])/8}, {(-1)/40, (2 Sqrt[3])/5}, {(-1)/
          20, (17 Sqrt[3])/40}, {(-1)/40, (9 Sqrt[3])/20}, {(-1)/
          20, (19 Sqrt[3])/40}, {(-1)/40, Sqrt[3]/2}, {(-1)/20, (21 Sqrt[3])/
          40}, {(-1)/40, (11 Sqrt[3])/20}, {(-1)/20, (23 Sqrt[3])/40}, {
         0, ((-23) Sqrt[3])/40}, {1/40, ((-11) Sqrt[3])/20}, {
         0, ((-21) Sqrt[3])/40}, {1/40, -Sqrt[3]/2}, {
         0, ((-19) Sqrt[3])/40}, {1/40, ((-9) Sqrt[3])/20}, {
         0, ((-17) Sqrt[3])/40}, {1/40, ((-2) Sqrt[3])/5}, {
         0, ((-3) Sqrt[3])/8}, {1/40, ((-7) Sqrt[3])/20}, {
         0, ((-13) Sqrt[3])/40}, {1/40, ((-3) Sqrt[3])/10}, {
         0, ((-11) Sqrt[3])/40}, {1/40, -Sqrt[3]/4}, {0, ((-9) Sqrt[3])/40}, {
         1/40, -Sqrt[3]/5}, {0, ((-7) Sqrt[3])/40}, {
         1/40, ((-3) Sqrt[3])/20}, {0, -Sqrt[3]/8}, {1/40, -Sqrt[3]/10}, {
         0, ((-3) Sqrt[3])/40}, {1/40, -Sqrt[3]/20}, {0, -Sqrt[3]/40}, {
         1/40, 0}, {0, Sqrt[3]/40}, {1/40, Sqrt[3]/20}, {0, (3 Sqrt[3])/40}, {
         1/40, Sqrt[3]/10}, {0, Sqrt[3]/8}, {1/40, (3 Sqrt[3])/20}, {
         0, (7 Sqrt[3])/40}, {1/40, Sqrt[3]/5}, {0, (9 Sqrt[3])/40}, {
         1/40, Sqrt[3]/4}, {0, (11 Sqrt[3])/40}, {1/40, (3 Sqrt[3])/10}, {
         0, (13 Sqrt[3])/40}, {1/40, (7 Sqrt[3])/20}, {0, (3 Sqrt[3])/8}, {
         1/40, (2 Sqrt[3])/5}, {0, (17 Sqrt[3])/40}, {1/40, (9 Sqrt[3])/20}, {
         0, (19 Sqrt[3])/40}, {1/40, Sqrt[3]/2}, {0, (21 Sqrt[3])/40}, {
         1/40, (11 Sqrt[3])/20}, {0, (23 Sqrt[3])/40}, {
         1/20, ((-23) Sqrt[3])/40}, {3/40, ((-11) Sqrt[3])/20}, {
         1/20, ((-21) Sqrt[3])/40}, {3/40, -Sqrt[3]/2}, {
         1/20, ((-19) Sqrt[3])/40}, {3/40, ((-9) Sqrt[3])/20}, {
         1/20, ((-17) Sqrt[3])/40}, {3/40, ((-2) Sqrt[3])/5}, {
         1/20, ((-3) Sqrt[3])/8}, {3/40, ((-7) Sqrt[3])/20}, {
         1/20, ((-13) Sqrt[3])/40}, {3/40, ((-3) Sqrt[3])/10}, {
         1/20, ((-11) Sqrt[3])/40}, {3/40, -Sqrt[3]/4}, {
         1/20, ((-9) Sqrt[3])/40}, {3/40, -Sqrt[3]/5}, {
         1/20, ((-7) Sqrt[3])/40}, {3/40, ((-3) Sqrt[3])/20}, {
         1/20, -Sqrt[3]/8}, {3/40, -Sqrt[3]/10}, {1/20, ((-3) Sqrt[3])/40}, {
         3/40, -Sqrt[3]/20}, {1/20, -Sqrt[3]/40}, {3/40, 0}, {
         1/20, Sqrt[3]/40}, {3/40, Sqrt[3]/20}, {1/20, (3 Sqrt[3])/40}, {
         3/40, Sqrt[3]/10}, {1/20, Sqrt[3]/8}, {3/40, (3 Sqrt[3])/20}, {
         1/20, (7 Sqrt[3])/40}, {3/40, Sqrt[3]/5}, {1/20, (9 Sqrt[3])/40}, {
         3/40, Sqrt[3]/4}, {1/20, (11 Sqrt[3])/40}, {3/40, (3 Sqrt[3])/10}, {
         1/20, (13 Sqrt[3])/40}, {3/40, (7 Sqrt[3])/20}, {
         1/20, (3 Sqrt[3])/8}, {3/40, (2 Sqrt[3])/5}, {
         1/20, (17 Sqrt[3])/40}, {3/40, (9 Sqrt[3])/20}, {
         1/20, (19 Sqrt[3])/40}, {3/40, Sqrt[3]/2}, {1/20, (21 Sqrt[3])/40}, {
         3/40, (11 Sqrt[3])/20}, {1/20, (23 Sqrt[3])/40}, {
         1/8, ((-11) Sqrt[3])/20}, {1/10, ((-21) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/2}, {1/10, ((-19) Sqrt[3])/40}, {
         1/8, ((-9) Sqrt[3])/20}, {1/10, ((-17) Sqrt[3])/40}, {
         1/8, ((-2) Sqrt[3])/5}, {1/10, ((-3) Sqrt[3])/8}, {
         1/8, ((-7) Sqrt[3])/20}, {1/10, ((-13) Sqrt[3])/40}, {
         1/8, ((-3) Sqrt[3])/10}, {1/10, ((-11) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/4}, {1/10, ((-9) Sqrt[3])/40}, {1/8, -Sqrt[3]/5}, {
         1/10, ((-7) Sqrt[3])/40}, {1/8, ((-3) Sqrt[3])/20}, {
         1/10, -Sqrt[3]/8}, {1/8, -Sqrt[3]/10}, {1/10, ((-3) Sqrt[3])/40}, {
         1/8, -Sqrt[3]/20}, {1/10, -Sqrt[3]/40}, {1/8, 0}, {
         1/10, Sqrt[3]/40}, {1/8, Sqrt[3]/20}, {1/10, (3 Sqrt[3])/40}, {
         1/8, Sqrt[3]/10}, {1/10, Sqrt[3]/8}, {1/8, (3 Sqrt[3])/20}, {
         1/10, (7 Sqrt[3])/40}, {1/8, Sqrt[3]/5}, {1/10, (9 Sqrt[3])/40}, {
         1/8, Sqrt[3]/4}, {1/10, (11 Sqrt[3])/40}, {1/8, (3 Sqrt[3])/10}, {
         1/10, (13 Sqrt[3])/40}, {1/8, (7 Sqrt[3])/20}, {
         1/10, (3 Sqrt[3])/8}, {1/8, (2 Sqrt[3])/5}, {
         1/10, (17 Sqrt[3])/40}, {1/8, (9 Sqrt[3])/20}, {
         1/10, (19 Sqrt[3])/40}, {1/8, Sqrt[3]/2}, {1/10, (21 Sqrt[3])/40}, {
         1/8, (11 Sqrt[3])/20}, {7/40, ((-11) Sqrt[3])/20}, {
         3/20, ((-21) Sqrt[3])/40}, {7/40, -Sqrt[3]/2}, {
         3/20, ((-19) Sqrt[3])/40}, {7/40, ((-9) Sqrt[3])/20}, {
         3/20, ((-17) Sqrt[3])/40}, {7/40, ((-2) Sqrt[3])/5}, {
         3/20, ((-3) Sqrt[3])/8}, {7/40, ((-7) Sqrt[3])/20}, {
         3/20, ((-13) Sqrt[3])/40}, {7/40, ((-3) Sqrt[3])/10}, {
         3/20, ((-11) Sqrt[3])/40}, {7/40, -Sqrt[3]/4}, {
         3/20, ((-9) Sqrt[3])/40}, {7/40, -Sqrt[3]/5}, {
         3/20, ((-7) Sqrt[3])/40}, {7/40, ((-3) Sqrt[3])/20}, {
         3/20, -Sqrt[3]/8}, {7/40, -Sqrt[3]/10}, {3/20, ((-3) Sqrt[3])/40}, {
         7/40, -Sqrt[3]/20}, {3/20, -Sqrt[3]/40}, {7/40, 0}, {
         3/20, Sqrt[3]/40}, {7/40, Sqrt[3]/20}, {3/20, (3 Sqrt[3])/40}, {
         7/40, Sqrt[3]/10}, {3/20, Sqrt[3]/8}, {7/40, (3 Sqrt[3])/20}, {
         3/20, (7 Sqrt[3])/40}, {7/40, Sqrt[3]/5}, {3/20, (9 Sqrt[3])/40}, {
         7/40, Sqrt[3]/4}, {3/20, (11 Sqrt[3])/40}, {7/40, (3 Sqrt[3])/10}, {
         3/20, (13 Sqrt[3])/40}, {7/40, (7 Sqrt[3])/20}, {
         3/20, (3 Sqrt[3])/8}, {7/40, (2 Sqrt[3])/5}, {
         3/20, (17 Sqrt[3])/40}, {7/40, (9 Sqrt[3])/20}, {
         3/20, (19 Sqrt[3])/40}, {7/40, Sqrt[3]/2}, {3/20, (21 Sqrt[3])/40}, {
         7/40, (11 Sqrt[3])/20}, {9/40, ((-11) Sqrt[3])/20}, {
         1/5, ((-21) Sqrt[3])/40}, {9/40, -Sqrt[3]/2}, {
         1/5, ((-19) Sqrt[3])/40}, {9/40, ((-9) Sqrt[3])/20}, {
         1/5, ((-17) Sqrt[3])/40}, {9/40, ((-2) Sqrt[3])/5}, {
         1/5, ((-3) Sqrt[3])/8}, {9/40, ((-7) Sqrt[3])/20}, {
         1/5, ((-13) Sqrt[3])/40}, {9/40, ((-3) Sqrt[3])/10}, {
         1/5, ((-11) Sqrt[3])/40}, {9/40, -Sqrt[3]/4}, {
         1/5, ((-9) Sqrt[3])/40}, {9/40, -Sqrt[3]/5}, {
         1/5, ((-7) Sqrt[3])/40}, {9/40, ((-3) Sqrt[3])/20}, {
         1/5, -Sqrt[3]/8}, {9/40, -Sqrt[3]/10}, {1/5, ((-3) Sqrt[3])/40}, {
         9/40, -Sqrt[3]/20}, {1/5, -Sqrt[3]/40}, {9/40, 0}, {
         1/5, Sqrt[3]/40}, {9/40, Sqrt[3]/20}, {1/5, (3 Sqrt[3])/40}, {
         9/40, Sqrt[3]/10}, {1/5, Sqrt[3]/8}, {9/40, (3 Sqrt[3])/20}, {
         1/5, (7 Sqrt[3])/40}, {9/40, Sqrt[3]/5}, {1/5, (9 Sqrt[3])/40}, {
         9/40, Sqrt[3]/4}, {1/5, (11 Sqrt[3])/40}, {9/40, (3 Sqrt[3])/10}, {
         1/5, (13 Sqrt[3])/40}, {9/40, (7 Sqrt[3])/20}, {
         1/5, (3 Sqrt[3])/8}, {9/40, (2 Sqrt[3])/5}, {1/5, (17 Sqrt[3])/40}, {
         9/40, (9 Sqrt[3])/20}, {1/5, (19 Sqrt[3])/40}, {9/40, Sqrt[3]/2}, {
         1/5, (21 Sqrt[3])/40}, {9/40, (11 Sqrt[3])/20}, {
         11/40, ((-11) Sqrt[3])/20}, {1/4, ((-21) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/2}, {1/4, ((-19) Sqrt[3])/40}, {
         11/40, ((-9) Sqrt[3])/20}, {1/4, ((-17) Sqrt[3])/40}, {
         11/40, ((-2) Sqrt[3])/5}, {1/4, ((-3) Sqrt[3])/8}, {
         11/40, ((-7) Sqrt[3])/20}, {1/4, ((-13) Sqrt[3])/40}, {
         11/40, ((-3) Sqrt[3])/10}, {1/4, ((-11) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/4}, {1/4, ((-9) Sqrt[3])/40}, {11/40, -Sqrt[3]/5}, {
         1/4, ((-7) Sqrt[3])/40}, {11/40, ((-3) Sqrt[3])/20}, {
         1/4, -Sqrt[3]/8}, {11/40, -Sqrt[3]/10}, {1/4, ((-3) Sqrt[3])/40}, {
         11/40, -Sqrt[3]/20}, {1/4, -Sqrt[3]/40}, {11/40, 0}, {
         1/4, Sqrt[3]/40}, {11/40, Sqrt[3]/20}, {1/4, (3 Sqrt[3])/40}, {
         11/40, Sqrt[3]/10}, {1/4, Sqrt[3]/8}, {11/40, (3 Sqrt[3])/20}, {
         1/4, (7 Sqrt[3])/40}, {11/40, Sqrt[3]/5}, {1/4, (9 Sqrt[3])/40}, {
         11/40, Sqrt[3]/4}, {1/4, (11 Sqrt[3])/40}, {11/40, (3 Sqrt[3])/10}, {
         1/4, (13 Sqrt[3])/40}, {11/40, (7 Sqrt[3])/20}, {
         1/4, (3 Sqrt[3])/8}, {11/40, (2 Sqrt[3])/5}, {
         1/4, (17 Sqrt[3])/40}, {11/40, (9 Sqrt[3])/20}, {
         1/4, (19 Sqrt[3])/40}, {11/40, Sqrt[3]/2}, {1/4, (21 Sqrt[3])/40}, {
         11/40, (11 Sqrt[3])/20}, {3/10, ((-21) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/2}, {3/10, ((-19) Sqrt[3])/40}, {
         13/40, ((-9) Sqrt[3])/20}, {3/10, ((-17) Sqrt[3])/40}, {
         13/40, ((-2) Sqrt[3])/5}, {3/10, ((-3) Sqrt[3])/8}, {
         13/40, ((-7) Sqrt[3])/20}, {3/10, ((-13) Sqrt[3])/40}, {
         13/40, ((-3) Sqrt[3])/10}, {3/10, ((-11) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/4}, {3/10, ((-9) Sqrt[3])/40}, {13/40, -Sqrt[3]/5}, {
         3/10, ((-7) Sqrt[3])/40}, {13/40, ((-3) Sqrt[3])/20}, {
         3/10, -Sqrt[3]/8}, {13/40, -Sqrt[3]/10}, {3/10, ((-3) Sqrt[3])/40}, {
         13/40, -Sqrt[3]/20}, {3/10, -Sqrt[3]/40}, {13/40, 0}, {
         3/10, Sqrt[3]/40}, {13/40, Sqrt[3]/20}, {3/10, (3 Sqrt[3])/40}, {
         13/40, Sqrt[3]/10}, {3/10, Sqrt[3]/8}, {13/40, (3 Sqrt[3])/20}, {
         3/10, (7 Sqrt[3])/40}, {13/40, Sqrt[3]/5}, {3/10, (9 Sqrt[3])/40}, {
         13/40, Sqrt[3]/4}, {3/10, (11 Sqrt[3])/40}, {
         13/40, (3 Sqrt[3])/10}, {3/10, (13 Sqrt[3])/40}, {
         13/40, (7 Sqrt[3])/20}, {3/10, (3 Sqrt[3])/8}, {
         13/40, (2 Sqrt[3])/5}, {3/10, (17 Sqrt[3])/40}, {
         13/40, (9 Sqrt[3])/20}, {3/10, (19 Sqrt[3])/40}, {
         13/40, Sqrt[3]/2}, {3/10, (21 Sqrt[3])/40}, {
         7/20, ((-21) Sqrt[3])/40}, {3/8, -Sqrt[3]/2}, {
         7/20, ((-19) Sqrt[3])/40}, {3/8, ((-9) Sqrt[3])/20}, {
         7/20, ((-17) Sqrt[3])/40}, {3/8, ((-2) Sqrt[3])/5}, {
         7/20, ((-3) Sqrt[3])/8}, {3/8, ((-7) Sqrt[3])/20}, {
         7/20, ((-13) Sqrt[3])/40}, {3/8, ((-3) Sqrt[3])/10}, {
         7/20, ((-11) Sqrt[3])/40}, {3/8, -Sqrt[3]/4}, {
         7/20, ((-9) Sqrt[3])/40}, {3/8, -Sqrt[3]/5}, {
         7/20, ((-7) Sqrt[3])/40}, {3/8, ((-3) Sqrt[3])/20}, {
         7/20, -Sqrt[3]/8}, {3/8, -Sqrt[3]/10}, {7/20, ((-3) Sqrt[3])/40}, {
         3/8, -Sqrt[3]/20}, {7/20, -Sqrt[3]/40}, {3/8, 0}, {
         7/20, Sqrt[3]/40}, {3/8, Sqrt[3]/20}, {7/20, (3 Sqrt[3])/40}, {
         3/8, Sqrt[3]/10}, {7/20, Sqrt[3]/8}, {3/8, (3 Sqrt[3])/20}, {
         7/20, (7 Sqrt[3])/40}, {3/8, Sqrt[3]/5}, {7/20, (9 Sqrt[3])/40}, {
         3/8, Sqrt[3]/4}, {7/20, (11 Sqrt[3])/40}, {3/8, (3 Sqrt[3])/10}, {
         7/20, (13 Sqrt[3])/40}, {3/8, (7 Sqrt[3])/20}, {
         7/20, (3 Sqrt[3])/8}, {3/8, (2 Sqrt[3])/5}, {
         7/20, (17 Sqrt[3])/40}, {3/8, (9 Sqrt[3])/20}, {
         7/20, (19 Sqrt[3])/40}, {3/8, Sqrt[3]/2}, {7/20, (21 Sqrt[3])/40}, {
         2/5, ((-21) Sqrt[3])/40}, {17/40, -Sqrt[3]/2}, {
         2/5, ((-19) Sqrt[3])/40}, {17/40, ((-9) Sqrt[3])/20}, {
         2/5, ((-17) Sqrt[3])/40}, {17/40, ((-2) Sqrt[3])/5}, {
         2/5, ((-3) Sqrt[3])/8}, {17/40, ((-7) Sqrt[3])/20}, {
         2/5, ((-13) Sqrt[3])/40}, {17/40, ((-3) Sqrt[3])/10}, {
         2/5, ((-11) Sqrt[3])/40}, {17/40, -Sqrt[3]/4}, {
         2/5, ((-9) Sqrt[3])/40}, {17/40, -Sqrt[3]/5}, {
         2/5, ((-7) Sqrt[3])/40}, {17/40, ((-3) Sqrt[3])/20}, {
         2/5, -Sqrt[3]/8}, {17/40, -Sqrt[3]/10}, {2/5, ((-3) Sqrt[3])/40}, {
         17/40, -Sqrt[3]/20}, {2/5, -Sqrt[3]/40}, {17/40, 0}, {
         2/5, Sqrt[3]/40}, {17/40, Sqrt[3]/20}, {2/5, (3 Sqrt[3])/40}, {
         17/40, Sqrt[3]/10}, {2/5, Sqrt[3]/8}, {17/40, (3 Sqrt[3])/20}, {
         2/5, (7 Sqrt[3])/40}, {17/40, Sqrt[3]/5}, {2/5, (9 Sqrt[3])/40}, {
         17/40, Sqrt[3]/4}, {2/5, (11 Sqrt[3])/40}, {17/40, (3 Sqrt[3])/10}, {
         2/5, (13 Sqrt[3])/40}, {17/40, (7 Sqrt[3])/20}, {
         2/5, (3 Sqrt[3])/8}, {17/40, (2 Sqrt[3])/5}, {
         2/5, (17 Sqrt[3])/40}, {17/40, (9 Sqrt[3])/20}, {
         2/5, (19 Sqrt[3])/40}, {17/40, Sqrt[3]/2}, {2/5, (21 Sqrt[3])/40}, {
         19/40, -Sqrt[3]/2}, {9/20, ((-19) Sqrt[3])/40}, {
         19/40, ((-9) Sqrt[3])/20}, {9/20, ((-17) Sqrt[3])/40}, {
         19/40, ((-2) Sqrt[3])/5}, {9/20, ((-3) Sqrt[3])/8}, {
         19/40, ((-7) Sqrt[3])/20}, {9/20, ((-13) Sqrt[3])/40}, {
         19/40, ((-3) Sqrt[3])/10}, {9/20, ((-11) Sqrt[3])/40}, {
         19/40, -Sqrt[3]/4}, {9/20, ((-9) Sqrt[3])/40}, {19/40, -Sqrt[3]/5}, {
         9/20, ((-7) Sqrt[3])/40}, {19/40, ((-3) Sqrt[3])/20}, {
         9/20, -Sqrt[3]/8}, {19/40, -Sqrt[3]/10}, {9/20, ((-3) Sqrt[3])/40}, {
         19/40, -Sqrt[3]/20}, {9/20, -Sqrt[3]/40}, {19/40, 0}, {
         9/20, Sqrt[3]/40}, {19/40, Sqrt[3]/20}, {9/20, (3 Sqrt[3])/40}, {
         19/40, Sqrt[3]/10}, {9/20, Sqrt[3]/8}, {19/40, (3 Sqrt[3])/20}, {
         9/20, (7 Sqrt[3])/40}, {19/40, Sqrt[3]/5}, {9/20, (9 Sqrt[3])/40}, {
         19/40, Sqrt[3]/4}, {9/20, (11 Sqrt[3])/40}, {
         19/40, (3 Sqrt[3])/10}, {9/20, (13 Sqrt[3])/40}, {
         19/40, (7 Sqrt[3])/20}, {9/20, (3 Sqrt[3])/8}, {
         19/40, (2 Sqrt[3])/5}, {9/20, (17 Sqrt[3])/40}, {
         19/40, (9 Sqrt[3])/20}, {9/20, (19 Sqrt[3])/40}, {
         19/40, Sqrt[3]/2}, {1/2, ((-19) Sqrt[3])/40}, {
         21/40, ((-9) Sqrt[3])/20}, {1/2, ((-17) Sqrt[3])/40}, {
         21/40, ((-2) Sqrt[3])/5}, {1/2, ((-3) Sqrt[3])/8}, {
         21/40, ((-7) Sqrt[3])/20}, {1/2, ((-13) Sqrt[3])/40}, {
         21/40, ((-3) Sqrt[3])/10}, {1/2, ((-11) Sqrt[3])/40}, {
         21/40, -Sqrt[3]/4}, {1/2, ((-9) Sqrt[3])/40}, {21/40, -Sqrt[3]/5}, {
         1/2, ((-7) Sqrt[3])/40}, {21/40, ((-3) Sqrt[3])/20}, {
         1/2, -Sqrt[3]/8}, {21/40, -Sqrt[3]/10}, {1/2, ((-3) Sqrt[3])/40}, {
         21/40, -Sqrt[3]/20}, {1/2, -Sqrt[3]/40}, {21/40, 0}, {
         1/2, Sqrt[3]/40}, {21/40, Sqrt[3]/20}, {1/2, (3 Sqrt[3])/40}, {
         21/40, Sqrt[3]/10}, {1/2, Sqrt[3]/8}, {21/40, (3 Sqrt[3])/20}, {
         1/2, (7 Sqrt[3])/40}, {21/40, Sqrt[3]/5}, {1/2, (9 Sqrt[3])/40}, {
         21/40, Sqrt[3]/4}, {1/2, (11 Sqrt[3])/40}, {21/40, (3 Sqrt[3])/10}, {
         1/2, (13 Sqrt[3])/40}, {21/40, (7 Sqrt[3])/20}, {
         1/2, (3 Sqrt[3])/8}, {21/40, (2 Sqrt[3])/5}, {
         1/2, (17 Sqrt[3])/40}, {21/40, (9 Sqrt[3])/20}, {
         1/2, (19 Sqrt[3])/40}, {11/20, ((-19) Sqrt[3])/40}, {
         23/40, ((-9) Sqrt[3])/20}, {11/20, ((-17) Sqrt[3])/40}, {
         23/40, ((-2) Sqrt[3])/5}, {11/20, ((-3) Sqrt[3])/8}, {
         23/40, ((-7) Sqrt[3])/20}, {11/20, ((-13) Sqrt[3])/40}, {
         23/40, ((-3) Sqrt[3])/10}, {11/20, ((-11) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/4}, {11/20, ((-9) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/5}, {11/20, ((-7) Sqrt[3])/40}, {
         23/40, ((-3) Sqrt[3])/20}, {11/20, -Sqrt[3]/8}, {
         23/40, -Sqrt[3]/10}, {11/20, ((-3) Sqrt[3])/40}, {
         23/40, -Sqrt[3]/20}, {11/20, -Sqrt[3]/40}, {23/40, 0}, {
         11/20, Sqrt[3]/40}, {23/40, Sqrt[3]/20}, {11/20, (3 Sqrt[3])/40}, {
         23/40, Sqrt[3]/10}, {11/20, Sqrt[3]/8}, {23/40, (3 Sqrt[3])/20}, {
         11/20, (7 Sqrt[3])/40}, {23/40, Sqrt[3]/5}, {
         11/20, (9 Sqrt[3])/40}, {23/40, Sqrt[3]/4}, {
         11/20, (11 Sqrt[3])/40}, {23/40, (3 Sqrt[3])/10}, {
         11/20, (13 Sqrt[3])/40}, {23/40, (7 Sqrt[3])/20}, {
         11/20, (3 Sqrt[3])/8}, {23/40, (2 Sqrt[3])/5}, {
         11/20, (17 Sqrt[3])/40}, {23/40, (9 Sqrt[3])/20}, {
         11/20, (19 Sqrt[3])/40}, {5/8, ((-9) Sqrt[3])/20}, {
         3/5, ((-17) Sqrt[3])/40}, {5/8, ((-2) Sqrt[3])/5}, {
         3/5, ((-3) Sqrt[3])/8}, {5/8, ((-7) Sqrt[3])/20}, {
         3/5, ((-13) Sqrt[3])/40}, {5/8, ((-3) Sqrt[3])/10}, {
         3/5, ((-11) Sqrt[3])/40}, {5/8, -Sqrt[3]/4}, {
         3/5, ((-9) Sqrt[3])/40}, {5/8, -Sqrt[3]/5}, {
         3/5, ((-7) Sqrt[3])/40}, {5/8, ((-3) Sqrt[3])/20}, {
         3/5, -Sqrt[3]/8}, {5/8, -Sqrt[3]/10}, {3/5, ((-3) Sqrt[3])/40}, {
         5/8, -Sqrt[3]/20}, {3/5, -Sqrt[3]/40}, {5/8, 0}, {3/5, Sqrt[3]/40}, {
         5/8, Sqrt[3]/20}, {3/5, (3 Sqrt[3])/40}, {5/8, Sqrt[3]/10}, {
         3/5, Sqrt[3]/8}, {5/8, (3 Sqrt[3])/20}, {3/5, (7 Sqrt[3])/40}, {
         5/8, Sqrt[3]/5}, {3/5, (9 Sqrt[3])/40}, {5/8, Sqrt[3]/4}, {
         3/5, (11 Sqrt[3])/40}, {5/8, (3 Sqrt[3])/10}, {
         3/5, (13 Sqrt[3])/40}, {5/8, (7 Sqrt[3])/20}, {3/5, (3 Sqrt[3])/8}, {
         5/8, (2 Sqrt[3])/5}, {3/5, (17 Sqrt[3])/40}, {5/8, (9 Sqrt[3])/20}, {
         13/20, ((-17) Sqrt[3])/40}, {27/40, ((-2) Sqrt[3])/5}, {
         13/20, ((-3) Sqrt[3])/8}, {27/40, ((-7) Sqrt[3])/20}, {
         13/20, ((-13) Sqrt[3])/40}, {27/40, ((-3) Sqrt[3])/10}, {
         13/20, ((-11) Sqrt[3])/40}, {27/40, -Sqrt[3]/4}, {
         13/20, ((-9) Sqrt[3])/40}, {27/40, -Sqrt[3]/5}, {
         13/20, ((-7) Sqrt[3])/40}, {27/40, ((-3) Sqrt[3])/20}, {
         13/20, -Sqrt[3]/8}, {27/40, -Sqrt[3]/10}, {
         13/20, ((-3) Sqrt[3])/40}, {27/40, -Sqrt[3]/20}, {
         13/20, -Sqrt[3]/40}, {27/40, 0}, {13/20, Sqrt[3]/40}, {
         27/40, Sqrt[3]/20}, {13/20, (3 Sqrt[3])/40}, {27/40, Sqrt[3]/10}, {
         13/20, Sqrt[3]/8}, {27/40, (3 Sqrt[3])/20}, {
         13/20, (7 Sqrt[3])/40}, {27/40, Sqrt[3]/5}, {
         13/20, (9 Sqrt[3])/40}, {27/40, Sqrt[3]/4}, {
         13/20, (11 Sqrt[3])/40}, {27/40, (3 Sqrt[3])/10}, {
         13/20, (13 Sqrt[3])/40}, {27/40, (7 Sqrt[3])/20}, {
         13/20, (3 Sqrt[3])/8}, {27/40, (2 Sqrt[3])/5}, {
         13/20, (17 Sqrt[3])/40}, {7/10, ((-3) Sqrt[3])/8}, {
         29/40, ((-7) Sqrt[3])/20}, {7/10, ((-13) Sqrt[3])/40}, {
         29/40, ((-3) Sqrt[3])/10}, {7/10, ((-11) Sqrt[3])/40}, {
         29/40, -Sqrt[3]/4}, {7/10, ((-9) Sqrt[3])/40}, {29/40, -Sqrt[3]/5}, {
         7/10, ((-7) Sqrt[3])/40}, {29/40, ((-3) Sqrt[3])/20}, {
         7/10, -Sqrt[3]/8}, {29/40, -Sqrt[3]/10}, {7/10, ((-3) Sqrt[3])/40}, {
         29/40, -Sqrt[3]/20}, {7/10, -Sqrt[3]/40}, {29/40, 0}, {
         7/10, Sqrt[3]/40}, {29/40, Sqrt[3]/20}, {7/10, (3 Sqrt[3])/40}, {
         29/40, Sqrt[3]/10}, {7/10, Sqrt[3]/8}, {29/40, (3 Sqrt[3])/20}, {
         7/10, (7 Sqrt[3])/40}, {29/40, Sqrt[3]/5}, {7/10, (9 Sqrt[3])/40}, {
         29/40, Sqrt[3]/4}, {7/10, (11 Sqrt[3])/40}, {
         29/40, (3 Sqrt[3])/10}, {7/10, (13 Sqrt[3])/40}, {
         29/40, (7 Sqrt[3])/20}, {7/10, (3 Sqrt[3])/8}, {
         3/4, ((-3) Sqrt[3])/8}, {31/40, ((-7) Sqrt[3])/20}, {
         3/4, ((-13) Sqrt[3])/40}, {31/40, ((-3) Sqrt[3])/10}, {
         3/4, ((-11) Sqrt[3])/40}, {31/40, -Sqrt[3]/4}, {
         3/4, ((-9) Sqrt[3])/40}, {31/40, -Sqrt[3]/5}, {
         3/4, ((-7) Sqrt[3])/40}, {31/40, ((-3) Sqrt[3])/20}, {
         3/4, -Sqrt[3]/8}, {31/40, -Sqrt[3]/10}, {3/4, ((-3) Sqrt[3])/40}, {
         31/40, -Sqrt[3]/20}, {3/4, -Sqrt[3]/40}, {31/40, 0}, {
         3/4, Sqrt[3]/40}, {31/40, Sqrt[3]/20}, {3/4, (3 Sqrt[3])/40}, {
         31/40, Sqrt[3]/10}, {3/4, Sqrt[3]/8}, {31/40, (3 Sqrt[3])/20}, {
         3/4, (7 Sqrt[3])/40}, {31/40, Sqrt[3]/5}, {3/4, (9 Sqrt[3])/40}, {
         31/40, Sqrt[3]/4}, {3/4, (11 Sqrt[3])/40}, {31/40, (3 Sqrt[3])/10}, {
         3/4, (13 Sqrt[3])/40}, {31/40, (7 Sqrt[3])/20}, {
         3/4, (3 Sqrt[3])/8}, {4/5, ((-13) Sqrt[3])/40}, {
         33/40, ((-3) Sqrt[3])/10}, {4/5, ((-11) Sqrt[3])/40}, {
         33/40, -Sqrt[3]/4}, {4/5, ((-9) Sqrt[3])/40}, {33/40, -Sqrt[3]/5}, {
         4/5, ((-7) Sqrt[3])/40}, {33/40, ((-3) Sqrt[3])/20}, {
         4/5, -Sqrt[3]/8}, {33/40, -Sqrt[3]/10}, {4/5, ((-3) Sqrt[3])/40}, {
         33/40, -Sqrt[3]/20}, {4/5, -Sqrt[3]/40}, {33/40, 0}, {
         4/5, Sqrt[3]/40}, {33/40, Sqrt[3]/20}, {4/5, (3 Sqrt[3])/40}, {
         33/40, Sqrt[3]/10}, {4/5, Sqrt[3]/8}, {33/40, (3 Sqrt[3])/20}, {
         4/5, (7 Sqrt[3])/40}, {33/40, Sqrt[3]/5}, {4/5, (9 Sqrt[3])/40}, {
         33/40, Sqrt[3]/4}, {4/5, (11 Sqrt[3])/40}, {33/40, (3 Sqrt[3])/10}, {
         4/5, (13 Sqrt[3])/40}, {17/20, ((-11) Sqrt[3])/40}, {
         7/8, -Sqrt[3]/4}, {17/20, ((-9) Sqrt[3])/40}, {7/8, -Sqrt[3]/5}, {
         17/20, ((-7) Sqrt[3])/40}, {7/8, ((-3) Sqrt[3])/20}, {
         17/20, -Sqrt[3]/8}, {7/8, -Sqrt[3]/10}, {17/20, ((-3) Sqrt[3])/40}, {
         7/8, -Sqrt[3]/20}, {17/20, -Sqrt[3]/40}, {7/8, 0}, {
         17/20, Sqrt[3]/40}, {7/8, Sqrt[3]/20}, {17/20, (3 Sqrt[3])/40}, {
         7/8, Sqrt[3]/10}, {17/20, Sqrt[3]/8}, {7/8, (3 Sqrt[3])/20}, {
         17/20, (7 Sqrt[3])/40}, {7/8, Sqrt[3]/5}, {17/20, (9 Sqrt[3])/40}, {
         7/8, Sqrt[3]/4}, {17/20, (11 Sqrt[3])/40}, {
         9/10, ((-9) Sqrt[3])/40}, {37/40, -Sqrt[3]/5}, {
         9/10, ((-7) Sqrt[3])/40}, {37/40, ((-3) Sqrt[3])/20}, {
         9/10, -Sqrt[3]/8}, {37/40, -Sqrt[3]/10}, {9/10, ((-3) Sqrt[3])/40}, {
         37/40, -Sqrt[3]/20}, {9/10, -Sqrt[3]/40}, {37/40, 0}, {
         9/10, Sqrt[3]/40}, {37/40, Sqrt[3]/20}, {9/10, (3 Sqrt[3])/40}, {
         37/40, Sqrt[3]/10}, {9/10, Sqrt[3]/8}, {37/40, (3 Sqrt[3])/20}, {
         9/10, (7 Sqrt[3])/40}, {37/40, Sqrt[3]/5}, {9/10, (9 Sqrt[3])/40}, {
         19/20, ((-7) Sqrt[3])/40}, {19/20, -Sqrt[3]/8}, {
         39/40, -Sqrt[3]/10}, {19/20, ((-3) Sqrt[3])/40}, {
         39/40, -Sqrt[3]/20}, {19/20, -Sqrt[3]/40}, {39/40, 0}, {
         19/20, Sqrt[3]/40}, {39/40, Sqrt[3]/20}, {19/20, (3 Sqrt[3])/40}, {
         39/40, Sqrt[3]/10}, {19/20, Sqrt[3]/8}, {19/20, (7 Sqrt[3])/40}}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.661905910794014*^9, {3.661906151540371*^9, 3.661906174530181*^9}, 
   3.6619063477805367`*^9, {3.661906493123602*^9, 3.6619065084780903`*^9}, {
   3.661906560119577*^9, 3.6619065770340567`*^9}, 3.6619067259968987`*^9, 
   3.661906804845697*^9, 3.661908315939124*^9, {3.661908371829878*^9, 
   3.661908387209052*^9}, 3.6619084730401163`*^9, {3.6619085121080627`*^9, 
   3.661908538847636*^9}, 3.661908569681879*^9, {3.661908658679706*^9, 
   3.66190866450263*^9}, 3.661908873674119*^9, 3.66190894187103*^9, 
   3.661909013875843*^9, 3.6619090606619663`*^9, 3.661909125144204*^9, 
   3.6619095364246597`*^9, 3.661909592423346*^9, 3.661909851403654*^9, {
   3.6619103806024847`*^9, 3.66191038527354*^9}, 3.6619104370442753`*^9, 
   3.66191049115343*^9, 3.661910699668775*^9, 3.662057976853648*^9, 
   3.662058196004149*^9, 3.662058766835404*^9, 3.662058797973633*^9, 
   3.662059091396093*^9, {3.662059131063764*^9, 3.662059182194405*^9}, {
   3.6620592316540194`*^9, 3.6620592482359858`*^9}, 3.662059289098976*^9, 
   3.662059340243066*^9, {3.662059435675536*^9, 3.662059465977294*^9}, {
   3.662059497433172*^9, 3.66205950329487*^9}, {3.662059549643552*^9, 
   3.662059592761331*^9}, {3.662059720768097*^9, 3.662059736554677*^9}, 
   3.662059789675674*^9, 3.662059854601358*^9, 3.662059941141024*^9, 
   3.662059979951606*^9, {3.662060024305539*^9, 3.662060044597053*^9}, {
   3.6620600903103943`*^9, 3.6620601196203136`*^9}, 3.662060161457238*^9, {
   3.662060194749238*^9, 3.6620602043334837`*^9}, {3.6620605209003067`*^9, 
   3.662060604030314*^9}, 3.662060678211973*^9, {3.662060743567474*^9, 
   3.662060882654871*^9}, {3.662060926740912*^9, 3.662060949415683*^9}, {
   3.6620611233446817`*^9, 3.662061146550405*^9}, {3.6620611831700983`*^9, 
   3.6620612062308407`*^9}, {3.6620612588513412`*^9, 3.662061317431354*^9}, 
   3.662061520369007*^9, 3.6627314295237293`*^9, {3.6629514147276773`*^9, 
   3.662951432629547*^9}, 3.662952232995921*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot for paper", "Subchapter",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}, {3.662731403355773*^9, 
  3.6627314106168213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "mean", ",", "cov", ",", 
      RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", "padding",
       ",", 
      RowBox[{"imsize", "=", "220"}], ",", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"1", "/", "8"}]}], ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"\[Pi]", "/", "4"}]}], ",", 
      RowBox[{"showStats", "=", "False"}], ",", 
      RowBox[{"showParticles", "=", "False"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meanx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meany", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cov", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varx", " ", "=", 
      RowBox[{"Chop", "[", " ", 
       RowBox[{"Varx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vary", " ", "=", "  ", 
      RowBox[{"Chop", "[", 
       RowBox[{"Vary", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"padding", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"LightBlue", ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"interior", " ", "region", " ", "of", " ", "square"}], 
              "*)"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "]"}], ",", 
                "\[Beta]", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
              "*)"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", "Green", "]"}], ",", 
              RowBox[{"Arrowheads", "[", 
               RowBox[{".04", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "h"}], ")"}], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", "1", ")"}], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<h\>\"", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"h", "/", "2"}]}], ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
             RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"showStats", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"StringForm", "[", 
                   RowBox[{"\"\<area=``\\nmean=``\\ncov=``\>\"", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", "h"}], ")"}], " ", "h"}]]}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}]}], " ", 
                    SuperscriptBox["h", "3"]}]], "+", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ",", 
                    RowBox[{"Chop", "[", "mean", "]"}], ",", 
                    RowBox[{"Chop", "[", "cov", "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "}"}]}], 
             "]"}], ",", " ", 
            RowBox[{"(*", 
             RowBox[{"optional", " ", "title", " ", "info"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "swarm", " ", "of", " ", "robots"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"showParticles", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.011", "]"}], ",", 
                RowBox[{"Lighter", "[", 
                 RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"h", "<", "2"}], ",", 
                   RowBox[{"Select", "[", 
                    RowBox[{"swarmPts", ",", 
                    RowBox[{"(*", 
                    RowBox[{"half", "-", 
                    RowBox[{"plane", " ", "test"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "h"}], ")"}], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], 
                    ")"}]}], ">", "0"}], ")"}], "&"}]}], "]"}], ",", 
                   "swarmPts"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
              "Thick", ",", " ", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}]], " ", 
                    SuperscriptBox["h", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "h"}], ")"}], " ", "h"}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], ")"}]}]]}]}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "draw", " ", "the", " ", "direction", " ", "of", " ", "the", " ",
               "vector"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", ".01", "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              RowBox[{"Point", "[", "mean", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
               "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Opacity", "[", "0", "]"}], ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
              RowBox[{"Ellipsoid", "[", 
               RowBox[{"mean", ",", 
                RowBox[{"4", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"varx", ",", " ", "cov"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"cov", ",", "vary"}], "}"}]}], "}"}]}]}], "]"}]}],
              "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{
            RowBox[{"7", "/", "6"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
          RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Mean", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Meanx", "[", 
              RowBox[{"\[Beta]", ",", "h"}], "]"}], ",", 
             RowBox[{"Meany", "[", 
              RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", " ", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<mean \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<mean \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          RowBox[{"AxesOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}]}], ",", " ", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "correlation", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Corxy", "[", 
            RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<correlation\>\""}], "}"}]}], 
          ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
             "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], "}"}]}], 
          ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", 
                RowBox[{"Corxy", "[", 
                 RowBox[{"\[Beta]", ",", "h"}], "]"}]}], "}"}], "]"}]}], 
            "}"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "covariance", "*)"}], 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Covxy", "[", 
            RowBox[{"\[Beta]", ",", "h"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
               RowBox[{"3", 
                RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], 
          ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
          RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
             RowBox[{"0.1", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
             "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "}"}]}], 
          ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"\[Beta]", ",", "cov"}], "}"}], "]"}]}], "}"}]}]}], 
         " ", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.662731440399732*^9, 3.662731492611751*^9}, {
   3.662731533604307*^9, 3.6627315628198013`*^9}, {3.662731691176279*^9, 
   3.6627317076378517`*^9}, 3.662731762377194*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0.87, 0.94, 1], 
      DiskBox[{0, 0}, 1]}, {
      GrayLevel[1], 
      GeometricTransformationBox[
       RectangleBox[{-1, -1}, 
        NCache[{
          Rational[7, 8], 1}, {0.875, 1}]], {{{
        0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
        0.7071067811865475}}, {0, 0}}]}, {
      RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      Arrowheads[{-0.04, 0.04}], 
      ArrowBox[
       NCache[{{
         Rational[7, 8] 2^Rational[-1, 2], Rational[7, 8] 
          2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0.618718433538229, 0.618718433538229}, {0.7071067811865475, 
        0.7071067811865475}}]], 
      InsetBox[
       FormBox["\"h\"", TraditionalForm], 
       NCache[{
        Rational[15, 16] Sin[Rational[3, 16] Pi], Rational[15, 16] 
         Cos[Rational[3, 16] Pi]}, {0.5208470934558771, 
        0.7795027615336362}]]}, {
      GrayLevel[0], 
      Thickness[0.05], 
      CircleBox[{0, 0}, 1.05]}, Null, Null, {
      RGBColor[0.368417, 0.506779, 0.709798], 
      Thickness[Large], 
      CircleBox[{0, 0}, 
       NCache[Complex[0, 
          Rational[5, 256]] 15^Rational[1, 2]/(Complex[0, 
           Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
          Rational[7, 8]]), 0.9252779220255513]]}, {
      RGBColor[0, 0, 1], 
      Thickness[0.01], 
      ArrowBox[
       NCache[{{0, 0}, {
         Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
          2^Rational[-1, 2]}}, {{0, 0}, {0.35355339059327373`, 
         0.35355339059327373`}}]]}, {
      RGBColor[0.880722, 0.611041, 0.142051], 
      PointSize[Large], 
      PointBox[
       NCache[{
        Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
         Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
           Rational[7, 8]]), Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
         Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
           Rational[7, 8]])}, {0.6542702931464649, 0.6542702931464649}]]}, {
      RGBColor[0.560181, 0.691569, 0.194885], 
      Opacity[0], 
      EdgeForm[{
        Thickness[Large], 
        RGBColor[1, 0, 0]}], 
      InterpretationBox[
       GeometricTransformationBox[
        DiskBox[{0, 0}], 
        NCache[{{{
           2 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (12 ArcCos[
                   Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
              Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^Rational[1, 2], 
            0}, {(Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (12 ArcCos[
                   Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
              Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^Rational[-1, 2] (
             Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]])^(-1) (12 ArcCos[
                  Rational[7, 8]] - 8 Sin[2 ArcCos[
                   Rational[7, 8]]] + Sin[4 ArcCos[
                   Rational[7, 8]]]) + 
             Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
               9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))), (
             4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
               Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                 9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))) - (
               Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
               Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                 9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^(-1) (
               Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
               Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                 9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^2)^Rational[1, 2]}}, {
          Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
           Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]]), Rational[5, 256] 
           Rational[15, 2]^Rational[1, 2]/(Rational[-7, 64] 15^Rational[1, 2] + 
           ArcCos[
             Rational[7, 8]])}}, {{{
           0.31199313421374125`, 0}, {-0.29821842927924397`, 
           0.09168142797063183}}, {0.6542702931464649, 0.6542702931464649}}]], 
       Ellipsoid[{
        Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
         Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
           Rational[7, 8]]), Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
         Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
           Rational[7, 8]])}, {{
         4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]]))), 
          2 (Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]])))}, {
         2 (Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]]))), 
          4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]])))}}]]}}, ImageSize -> 300, PlotRange -> 
    NCache[{{
        Rational[-7, 6], 
        Rational[7, 6]}, {
        Rational[-7, 6], 
        Rational[7, 6]}}, {{-1.1666666666666667`, 
      1.1666666666666667`}, {-1.1666666666666667`, 1.1666666666666667`}}], 
    PlotRangeClipping -> True],TagBox[
    GraphicsBox[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1: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
PJzbwqv+B2twdjI=
          "]]}}}, {
       InsetBox[
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"mean \"", 
             StyleBox["\"x\"", Italic, StripOnInput -> False]}, "RowDefault"], 
           TemplateBox[{"\"mean \"", 
             StyleBox["\"y\"", Italic, StripOnInput -> False]}, 
            "RowDefault"]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], 
        Scaled[{0.65, 0.85}], 
        ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
        BaseStyle -> {FontSize -> Larger}]}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"\[Beta]\"", TraditionalForm], 
        FormBox["\"mean\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
      DisplayFunction :> Identity, Epilog -> {
        PointSize[Large], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        PointBox[
         NCache[{
          Rational[1, 4] Pi, Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
           Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        PointBox[
         NCache[{
          Rational[1, 4] Pi, Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
           Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
      220, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> 
      NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}], 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {{{0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}], 
    InterpretTemplate[Legended[
      Graphics[{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1: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
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
           "]]}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1: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
PJzbwqv+B2twdjI=
           "]]}}}, {
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "mean"}, 
        AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, Epilog -> {
          PointSize[Large], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          
          Point[{Rational[1, 4] Pi, Rational[5, 256] 
            Rational[15, 2]^Rational[1, 2]/(
            Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
              Rational[7, 8]])}], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          
          Point[{Rational[1, 4] Pi, Rational[5, 256] 
            Rational[15, 2]^Rational[1, 2]/(
            Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
              Rational[7, 8]])}]}, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
        220, Method -> {
         "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
        PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotRangeClipping -> True, 
        PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {{0, Rational[1, 2] Pi, Pi, Rational[3, 2] Pi, 2 Pi}, 
          Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]]}, {
          Row[{"mean ", 
            Style["x", Italic]}], 
          Row[{"mean ", 
            Style["y", Italic]}]}, LabelStyle -> {}, LegendLayout -> 
         "Column"]], {0.65, 0.85}, Identity]]& ], Editable -> True, 
    Selectable -> True, SelectWithContents -> False, AutoDelete -> True],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.772079, 0.431554, 0.102387]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"correlation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[Large], 
       RGBColor[0.772079, 0.431554, 0.102387], 
       PointBox[
        NCache[{
         Rational[1, 4] Pi, 
          Rational[
           1, 2] (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (12 ArcCos[
                 Rational[7, 8]] - 8 Sin[2 ArcCos[
                  Rational[7, 8]]] + Sin[4 ArcCos[
                  Rational[7, 8]]]) + 
            Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
              9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]]) (4 ArcCos[
                   Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^(-1) (
           Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]])))}, {
         0.7853981633974483, -0.9558493331296818}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
     220, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.1, 1.1}}, {{0, 6.283185307179586}, {-1.1, 1.1}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}, {
         NCache[Rational[3, 2] Pi, 4.71238898038469], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
         NCache[2 Pi, 6.283185307179586], 
         FormBox[
          RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}],
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.528488, 0.470624, 0.701351]], 
       LineBox[CompressedData["
1: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
oPn3t5ImkrT2/g/U1gah
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"covariance\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[Large], 
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointBox[
        NCache[{
         Rational[1, 4] Pi, 
          Rational[1, 2] (
           Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-1) (12 ArcCos[
                Rational[7, 8]] - 8 Sin[2 ArcCos[
                 Rational[7, 8]]] + Sin[4 ArcCos[
                 Rational[7, 8]]]) + 
           Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
             9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]]) (4 ArcCos[
                  Rational[7, 8]] + Sin[4 ArcSin[
                   Rational[7, 8]]])))}, {
         0.7853981633974483, -0.023260525607782565`}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, ImageSize -> 
     220, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}, {
         NCache[Rational[3, 2] Pi, 4.71238898038469], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
         NCache[2 Pi, 6.283185307179586], 
         FormBox[
          RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6627314300061207`*^9, 3.662731493179544*^9}, {
   3.66273154659715*^9, 3.6627315660861893`*^9}, 3.662731713228603*^9, 
   3.6627317674152803`*^9, 3.662951442214881*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot for paper", "Subchapter",
 CellChangeTimes->{{3.656128696399365*^9, 3.656128696407075*^9}, {
  3.656128738617708*^9, 3.656128754120781*^9}, {3.656263816213649*^9, 
  3.6562638584185553`*^9}, {3.661901922950233*^9, 3.661901924369424*^9}, {
  3.662060964853828*^9, 3.6620609807974253`*^9}, {3.662731403355773*^9, 
  3.6627314106168213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xv", ",", "yv", ",", "\[Beta]v", " ", ",", "x", ",", "y", ",", "mean", 
      ",", "cov", ",", "covv", ",", "varyv", ",", "varxv", ",", 
      RowBox[{"bwid", "=", "0.05"}], ",", "varx", ",", "vary", ",", "padding",
       ",", 
      RowBox[{"imsize", "=", "220"}], ",", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"1", "/", "8"}]}], ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"\[Pi]", "/", "4"}]}], ",", 
      RowBox[{"showStats", "=", "False"}], ",", 
      RowBox[{"showParticles", "=", "False"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hv", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "8"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", 
        RowBox[{"3", "/", "2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meanx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Meany", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cov", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varx", " ", "=", 
      RowBox[{"Chop", "[", " ", 
       RowBox[{"Varx", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vary", " ", "=", "  ", 
      RowBox[{"Chop", "[", 
       RowBox[{"Vary", "[", 
        RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Meanx", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Meany", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"covv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Covxy", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varxv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Varx", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varyv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Vary", "[", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"padding", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "[", "LightBlue", "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{"interior", " ", "region", " ", "of", " ", "square"}], 
             "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}], 
                 ",", "\[Beta]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
              RowBox[{"(*", 
               RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
               "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "@", "hv"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "-", 
                    RowBox[{"hv", "\[LeftDoubleBracket]", 
                    RowBox[{"Length", "@", "hv"}], 
                    "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}], 
               ",", "\[Beta]", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{"draw", " ", "the", " ", "robot", " ", "region"}], 
             "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "[", "Green", "]"}], ",", 
             RowBox[{"Arrowheads", "[", 
              RowBox[{".04", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "h"}], ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}], ",", 
                RowBox[{
                 RowBox[{"(", "1", ")"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<h\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"h", "/", "2"}]}], ")"}], 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}], ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Thickness", "[", "bwid", "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"1", "+", "bwid"}]}], "]"}]}], 
            RowBox[{"(*", "obstacles", "*)"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "mean", " ", "path"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], 
               ",", "Thick", ",", " ", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], " ", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                   RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}], " ", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], "+", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    "hv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}]]}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "draw", " ", "the", " ", "direction", " ", "of", " ", "the", " ", 
             "vector"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Thickness", "[", ".01", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", 
                   RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                  "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
                 FractionBox[
                  RowBox[{"i", "-", "1"}], 
                  RowBox[{
                   RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], 
               ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "xv", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "xv", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"draw", " ", "the", " ", "covariance", " ", "ellipse"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "Thick", ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Red", ",", 
                    FractionBox[
                    RowBox[{"i", "-", "1"}], 
                    RowBox[{
                    RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], 
                   "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Opacity", "[", "0", "]"}], ",", 
               RowBox[{"Ellipsoid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "xv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "xv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                 RowBox[{"4", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "varxv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "covv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "covv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "varyv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{
           RowBox[{"7", "/", "6"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.662731440399732*^9, 3.662731492611751*^9}, {
   3.662731533604307*^9, 3.6627315628198013`*^9}, {3.662731691176279*^9, 
   3.6627317076378517`*^9}, 3.662731762377194*^9, {3.6627318016648684`*^9, 
   3.662731802234436*^9}, {3.662731845128525*^9, 3.662731880672266*^9}, {
   3.6627319202431726`*^9, 3.6627319495155478`*^9}, {3.662731980339591*^9, 
   3.662731988251877*^9}, {3.662732027049024*^9, 3.66273210753577*^9}, {
   3.662732152546269*^9, 3.66273215289685*^9}, {3.662732274971843*^9, 
   3.662732326101622*^9}, {3.6627323670007668`*^9, 3.662732367295785*^9}, {
   3.662732413459055*^9, 3.662732601612562*^9}, {3.6627326381994247`*^9, 
   3.662732753279212*^9}, 3.6627396735933943`*^9, {3.6627397131712713`*^9, 
   3.662739819672172*^9}, {3.662739855617093*^9, 3.662739880003626*^9}, {
   3.662740438056319*^9, 3.662740481812148*^9}, {3.662740514651473*^9, 
   3.662740514844577*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0.5800000000000001, 0.6266666666666667, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      DiskBox[{0, 0}, 1]}, {{
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[7, 8], 1}, {0.875, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[1, 2], 1}, {0.5, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, {0, 1}], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}, {
       GrayLevel[1], 
       Opacity[0.2], 
       GeometricTransformationBox[
        RectangleBox[{-1, -1}, 
         NCache[{
           Rational[-1, 2], 1}, {-0.5, 1}]], {{{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}}, {0, 0}}]}}, {
      GrayLevel[1], 
      GeometricTransformationBox[
       RectangleBox[{-1, -1}, 
        NCache[{
          Rational[-1, 2], 1}, {-0.5, 1}]], {{{
        0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
        0.7071067811865475}}, {0, 0}}]}, {
      RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      Arrowheads[{-0.04, 0.04}], 
      ArrowBox[
       NCache[{{
         Rational[7, 8] 2^Rational[-1, 2], Rational[7, 8] 
          2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0.618718433538229, 0.618718433538229}, {0.7071067811865475, 
        0.7071067811865475}}]], 
      InsetBox[
       FormBox["\"h\"", TraditionalForm], 
       NCache[{
        Rational[15, 16] Sin[Rational[3, 16] Pi], Rational[15, 16] 
         Cos[Rational[3, 16] Pi]}, {0.5208470934558771, 
        0.7795027615336362}]]}, {
      GrayLevel[0], 
      Thickness[0.05], 
      CircleBox[{0, 0}, 1.05]}, {{
       RGBColor[0.368417, 0.506779, 0.709798], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[5, 256]] 15^Rational[1, 2]/(Complex[0, 
            Rational[-7, 64]] 15^Rational[1, 2] + ArcCosh[
           Rational[7, 8]]), 0.9252779220255513]]}, {
       RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[1, 4]] 3^Rational[1, 2]/(Complex[0, 
            Rational[-1, 4]] 3^Rational[1, 2] + Complex[0, 
            Rational[1, 3]] Pi), 0.7050201618985662]]}, {
       RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Rational[4, 3]/Pi, 0.4244131815783876]]}, {
       RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
       Thickness[Large], 
       CircleBox[{0, 0}, 
        NCache[Complex[0, 
           Rational[1, 4]] 3^Rational[1, 2]/(Complex[0, 
            Rational[1, 4]] 3^Rational[1, 2] + Complex[0, 
            Rational[2, 3]] Pi), 0.17132680415009122`]]}}, {
      RGBColor[0, 0, 1], 
      Thickness[0.01], 
      ArrowBox[
       NCache[{{0, 0}, {
         Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
          2^Rational[-1, 2]}}, {{0, 0}, {0.35355339059327373`, 
         0.35355339059327373`}}]]}, {{
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[Large], 
       PointBox[
        NCache[{
         Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
          Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
            Rational[7, 8]]), Rational[5, 256] 
          Rational[15, 2]^Rational[1, 2]/(Rational[-7, 64] 15^Rational[1, 2] + 
          ArcCos[
            Rational[7, 8]])}, {0.6542702931464649, 0.6542702931464649}]]}, {
       RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`], 
       PointSize[Large], 
       PointBox[
        NCache[{
         Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi), 
          Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)}, {
         0.49852453735171376`, 0.49852453735171376`}]]}, {
       RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`], 
       PointSize[Large], 
       PointBox[
        NCache[{
         Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 2^Rational[1, 2]/
          Pi}, {0.3001054387190354, 0.3001054387190354}]]}, {
       RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
       PointSize[Large], 
       PointBox[
        NCache[{
         Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi), 
          Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)}, {
         0.12114634501354903`, 0.12114634501354903`}]]}}, {{
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[1, 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{
            2 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
               Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                 9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^Rational[1, 2], 
             0}, {(Rational[
                 1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
               Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                 9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^Rational[-1, 2] (
              Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-1) (12 ArcCos[
                   Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
              Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                   Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))), (
              4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
                Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                  9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))) - (
                Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
                Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                  9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^(-1) (
                Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-1) (12 ArcCos[
                    Rational[7, 8]] - 8 Sin[2 ArcCos[
                    Rational[7, 8]]] + Sin[4 ArcCos[
                    Rational[7, 8]]]) + 
                Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
                  9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                    Rational[7, 8]]) (4 ArcCos[
                    Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))^2)^Rational[1, 2]}}, {
           Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
            Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
              Rational[7, 8]]), Rational[5, 256] 
            Rational[15, 2]^Rational[1, 2]/(
            Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
              Rational[7, 8]])}}, {{{
            0.31199313421374125`, 0}, {-0.29821842927924397`, 
            0.09168142797063183}}, {0.6542702931464649, 
           0.6542702931464649}}]], 
        Ellipsoid[{
         Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
          Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
            Rational[7, 8]]), Rational[5, 256] 
          Rational[15, 2]^Rational[1, 2]/(Rational[-7, 64] 15^Rational[1, 2] + 
          ArcCos[
            Rational[7, 8]])}, {{
          4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (12 ArcCos[
                 Rational[7, 8]] - 8 Sin[2 ArcCos[
                  Rational[7, 8]]] + Sin[4 ArcCos[
                  Rational[7, 8]]]) + 
            Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
              9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]]) (4 ArcCos[
                   Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))), 
           2 (Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (12 ArcCos[
                 Rational[7, 8]] - 8 Sin[2 ArcCos[
                  Rational[7, 8]]] + Sin[4 ArcCos[
                  Rational[7, 8]]]) + 
            Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
              9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]]) (4 ArcCos[
                   Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))}, {
          2 (Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (12 ArcCos[
                 Rational[7, 8]] - 8 Sin[2 ArcCos[
                  Rational[7, 8]]] + Sin[4 ArcCos[
                  Rational[7, 8]]]) + 
            Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
              9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]]) (4 ArcCos[
                   Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]]))), 
           4 (Rational[1, 96] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-1) (12 ArcCos[
                 Rational[7, 8]] - 8 Sin[2 ArcCos[
                  Rational[7, 8]]] + Sin[4 ArcCos[
                  Rational[7, 8]]]) + 
            Rational[1, 288] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                 Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
              9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
                  Rational[7, 8]]) (4 ArcCos[
                   Rational[7, 8]] + Sin[4 ArcSin[
                    Rational[7, 8]]])))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[8, 9], 0.8888888888888888], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{
            2 (Rational[
                 1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
                  Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                 4 Pi) + Rational[
                 1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
                  Rational[1, 3] Pi)^(-2) (-27 + 
                 9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                   Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi)))^
              Rational[1, 2], 
             0}, {(Rational[
                 1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
                  Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                 4 Pi) + Rational[
                 1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
                  Rational[1, 3] Pi)^(-2) (-27 + 
                 9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                   Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi)))^
              Rational[-1, 2] (
              Rational[-1, 48] (Rational[-1, 4] 3^Rational[1, 2] + 
                 Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                4 Pi) + Rational[
                1, 144] (Rational[-1, 4] 3^Rational[1, 2] + 
                 Rational[1, 3] Pi)^(-2) (-27 + 
                9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                  Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi))), (
              4 (Rational[
                  1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                  4 Pi) + Rational[
                  1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-2) (-27 + 
                  9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                    Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi))) - (
                Rational[
                  1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                  4 Pi) + Rational[
                  1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-2) (-27 + 
                  9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                    Rational[1, 2] 3^Rational[1, 2] + 
                    Rational[4, 3] Pi)))^(-1) (
                Rational[-1, 48] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
                  4 Pi) + Rational[
                  1, 144] (Rational[-1, 4] 3^Rational[1, 2] + 
                   Rational[1, 3] Pi)^(-2) (-27 + 
                  9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                    Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi)))^2)^
             Rational[1, 2]}}, {
           Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
            Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi), 
            Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
            Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)}}, {{{
            0.598667874185948, 0}, {-0.4828832612097099, 
            0.35387424267075035`}}, {0.49852453735171376`, 
           0.49852453735171376`}}]], 
        Ellipsoid[{
         Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi), 
          Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi)}, {{
          4 (Rational[
              1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
              4 Pi) + Rational[
              1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-2) (-27 + 
              9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi))), 
           2 (Rational[-1, 48] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
              4 Pi) + Rational[
              1, 144] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-2) (-27 + 
              9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi)))}, {
          2 (Rational[-1, 48] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
              4 Pi) + Rational[
              1, 144] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-2) (-27 + 
              9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi))), 
           4 (Rational[
              1, 96] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-1) (Rational[-9, 2] 3^Rational[1, 2] + 
              4 Pi) + Rational[
              1, 288] (Rational[-1, 4] 3^Rational[1, 2] + 
               Rational[1, 3] Pi)^(-2) (-27 + 
              9 (Rational[-1, 4] 3^Rational[1, 2] + Rational[1, 3] Pi) (
                Rational[1, 2] 3^Rational[1, 2] + Rational[4, 3] Pi)))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[7, 9], 0.7777777777777778], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{
            2 (Rational[1, 8] + Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2))^
              Rational[1, 2], 
             0}, {(Rational[1, 8] + Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2))^
              Rational[-1, 2] (Rational[-1, 4] + 
              Rational[1, 36] Pi^(-2) (-64 + 9 Pi^2)), (
              4 (Rational[1, 8] + Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2)) - (
                Rational[1, 8] + 
                Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2))^(-1) (Rational[-1, 4] + 
                Rational[1, 36] Pi^(-2) (-64 + 9 Pi^2))^2)^Rational[1, 2]}}, {
           Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 
            2^Rational[1, 2]/Pi}}, {{{
            0.7998417984858138, 0}, {-0.45040544027203444`, 
            0.6609703790476363}}, {0.3001054387190354, 0.3001054387190354}}]], 
        Ellipsoid[{
         Rational[2, 3] 2^Rational[1, 2]/Pi, Rational[2, 3] 2^Rational[1, 2]/
          Pi}, {{4 (Rational[1, 8] + Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2)), 
           2 (Rational[-1, 4] + Rational[1, 36] Pi^(-2) (-64 + 9 Pi^2))}, {
          2 (Rational[-1, 4] + Rational[1, 36] Pi^(-2) (-64 + 9 Pi^2)), 
           4 (Rational[1, 8] + Rational[1, 72] Pi^(-2) (-64 + 9 Pi^2))}}]]}, {
       EdgeForm[{
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]}], 
       Opacity[0], 
       InterpretationBox[
        GeometricTransformationBox[
         DiskBox[{0, 0}], 
         NCache[{{{
            2 (Rational[
                 1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
                  Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                 8 Pi) + Rational[
                 1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
                  Rational[2, 3] Pi)^(-2) (-27 + 
                 9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                   Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi)))^
              Rational[1, 2], 
             0}, {(Rational[
                 1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
                  Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                 8 Pi) + Rational[
                 1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
                  Rational[2, 3] Pi)^(-2) (-27 + 
                 9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                   Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi)))^
              Rational[-1, 2] (
              Rational[-1, 48] (Rational[1, 4] 3^Rational[1, 2] + 
                 Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                8 Pi) + Rational[
                1, 144] (Rational[1, 4] 3^Rational[1, 2] + 
                 Rational[2, 3] Pi)^(-2) (-27 + 
                9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                  Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi))), (
              4 (Rational[
                  1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                  8 Pi) + Rational[
                  1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-2) (-27 + 
                  9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                    Rational[-1, 2] 3^Rational[1, 2] + 
                    Rational[8, 3] Pi))) - (
                Rational[
                  1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                  8 Pi) + Rational[
                  1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-2) (-27 + 
                  9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                    Rational[-1, 2] 3^Rational[1, 2] + 
                    Rational[8, 3] Pi)))^(-1) (
                Rational[-1, 48] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
                  8 Pi) + Rational[
                  1, 144] (Rational[1, 4] 3^Rational[1, 2] + 
                   Rational[2, 3] Pi)^(-2) (-27 + 
                  9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                    Rational[-1, 2] 3^Rational[1, 2] + 
                    Rational[8, 3] Pi)))^2)^Rational[1, 2]}}, {
           Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
            Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi), 
            Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
            Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)}}, {{{
            0.9250031623104793, 0}, {-0.24868298959765903`, 
            0.8909475972071296}}, {0.12114634501354903`, 
           0.12114634501354903`}}]], 
        Ellipsoid[{
         Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi), 
          Rational[1, 4] Rational[3, 2]^Rational[1, 2]/(
          Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi)}, {{
          4 (Rational[
              1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
              8 Pi) + Rational[
              1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-2) (-27 + 
              9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi))), 
           2 (Rational[-1, 48] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
              8 Pi) + Rational[
              1, 144] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-2) (-27 + 
              9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi)))}, {
          2 (Rational[-1, 48] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
              8 Pi) + Rational[
              1, 144] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-2) (-27 + 
              9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                Rational[-1, 2] 3^Rational[1, 2] + Rational[8, 3] Pi))), 
           4 (Rational[
              1, 96] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-1) (Rational[9, 2] 3^Rational[1, 2] + 
              8 Pi) + Rational[
              1, 288] (Rational[1, 4] 3^Rational[1, 2] + 
               Rational[2, 3] Pi)^(-2) (-27 + 
              9 (Rational[1, 4] 3^Rational[1, 2] + Rational[2, 3] Pi) (
                Rational[-1, 2] 3^Rational[1, 2] + 
                Rational[8, 3] Pi)))}}]]}}}, ImageSize -> 300, PlotRange -> 
    NCache[{{
        Rational[-7, 6], 
        Rational[7, 6]}, {
        Rational[-7, 6], 
        Rational[7, 6]}}, {{-1.1666666666666667`, 
      1.1666666666666667`}, {-1.1666666666666667`, 1.1666666666666667`}}], 
    PlotRangeClipping -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6627314300061207`*^9, 3.662731493179544*^9}, {
   3.66273154659715*^9, 3.6627315660861893`*^9}, 3.662731713228603*^9, 
   3.6627317674152803`*^9, 3.662731806106621*^9, 3.6627319461482973`*^9, {
   3.6627320580331993`*^9, 3.6627320850441017`*^9}, 3.66273215744013*^9, {
   3.6627323154603148`*^9, 3.662732330327874*^9}, 3.662732371181835*^9, 
   3.662732539240888*^9, 3.662732608641588*^9, {3.66273273964946*^9, 
   3.6627327606600933`*^9}, 3.662739681317301*^9, {3.6627397595400887`*^9, 
   3.66273982728693*^9}, {3.662739859888609*^9, 3.66273988411686*^9}, 
   3.662740486077701*^9, 3.662740519005213*^9, 3.662951448213887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Darker", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       FractionBox[
        RowBox[{"i", "-", "1"}], 
        RowBox[{
         RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662732187329965*^9, 3.662732281806281*^9}, {
  3.6627323380772123`*^9, 3.662732354637147*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.368417, 0.506779, 0.709798]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368417, 0.506779, 0.709798]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368417, 0.506779, 0.709798],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.21832118518518517`, 0.3003134814814815, 0.42062103703703707`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.32748177777777776, 0.4504702222222222, 0.6309315555555556]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.19103103703703703`, 0.26277429629629634`, 0.36804340740740743`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.2865465555555555, 0.39416144444444445, 0.5520651111111111]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.1637408888888889, 0.22523511111111114`, 0.31546577777777784`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.24561133333333335, 0.3378526666666667, 0.4731986666666667]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.662732188678244*^9, {3.662732230733972*^9, 3.662732282224903*^9}, {
   3.662732342424712*^9, 3.662732354925295*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", 
   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "\[LeftDoubleBracket]", 
  "3", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{3.662732662101973*^9}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    RowBox[{
     GraphicsBox[{
       {GrayLevel[0], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], RectangleBox[{1, -1}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        RectangleBox[{0, -1}, {2, 1}]}},
      AspectRatio->1,
      Frame->True,
      FrameStyle->RGBColor[
       0.37345400000000006`, 0.461046, 0.12992333333333334`],
      FrameTicks->None,
      ImageSize->
       Dynamic[{
        Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification]}],
      PlotRangePadding->None], "\[InvisibleSpace]"}],
    "RGBColor[0.560181, 0.691569, 0.194885]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.560181, 0.691569, 0.194885]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.560181, 0.691569, 0.194885],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.662732662518673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", " ", "=", 
     RowBox[{
      RowBox[{"1.2", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "hv"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "hv"}]}]}], " ", "+", 
      RowBox[{"\[Pi]", "/", "2"}], "-", ".4"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meanx", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Meany", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<mean\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<mean \>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}], "]"}], 
          ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<mean \>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".65", ",", "0.85"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Darker", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{"i", "-", "1"}], 
              RowBox[{
               RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
           RowBox[{"Darker", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{"i", "-", "1"}], 
              RowBox[{
               RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Meany", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "hv"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "y"}], "}"}], "]"}]}], "}"}]}], "*)"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662732837698907*^9, 3.662732884946515*^9}, {
   3.6627329333250723`*^9, 3.662733005480589*^9}, {3.662733044364048*^9, 
   3.662733153959083*^9}, 3.662740049376692*^9, {3.662740126230797*^9, 
   3.662740386558281*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
PJzbwqv+B2twdjI=
       "]]}, 
     {RGBColor[0.32748177777777776`, 0.4504702222222222, 0.6309315555555556], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
2zStogD//37h/wA1pP+/
       "]]}, 
     {RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.2865465555555555, 0.39416144444444445`, 0.5520651111111111], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
s1FZQeU02DeW19dO2XeFztIdz2nQen3dmxh1EhdeDrbWr6FBmdLA4nYNEreu
ZryVrafB5/nr6Yc0SfxztHLH3yYaxKykpQpqkXjlRlpQWxsNgr9coKlrk3jX
dNHM804aDLz1iLtHOSp7W8w9Dg1Ep3bHqS8icQPP3evH+2iwhO+ymLAOib8W
22juGaTy0RCTcoSymOdIod0XGowmWN18T9lINMl8xRgNeNKztYx0SbztuWmt
8g+qHj5kG8ZRPu5HbhaapMF/L/QquijflI9mf5+hQZ2+SrOqHolfvtLZx/1D
g5InR9z2Uu4LbhmrXaCBxVFZ/3TK/OohYYX8dPjNNzPXQVnnHYPvmjAdzK5J
SPAtJrF9xMuLp0Xp8HHEIUufcpD+foa/JB0ubS5+uplyEoeW5SxLh4up2g4H
KJfFFRtYMejAXfzAJ5Iy28Tl6SIlOqjyrv53gfLcp99rJdXo8Op2NyOVskry
3ZZZTep6seOPqP0DBrR+xycdOiz/rvguibL3t5H+N/p02HS4IeAs5fhbSQfL
Demwy/bkuaOUC+zMZu4Y08GpYrWuB+V3M2T0OTM6NGXJbrCiPHE/WixkFR2k
dwt8UaAs56J73WMNHZb2MUVGqXjN+d5qrLemQ/M9j6JnlN1LQgoNbelgXc5p
P0050otpzrSnw42i9DCgnCFWVcPrQIdjj5/fmaPy/erF/s2jTnTQOrl6QzHl
4QN0dqcrHRJsLYM9KC+tdxnL9aQDq2zKLov6PR2Pzh1P3kuHf+kfZi0pH9PI
4D3pQwea0s3FrVR9vIgcVXAIogMZ8lPqE1U/vUuSM82D6XCKt6lxL2UewsxA
I5QOE+f7eUiq/mzNYtZORtChhL5/7jlVn/6Dui29UXRQU5WqUKN8MeXt9sZY
OiQHXvh3iqrn9+PMgzcv0kGR75yEPlXve3IfXoPbdEgyXbbDmOoXobU/lU9n
0EFX+/YBZ6qfigiTey+z6XDS4CYngOq3OfEXD1cV0cHK27ErlkXi1GN1TSZV
dPiStcXOk+rfVRLCW4/W0uH9uZ7tQPV3f65dV2kDHRzFreuVZElsSL7rN2yl
g82JnvoKKRI3reXO6fXRYXs5e3cG9T45RCpF+w3SQW/X1UhbERLLh3oJ53yh
w9iR2X+DNBLvyxuQ1Zqg8suPDEWFSDwvMW6gwicCuslm9vMLBDbq4dstrS0C
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
       "]]}, 
     {RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
+x/5zjCS
       "]]}, 
     {RGBColor[0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
CUheNFR68QXBVabSxyQNJECnqcjpRBFbb+ncaFFzCeifUFCTyWP7caA2/z8P
CQjT0o6WTSXYWNZnw8qDEuB8lfI2SCa4Nz3ndeBhCSibMNF1eECwXvvytp/H
JOD2+kH/oASCa9aajA1fkADXnQ6/L11n8zfTUbProQSonBLyCTtHsG+SIv3+
kQSIJ0eePRRGcNeKZqruqQRYvxneaB/C9lNXh4HCIglI1F8qJ32G4AuZdlnR
1RJwfOYlL5MAguUsrJeZDErAIrVZNVluBM8PskCJWpKw40KASzx7fYyTo3Su
LZGEXEft0tblbH5TXs67pCcJ/pX532l9gvtrzIWOrZYEmTahF6FL2HzPWkes
LSXBpjdTZrY6wcufmWyc9pSEDMu4Jbbs9XrD8Gon13RJuCO2607nOwYbH7y+
Nj1LEnw6fDQNmhisN/hz6WiOJFTYr3kSWs/gWV8yqX+fS8LEI/s6mVcMHupR
eZ5XLQkPhxKN2wsZHNUmNEd6RBKsI37/crnJ4LfVVV1FelKQvWXHh35HBldZ
ar4WWyEF8x/XZQbZMRi/Ci2yNZSCgjWOybJWDE57aRT7ea0UcJsYadV1DD7B
z14nv0UKlm6w6Pyjx+A5RTFpB45Kgcyfh09uSjN4b8a2Q7xiKWhYfPXmuRd8
/OzIF0ubUikIkAltPFXIx9SaY5oRjBQs368T7Z3Lx5mv4zpHa6TApc4tzTiD
j0dH6+3q26Vgv9Fb94Q4Pg5F61dETEsBL9pr53YvPr7ftExgzFQaZCLwozo5
Pv40JRVT/0oa9Gbvzh2yLcdTZXTLi1pp+LtdwXpqYzmeFT5/XlaDNAQ0/zoj
aV6OHSSNsi+0SEMHh5NEry7HFVyvKtMv0lDs3bpoSrUcZ+i8EsqjZODPzuPH
x7+VYX+38CPx62VgqWft6Sz2/lms4q+DG5GBcAkN+kxuKZ72/mda7+0MOCxV
pSzjVIJtmA3zfQ7IQrXPkP/gzEJsO8fitelnWTAqrfOaCs7FxX3dw3mHZsLo
ti3Rhoey8ckvKtuVhmdCyDoj+7VySfjB9vE1SoFyMM/g5dpKgWg8j+PjI/xL
Dnbq7B+cfekIshLUST10RB5KdG/Y3Da/iXo9r9gd/yMPCyt+/cgPSUP1kpc2
+55QgL41HrLxrjlogYpmMSWiCOa95sXZt54hrVOSuioXFaHn34EjY9uKUJh8
5Ng8jhLU4A+im10wWj/78WJ+tBIIuLpKL4ktQ5uUX3uVXVWCoUhJx9ybZchm
zkg6jlMCD3YvufxeGXKeq61RHK8EG2Z1f9XOLkMH1NNU8u4pQe/7trjel2Xo
0qLEGak5SrCMFxUbMlGGGg2jvv/boAQ7KIeAXdvLkev2w3l2M7mwfXK2gbMc
H0WHpA2ay3OhIGoyK4HLR0xap6qhIhfsr1690cXuH7XGbK6o87jg7NpZso3d
X45f1vUYnccFYy85DQUjPorCP+hrOlwQurV1a8ZePipXCzjVYs2F2WHwxeUJ
H41ZZD2pteWCxb+BaEY+Hy306e0vs+fC90inTyVFfHSlaMuWDCcu5KQ8EJYm
fOTisHzJyZ1cMHJye+D3jo9Gw8c/Kvtwwaxvrsu2P3yk8eX42l1XuFD+2cks
FjFodvjZ8TNRXCC7fwhTZgySVY14eCeGC77JdnKBFgz6zzlWvvUaF8b+eimZ
sDGsqczu3pLAhWsNkfExbgzyS+sO3fiYC2KfrE+rhTHohcdmZnkjFxpnS90Z
LmfQU2GHY1uauPDOdN9gWgWD0hK2afu/Zedv1LzHtYpB0e88YnM+cKElorIu
v4FBe9eH7NXu5oJJPBye38kgCc18EbVRLpxULxHo+cMgp75566SVaCDLGtPG
lhCkN+2eLU7T8EQjCpXpEiRFP+QKzaIh3NU2NUKfoNINBgO/5tAQ1qf5WWQ1
QQuzNkR2LqBh10F/xTIzgn4f8Wt5akBD0oOlt9BWghov5Ztmr6Dhn+GjP/Nd
CMpMnnyYtoqGaJWzcotcCdr17tyZO2tomJzyui+4h6BXq2+pR6yjQa3I8D+f
gwTdFGS8t22hweujsbDtGYL8Z3HeOTjRcMvMOyTgLEFWy6zAeisNTYY7cWwI
QULu7+XMdtBgXXDyMP8cQV6VQ/mL3Wmw6N1579MVgowiFYUEA2iYcHeqn3eX
IKW0bV5/AmmYJbLh27cEgr6VJjSNHaOBR2+sKLpHUNKPf1IHTtHgLF0WY5LM
xsPReFNTGA0X44PuSWcS1K7scS01lgbdka7VqQUEOS4w6m27RsNusdnWVs8J
ql88U18unoblX2YzI0UElRsXNZy6Q8MhtzN1szFBabtmSNul0FAWvMdJgxCk
6tnjEpFGg8IS3703Ktj5+xZmFGfQsKHhfJ1wJUGXQ/ZYaD6ioXNCuaCiiiC/
pPzQyXwaqtUMmydfEzSYealR9zkN2SlDL1Y1ELQ3b7eqRzENAfiA0OFGgpwq
JHFDKQ2xJxziKpvYePTvnEh5RcPmRWKf/mkh6Nk3/Q1t1TTwDZdH6n4gaOl/
nBsz62iQ1Dkaq9dKkJpErsGpRhqoY6P357UTJK5N+dq20iCmUf0ys5Ogs/rt
+Fw7DddK3TSCPhE0YfREpvgjm0//hhbLLoKGNm/P1OihYfzDGuO6boL2Oer+
cemj4e5pMhLeQ9BHVzHL6H4a1OmVP5f3svXj8/jznyEaNvlS42F9BG08Fr5c
9ysNLXsEfql+Jog5uy1833caDJ5xLQpY50eLqDeM0fDU9GtPfT9BOjdbfMV+
07B6fOtS+y8EZdzPLjWcoOGIwKqaOta3nzq7pkzRcGM/nswZIEixeHFWqwAP
xP9VjeINEnSFEZqUFeaBcbh3wAnWVO07S3NRHuxqDM9sYh3cnBl/UpwH5T+s
DBYOsfNtD+5/zOHB38OPZgSw9u9zXNEnyYOvnZGGRayHRxadmy3DA/LxQ8EE
633jAs02sjwQVDgdsex/z+unm9XPyfHg7GL3VHfWW6mHfkUKrHtD6WjWjbJn
y74p8eD+VPWHPNabeFtkNXg8+G6mN/KGNVHV2ukymwe9l7PsBlkba01nRc3h
wd6C5RR7f48K9JomyVweVGRWyvzv/YGuYfrGP6o8+P/3C/8H0Xv6Gg==
       "]]}, 
     {RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{TemplateBox[{"\"mean \"", 
         StyleBox["\"x\"", Italic, StripOnInput -> False]}, "RowDefault"],
       TemplateBox[{"\"mean \"", 
         StyleBox["\"y\"", Italic, StripOnInput -> False]}, "RowDefault"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.21832118518518517`, 0.3003134814814815, 
                    0.42062103703703707`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.32748177777777776, 0.4504702222222222, \
0.6309315555555556]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.32748177777777776`, 0.4504702222222222, 
                    0.6309315555555556], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5219093333333333, 0.36209837037037035`, 
                    0.08417837037037039], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.782864, 0.5431475555555555, \
0.12626755555555558]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.782864, 0.5431475555555555, 0.12626755555555558`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.19103103703703703`, 0.26277429629629634`, 
                    0.36804340740740743`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2865465555555555, 0.39416144444444445, \
0.5520651111111111]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2865465555555555, 0.39416144444444445`, 
                    0.5520651111111111], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.45667066666666667`, 0.31683607407407405`, 
                    0.07365607407407408], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.685006, 0.47525411111111104, \
0.11048411111111112]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.685006, 0.47525411111111104`, 0.11048411111111112`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1637408888888889, 0.22523511111111114`, 
                    0.31546577777777784`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.24561133333333335, 0.3378526666666667, \
0.4731986666666667]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.391432, 0.2715737777777778, 0.06313377777777779], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.587148, 0.40736066666666665, \
0.09470066666666668]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.65, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Beta]\"", TraditionalForm], 
     FormBox["\"mean\"", TraditionalForm]},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Epilog->{
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["1", "8"], StripOnInput -> False], TraditionalForm], {
      1.1707963267948966`, 0.8522374025897782}, Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["1", "2"], StripOnInput -> False], TraditionalForm], {
      1.4707963267948965`, 0.7014979976940614}, Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox["1", StripOnInput -> False], TraditionalForm], {
      1.7707963267948965`, 0.41595317446024377`}, Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]], 
     InsetBox[
      FormBox[
       StyleBox[
        FractionBox["3", "2"], StripOnInput -> False], TraditionalForm], {
      2.0707963267948966`, 0.1503534157065272}, Background -> Directive[{
         Opacity[0.8], 
         GrayLevel[1]}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{30, 6}, {3, 20}},
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {
       NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
       FormBox[
        FractionBox["\[Pi]", "2"], TraditionalForm]}, {
       NCache[Pi, 3.141592653589793], 
       FormBox["\[Pi]", TraditionalForm]}, {
       NCache[Rational[3, 2] Pi, 4.71238898038469], 
       FormBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
       NCache[2 Pi, 6.283185307179586], 
       FormBox[
        RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Line[CompressedData["
1:eJw12Xk8VN//B3BZZwZliZkpSrZKypI15bypKJVsSWVLVCrK1qL6CCEl2Qsl
ypYsSSLkELImREiWiJi5tyhSUr7398fvr3k8H/cxc895n9fZHrPK5bSVGy8P
D0/YIh6e//vkw4zWEe1AQ/7JXq+hZBLJScspr4h1QiKDLt0fKc/0R5n3xpxG
4W5baB2UPXpodeL559CY4in+KspDRo3Dz2MC0H8BP5ozKT/q2saTXx6Mku/0
OoZSdmEo3eLJD0O+NsovHSnLIIEV1qk3kJLdyJga5S6f0dyMmFuomC7z8XcS
iUw7h2UvvYpGolH9dysop3+1cssoj0W/OnTWnqfMQ6/JbX0Wj5Qu6gWqUnZQ
2Dg9m3cbiX+fTu9NJFHZlocGq7ISEcvlSlwAZWk7yWCz1GTk/Hxy7wrKbRE/
xO/F3Edml4ZUTO6QKOFdoepIXSpacS3O7O1tEtUOubede5WGwnITdCwpr/rT
y0wrf4jMyhf5ogQSWdBiyrVL05HT9ry6x/Ek+k/KzKnpWQbyWK36WYzyB7Wy
zB95WcjywuZrdbEkom3xNruWk41O3VyxWIqyrpnKV5msR+iTkd9hhxgSxbkm
aZukPkab2NpePVEk2pPoX3snpgCNnbHYdP4miQyt2c8STJ8gupasRmQEVa8D
MwKf6p6g9fozP+/eIBHfsbxHfq8K0eTdosn0cBI5B8pOpZQXIa83Wx86hpBo
Nuy38YT+M6RwRI9tcJVEkZFdcRtLn6GkfkNnsWASVSTf1Gt4Voz4RTJdMq6Q
iP38b8BUXgmanjM0unCRRE8qetsNVEvRUyXWDhl/Eu2oKVYIzSlF119ckC89
T6KzbR71y7JeoPs3Na0/+JGog9O/eFtqORIpO5LfcJpEESsr7yXEYOSCa1L3
uJDIpDlZo0q0CvndKyuzdSbR61C7pdpWVUhkTbbHfkcS1f9t713RV4XaMp+m
ooMkauDWun4nqpHEjeW7H1uSqKk+xz9RrBbd7WvdNmlIIrPgYw6L99WiXd7/
dH02U88NFSE4sRYRScdbSX0SNRffE/CQr0PhPu1fGrVI1PIwKgq0XiPD7opP
siokehNwNvPL/gbkkCKSqi1JInODjeH2dxvQk5Qs+Y1iJGr9+e1k+1ADijuo
tG+NKGUPd41y90YkfsbkzW9ByofsKyIvNqEjDAkF/TkCtekad2jfb0HVhWpa
KoME4swKLhj5tKHdzVUjHx8QaEFhT61ubBvSNXQWZ94n0FKL2PD1RW3I92zL
crNkAqHslUvZP9qQamh3U1IsgeLs9NZOerejssHC3LFgAhm+cLdO8e5AcidZ
DmuPECjavyVrzqsT1TXHlB2WIVBmpoTHZHQnSizX93/BJFBFh53mWGEnOqdz
Wo8hSaAxldGK9qlOVPh2Y3ECnUCb+v62Z3t1ocJ9pu2HfnLRZwO1eVuv9+i4
9akHt1u5SO9vtEXRmR5UOWTrP3CBizZdOnGbFtWD/I6lG/r6cpHBH+MBh4Ie
hNzMPflOc5Hh7x8naV970O/nk0sXu3LR1pl9YQ4ne1GD/770zj1cZE6yK4WO
fkBmZn9nV8txkVt/2jr7Qx9Rcumr1VOYgxoH7IJ5FYZQ1U5xV2diAtm26Ekt
0hpCxvoOFTWfJ9DnF6yshW1DSLlNsn5l/wTiie9pmj86hESyDs9Xv5lAervs
JGZzhtCW7/sVCvInUGbJ/jSu5ieUFqhsseH0BLoaZYs7jYeR0Jfnf95yxhEY
2/zJdPmMig76DCi9+YIOntk5WXxgHKnXF0xpeo2iylUqQVUZBBptZqT9Dh5G
NndUHvZ7TiI5fTf5ew8G0HKBl1ujjn5HObGe2vzqPShsY93TqmvTqEkr0s+y
sQ1tNzVzzgz9ieyzcrZxtGtQXfi08lX/X0gztChA2uEh4txcWjF4Zw6tcQ72
t84sxofPFd6ajJlHriYKB0ZMGvFl+VqNgJJ/yPNneDoDOvGGf5d/8rrzQNTa
geujjn243sHuh5zrIjA+rR5g3DyENVI8ui/78oKA0NzYkk8jeJtl9cFibz7I
F4D+415jOO7GSS2+c3zQ2dP7sPHiGB6pk1pseZEP4qTcxhVCx3DQphPVRDAf
bFu5b7A2aQxXK0iuUYzng41JKhqlNWPY8KfrTEwJH4j+d/jt4aVfsF4yLerM
PB+kyN5+kvvkC143urduXSg/FE+8MQvpHMc97qq33K7zw6RNwIBg/zgO/Uo7
cD+SH7oebg0KHB3HQ7PVhMRtfnCziJo8/HMcxzG0ls5l8UP1nrPKb5kTeF6N
daShkR9U1V5+szswgVv9h3jcRAWgoDBp1bLuCXxxoaIpRVwArsQr7ngxMIHX
XE2M65ESAJGqDzqWYxM46KbVmt0rBOC+m43ryZkJrJtau3ejmgCouTyq3SHJ
wal12SmLLAWAaTHSlLGHg73FvDanxAnApoSZng8VHMyJbDpz644AjP5wV5ap
4WAXUcWMK3cFQCZ+07RtIwdbMrpFj6QLQMzaUcaLLg5W598yuPqZACi+Pza3
4SsHf52lBRW+EwB6353bQ7JcfGIwtb5WQhAMygSaLM5z8bDD3J9iaUHYl3XJ
Gl/m4oMfrdWzlgkCp/yv2upgLt7ZK5gYLi8I4+2DH4dvcvGad6dOmGsKQlVP
wyf6Qy4ee60n2mMpCAUJ+f5SLVx8JL/NihslCFOvUqyWsQnsyKoP0ogXBLN3
P49LriDwwaCXT88lCgK/duZ5fgUCW9jmSPA/EITXTcf/a1Ul8OZ/wR0yRYJw
pTlyfhEQeKm5rpV5lyB0FfrFjroSeEnp+qC4XkGgV/InO7gTmCGv+PRDvyBU
OnmEvvEgMM9PMYljY4IQW17BF3+WwMQ9TnvArCB8FTrt9yqMwLXkPctCthBI
r01SSsgmMN4fFzgrKwQF9N7uG7kELqu+XrhFXgjibWsPXnhC4Cfx58SbVIQg
+Lxyq0Epge9usWwfNhCC/3JNdzvWE9jvJr/lUkchMFZXLGF9JrDy+pMW5x5Q
v8d5v8ueSWIiaoDjmykEa7NnE1nLSPx02jLEO0cIlpSa5ryRIfGWCr0yj6dC
8L6xbrG8PIltdgkqur4Sgl03Wjt9VEkc6J42azEsBJ8SMurLEIlN3iyNMR8T
gjDHbi6vMYlFNK6p7uYIAe/7nQ1bt5H4zi/Pw6bfheCw/7Osgh0kzg/b3LyF
lwYX052m1CxJ/DGjO0VFngbbB34bdDiT+AF9l/4aZRqUeY+mZ7iQ+LhH5Tsl
FRqQLd9fermS+IdWBm2VJg3kn+b8+3GMxIxab2+mMQ0ad1/KT/UkcdvqMREp
Exr4ONtG6J8hccKNA1kSZjRYazEl3exF4lXW8FHUigbXiD71Hl8S6w2LmvC7
0OCtNd0jyZ/E/7YHDi06SoO5KpfMXxdJXPto2n/BnQbx9VHhey+TeK9XX8Gc
Fw2a1zF3fwkg8VGeR+ypQBokOXFLK6+SWNVV5tnXEBpUDs3pDoeQeKr+ljkR
TgOzyGOO/0JJfOnW2eAv0TQ4fAalyoWTOHbFNrI/jQbz1amTIjdJ/Lxl4lx9
Bg2aiGiFKcof/G/xFj6i6jEutb01ksRy3R+YVwtpoHmR39onisRbQ6488Cim
gbkTAxlEU+3ZqLx+/wsadBX0suYp597yMlappgG7WTb+eCyJ325hvpGso8Hr
Ewa6S+NI/J1bsf9vAw065Hxfl1LW30HzaGujwXWp5MdEPIntf+bNvuikQVsh
WnQpgcRX0q2DHvbQoHjlqa38t0n8muf+7bNDNKht6ItYoDyRv03e+TMNTLjD
sd53qDw4cHJ3jlP1z/8dOkBZXThKdyNBAxcQPLo1kcTWL7RfyUzSYEvQpHoa
5bPH+nYLTtPAU+DBl1nKSVKB3d9maSAsKnjdNInEL2uUXXr/0CDhJp0VRXnI
q4V4tUADvvXJ0e2U+eS8z+Xy0aHU+PFP4WQSK7cyeROE6BDbvc4UUTa79DIi
QJgO3zLEgk9S9lA5wnRfQocH7L05UZSjemgPrCTpwG8xUJFP+VlovupmJh1m
mCVldZS7tWxKlJbToWPq3cMuynPDv42WrKTDlSUa5wcoy0bfb/klTwdPmxZd
6v6AAW3fP6xMh8h9GcMfKLuSnE/NKnRwOPDyfCvlsOSoU8Ub6DCwnzlXRjln
p85siiYdEuZKjqZSbp3tC7ymQ4fbdzMq/6M8lREo4r2JDt5m44tsKS+1WX37
kCEd9F+FqytT1uV9s2q7MdUen3izb1Q9Dj7xzt1gQge7AJZFIeXLjixdlhkd
dpSuMjpFOVWksnqROR32PqiWlaNcU3ZkN9eSDiPejLEWqv5jx+ndnfvoMCgm
luRNeX2dDZHlQIc79Y/qsqnxtPCZOxt9mA4iSp5b9Cn7rkpddNGNDma9e9Ne
UXkou8yVNvegwzbPgfVVVH7610Wn6XrRYeuKRlstyjwfdFRX+dEhpGb3qTQq
byY6QUbTl+jQsjbP4SiVR/fPq1v6r9ChZGuXfiWV34iYN7b1V6n386/nW0L5
3VfWqaQIOvxrWOqYTOXdOasgAe7SIXRjnb4TNV8Ejb7LBKTSQUp5auVJaj7l
fdB6+DKdDkXHXj7zjKDGT7SsYFMeHVIc93Htr5M4zre2QauSDvhDX1wXNX83
LRba6/OK6k+a1a8Uan5/ytrZVfiaDlPJIyLOwSTe0Nf6acNbOjBjXpo1XiFx
g1Hv3Johqj9rnyvoUeuHZ9/ywGOf6XCr12oZvkBiKT9Hocxxqp5m7Lot50ns
kj0iqTBFB5Okbj15PxLPL/6qKsvLAPHq8Iwwaj1T/8jrJK7IgF4lzr9aJxK/
99s+uncNA8aVlp6pd6DGc8m1k5GqDHguYXqv+hCJm4xFzwtrM8CQT3zDvf1U
3h4xowVMGKCQU6o/ZU6tx2dVa34fY0BeqXiI6GYSG4qd3ql3igEiXho8Efok
Hn1U+PbsGQbU1EQY8eqSWLNf5+OP8wzgCney32uQuGWr0QwZzoDKK7ray1dT
4yduu3r4MQN+8/vXLBcjsVe6FKungAHnvDQHzERJPKzbRWstYoCf/fdebwa1
njracF6UM0BQ2+ZcHj+Jw3Ot8qKbGWC+J8bhzS8CS+zYu9GIywBnNePLpYME
VgzYgVJVhMG8bjbSiNof4yVo6gkbhCElUdwkMp3Agpn1chGawqDAPzj7LpXA
4y0mvOc3CcO731v2miUSOG/Z9rq9ZsIAaPGX4XAC6zw32rXgLgxhkdlRtdR+
vZPctN/xkTAkn5V8Z6FIYMNTt7c+yqPeF/zSzX4lgTW5P9SmC4WhlnZz0GkZ
gZdN5NKulwlD3Jx9pLkYtZ9/XlFW3CwMdkahi5r/cHHUR15Z0a/CUFfZfMOo
nYvfNzcNl2uKgGnVFFP9LBc3ma1+K6grAkLGe64anOFi3BhcbmkgAkVJmxjo
BBdn12+O+7JVBD4LPHXf4MjF/jX52yX3iYCo82hW/nYuli2PyT5xTgRq5A4U
6EhysWvOQU92hQhYHApp88rm4Oc+E2YWVSIw7Rbolp7GwbQt51eH1YrAVENk
wtskDs59Gz803SIC7n2+nUtucvD0dJtVW78ITGTzzeh6cXAwMtUNWxABZ6Pw
S2v0OPhB50aeGWNRAL5rOXeqJvCnfyIxbY2iEKeyf7NqxTj+V83qrXwjCgt/
E5RVno3jZSGKcnntopCgJLpMPncc2whvzg/vFQU7ZydFnrvj+DXzZJPxhCgc
8Ie/vhfHcY56I28xbTE8dWi9sFV/HPu6hPgkmi6GRk37kkDq/Cz4+q+NS91i
YD8fTft1cwwveKxd0Hy/BBQfkMviW0ewRe1OxdMnxGDq8F6tVGIIW8rueGv8
RQyu+/B2HXrShyvGRshiT3HgV0wZEbnRiS9OrLCXJsXB0LmcvMJuxg/tZ7dI
n5UAnaCghN/Tz7Ec/fRpvp8SsL25JtvJNQmZL1LP8vSRhFsF1kH8L6vRqHuk
1YU/kjC924N3+kYbahOO2OPlvxTi/aoN0n26kdKK1RU0fik4oi/aZB06gFQu
CWusuCEFB2fzLGPPDaOrkrdm5OjS8DLj+A7mulFkuvzJ+ppoaagXavGcL/+C
dsu8PVkdKw1+a8JuN9d+QRayXx/heGnYqXapN466j9mtVFWuSJQG7VuHUqUG
v6ATCtkritOkQdlI9+/bReMoYl3qkqxCaQgoOiehbDKOOgyipq63S8Ms74+p
HU3jyNH+TLGVOBM2j6wp+oUnUHRQNtdEkgkKKlLu7PoJVJs9tMpAignPdax/
bWydQCozFpEKbCbkWfxLtv04gWZvahyblmPCu+KfDZa/JlAU/s5KUGeC8MUL
21eocdAreb9LvXuZsC5H5Bz/HQ6a2ZH39I0lE6JUZNY5pHDQmtOj49XWTPh2
Z2VIQToHRZbv25eznwmTkn8UjQo56JCNzoaLTkzoP7Caw2zioOmQ2UGZ00yY
Zp6EmDkOUp64sNU5kgkfHxXJPrHlouUhV2b/i6LaKz/986k9F4mtCnt8L4YJ
kjrFcvkuXPTbLk6yL4EJKYJ8Tjc9uailIX9k330mdV7aZfcthIu8s0eCdz1h
QvWLu22oiIsqj+2p1elgglM8c0SIRqAiPpvz+zqZ4F5mVCwuSqDs+wdVfd8z
oeOkS6akBIGiu4/FFX5gQqXDxODCcgK5mga5qo4wwXJBJ/yCGoEYq0v45aeZ
IP35aMikDYH2j8ltF5VmQdXiD7KfEwmkueCWL8RiwdvYZNOcewQSYT1m8i5j
wbzWcy/3NIK692tzfsqywHOdeU1HNoHW5O28NaTEgoULLcaWJQT65ePdW6TN
Au7zqq/zHQTqiCgxztdlwfjxgSKr9wTKzZh/nK3PAtXuCyfTegnk3B36370t
LJDe8y1/7RCBGjclK4RtZ8FlkeQzowSBkhbVehzcxwKJq12adAES+S6jd9vs
Z8FoxdVXpBCJzDeaw94DLOj5eEuvmUEiXrceiW0OLEgV+Np5RoxEJxuIkvVu
LGh9dqf86HISbb4lxbvIjwVl/R2582okks4+ePLPWRY88/5leVqTRJNV9ztn
zrOgN3npuw9aJEr/vjaLc4kFm+07j97VJ5GIreHuzqssWL5nT22jMYn6ZY4l
ZMWx4JNkVV+LNYlslTaPfkxgQR0ul6LZkqhtvbiWRCILsnVHHTfZkeiVYXn7
pXsscH4jLXPVnkTZzktErTJZsEtkWC3XlUSr3D8fCstmwcYg5fb7R0mU5PUi
pyKHBRz165euHyfRzaAjO1YXsOBc06Fv206RyDu9JHi+hAU7uee1zX1IxM2N
6NAoY8Fu2gxzzpdErsWHVx2rYMGBKHWee2dJtP+1MG6vYoHj5MRg/QWqHuNO
c5mNLGhPXf62MIBEzye1dn5spvKQqt0hFUgitd/0O+KtLCi0c+w+E0QiecYz
7UsdLNj0UHdMOIREQqo0L8s+FpgwlITfh5PoilY/Du1nwQ2+l5Lfr5NobvPT
xRWDLAhxdVkuEEEiYo99rvJnFvB0XlMWiyTRUVuNP4fGWGDsf2It7RaJBh0F
zaLHWTBRskxllnLH6Sdf/hAsKDr0WqEsmkS7zofoaHxjwVELPZnIGBLVXjkY
cnSKav9vN/EDsSQqieZXaJ+hnlcuTL6LI5F6Uq+X4C8WxB7+9SE4nkQ5D/Kr
DOZY8LCxrkolgUR3i+wcM/+xYJGmdIDDbRJJVazP6+Nhw0yxwf4JypG1vPNi
fGzQEbyocuoOiWhvus1MBNjwZGvur1HKgV25iReF2EDbm1Ntm0j1tz9w/Amd
DTkNViGVlH3HbKlCsaFDLHSrbBKJyK/rQpcvZsNt09Xz3pSPzvJ0WYix4etu
mQJMeWihSyFUgg0VVXvs+ZJJdID22Lt8KfV93iw+Q8odYleqJ6XZ8E9TOuM0
5d3sfWLKbDYIakTAHcp1q1ScDi1nw/O7810llA1VFvKiZNkw0OXgRp3vUalm
53zdSjbYzmd/7aOsYfBo159VbPj//xf+B+2o/qk=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Line[CompressedData["
1:eJwV13k8FV8bAHD7vtw79yqyJJWENlpU8hwqZYnsQiVJyZIUosWSFG6IiKKF
rJGKyq/ipIhKkopok/0uk325tt55/5rP9zNz5sycZ5kzizyO2R4SEhAQKBUU
EPj/URhLNXatizQS+bD5gHNbuJH6PHVNtZT9cCbRWV99w14Y+5lk1ZZ8DMay
k4d/rPeDDuO3nU+Sw4GjJ/7n/vqz8PVET3FuciI8th5neK2/DE2sEXpW8i3Q
b1l0K2xdFuzKCKtJTy6FzBthX/rXlABrYVVWWjKGD8tm9B4trgTOhNg/4xNN
IGswPz1HuREMZq/sLgv4BsqPiMAIegu8/eV8XmhxB5DOYVavM38AMrGfzvPo
BpEyZkNR5h9wCTAbfLynH4ZXObGW+3RD1SLtqJe5PEhXXP9ybkEfTH3Y5Hf7
CQ+Wt/1QwEv6YF2YhXNEHQ+MH4xOn1rZB8XNvisRmwdB7fn+bcZ9cON8aTvW
JeH0+uZsyyN9cKpnrT4uI2Gu/fMQv6wP9Auhu7L6L8QcWdS317Qf7NO1c376
D8IKMkcHO7JBvLPY70XwILw/Ojq+bR8bnumsMrhxbhAMMHmz5hAb1LH+B+eE
QTgfef3sw5NsIHsMJz6XDIL1d9+txslsiNG3tnjHG4REu/0eGxrYUNF4YuTJ
0SFw+l1fd3wzB3wUxytTA4fgsaFd9SoTDqh5nLp0MmwIaifc3ft2ciB67Iyq
XtwQDL26eGmrIwdsVGJ2lBQOQVTKH7vSAA5wvNNv5PQPwbDxx0C7uxxQFq3c
muQ1DLETwcKvxbjwZWmoqNKxYcj5ej5OT5YLCabr6u6EDMPVzfb7rzO4IHSp
xLzs0jDwiyY4tupc6Je6adNSNAyTWxucDm/kwhNa+H6VgWFofTk7pXyUS81v
fLogZASuZa4MLqjlgtSWWcM1ESMwExvurPaeCzV7/5v779IIEHHxtqwmLhjc
WhP1PmMEOPqFF3d/54Kahkbs3+cjEBq0833oIBd4y4SvrRUYBT1BjreVEg8u
6tc+enlpFB6O+UqNe/KgZcdps4qkURAP6zym7s2DJW5rOkrTR4H/aOLtVj8e
vIrOkr1VMAornfqdgoJ4MPc16MjZemp8d2rV+Qs8CD6lqbZJYgze+pxtt7zL
g1rWj/I1tDG4m59NiBXwgHkn2WK54hgQqz6uqrjHg0dv504pao2B8aVUBfEy
Hvxd0Pp5fMcYiExnBVlX88Cr8mJs2cUxWL7r5uvYHzx4/GmL+r3EMfhvpVpn
028eiPSOPMm+NgY+5MdWWhcPsuXcu6/kjwEz98r201Re/tpvAAF1Y9A+6Mec
GuOBoxB7VFd8HDDN/ctNWRJy592KXyI/Dm/PrpI8QSNhVNtBQ2X+OCi/WiSJ
GCQk21VbSy8bh4GwwsM1iiQ03s0oYpuOg3HoNlbwYhK27zB3z4sZB5P2c3/C
N5BgPejZGpQwDoKeQslfNpKwJyPcanvaOBTG37PQMCTBj1tu2J07Dp9NjL4V
IBJSExcqadRSz7P62A4PMxJuGWxKGmoYh1meql64BQmFf+zFq79Q41NeLErd
RUKlftzY/u5xuOLWKFtsQ0JP6+inLOEJOLz+lXTMHhIGIuTN/KQn4Me0B83H
lQT+cu2XhowJuOanNc9sLwmyZ/bf/64xAYH7XBcPupOwTv1dnJLJBCye72DA
OUzChSO3tqZGTMCZgftDl0+SkEh/9szz0gQ87v/eIhRMQsazL2vWJk1Ah23r
k4AQEkpkpNQ/35qA9d6/Dm0II+Hrg5MzNDwB4b9lQwLCSfi9J/FEx5sJuMiL
Wl4SQQJbqIhT2jgB4x82f+mMJGHW/vc3q18TsOKKHX1jNAlL+WaPWbMTEBoT
qHHlEgmrsj113UQn4SHHJjE1loSNFuE5OrKT4FzpMJwcR8KurPIr71Qm4VxL
e8YpFglOph8lri+ZhHaP/p/ul0k4MMAO99alzrP15pskkBBkvNBfwnASPHsL
jwwkkhDO2djTunUSdOQDIp4nkRCbYu+WbzEJLtfyWBFXSMjqiTU3dZ2ERdlF
kWPJJOQn3K1WODgJ3tsXHs1NIeHhBmzQc3QSWLG2plZXSaiNHdWMDpuE9/cd
2uJSSWiRNEudjZqERnP6e+00Enpjs4RD4iehL0ku4BXlCcnh44Mpk9A8rlFv
c40EiTjTDu/MSThkqvn5G2VFqRtWXXcn4VrWcJJTOgnL4wZeuJVQ8/l7CjZS
No9Lz7CumgR/7mP+nQwSXKRI8bdvqPdXd4n8R9knzjjY5OMkLOjSfW5/nYQz
Umndz1snodJsXv4dyqw4ju26jkm4/1Jgey/lTCmovt8/CUii7arGDSq+cSmr
tIYmYfW6hDRHylVS/Vl3+JNQ9IBuHkW5Mc5QRlmID1YGTqW5lH9JXQm7KsWH
1b/s37ykPBDX0y/L4EOnhHDiZ8oC0pucLirzwf+Em+QvyrT4hFqBJXxwW7Fv
XQflRdJd+mG6fHh6XZzRTlkvfkP2yFo+zJ1wyX5P2USaRfPbwod1b1y6yinb
xXec693Oh45huZZUyp7S68j9VnwYKQ0P86d8Mj7Wtc2RD13iFU1GlC9I/3pr
u58P6Xtqv4lRTovXM2g4zAcf56fJb6j3z5O+mLc9gA9LZG7PnaX8NP47E5/i
A68pRWUF5Xrp1ecNIvng5FTI+0yt77f46KGHsXywu8v3D6TcL922XyeZD2r0
2zkSlPnxKxrvXueDmcWzuDQqXlIyUYZqOXzIsz+yRIXyAlZL0bV7fNh5viEg
g4q3toyOEr2cD76R0gFylDezwi/GveBDxC5LjdNUvrixtDzPfqDGk2G3N1P5
5Stztnn8K/V8Hq98E6n8O8v6hAJ+8eFkfxWvncrPm6ww1YMDfNATuiuxh8rf
P6yGlp30KTjWsunJEFUPwzKLtr9SmoK5vvWawpSFLgeVbdaYgjjTKgsZqn6W
XFZLWqk/BZGGMRWi8SR4XQ4wYzpMwbVz6otSY0gIlq19ennvFARqsLZ7XiDh
4mUlTXGvKeBo/V2kQ9VzweVXQlPBU8CTnxC+TdU75zLzxe/0KXDVNw/RPENC
kuDBf3W3p2Dj02VnGqj+sT7oocmDginYkvhhl08oCVFuVm8jKqZgn8QH5xSq
/yjpXGpZ9G0KBrRC518OoPLxZouSVMcUfBX3YfH9qfgTS/cO902BYozEp31+
JDzgV3e9mpgCfa+2d4yjJOysnx48OH8aRjU2sZYdJOHvZvO1lgunYXhhd6zL
ARKulqaHrF02DTmHLrvE7CehI23dnMiGaagcLAiup/ppyKFj0nmO06CtOZo3
bkfli1DX0v7UabC2WeAwbUKCZfAa76Ys6nrFZS+eU/19mB1eXJFLzVelPXfS
iASjTyr6sY+nYekTG4Vm6vvw9ZYj0v46DXF7VW+vX02CyJZ3Lr7MGXDwdi0p
VKb6V8jDxMHkGVCtW7/KkOSB3KuN76JuzMDnq1d8vlLft2cyr0QU7s7Az/v1
rl69PCCym0M3Pp6BVYbY9Rj1faxpGDkY1ToD1Yumx1Q/8UBLY70BU2UWjKK6
z/x9xIOBhmcdG3JnwTU/4rpnAA8y529VflcyCzHCqt7jPjzY6fHewe3JLLz/
US4fcZgHtye+v4uom4Wyokl22D4e2GrMlr9lz0L2ApiQs+TBkxCIdV05B+Lb
O289XMqDsxo1a8KfzkFHuuMMp5kL3YIPLdl4DgIGnk+nfOCC5Z+sw3b1c7Dq
31XzdfVcWHA7JGtZ2xzs25L6w72SCxWqOpJNU3PwrpY97ZrPhVHF5A51o3+g
N/QovCuUC77y7omvav5B9a2/9SZKXFg5d3ZcyFsASecezsk25kDx4eP+A74C
yHGLsQ57Ewd0Pnn2fg8QQKNWjQeXr+WA1l2LlvJTAijlTxSZpsmBReZKT7wu
CSCRB9pXNKU5wEwrD3qXL4C8r9AuK31mw9QK7uiVXgFkb/LZxIXan9btdR5R
9xRE/fRVv4o8+qH+Ub+XxxFB5PT138EKal/9Tjy0PcdXELkIN4ji3f3Q+DCj
WjNIEFkKRuY/NeqHL6LfE3VjBFGRwkiR44J+6CzZq2tQIIgEX8yO7mrqg5lZ
j0PWPEHkK3eRWLuhD9bc9Gs9e1IIfaV3Xjg11APbbKpdHgcKI9k9mK6zuwt0
eqxrdWJEUO5TuXTaog4IpB03vHlVFHVe34gsAtrg4P0mW26SGLqf2+z9pLgZ
NFf47A7JFkcyT0dYmTJvIEVtG/nzjgRSV9FWe55VAu75pWkoUxKJKLPczLcV
YwG647LOe1JI4YBQ+42cN9iM3OS0r1Aamf4JXPzwSDP2LHLxV3ohg0RG9CN8
atvwnzmZ5Ka3suj3G1FsZdqBxd7M2nvUyqEn0VGH6ld24X9+y//ptcgj9SXt
q7WEevHRedbFK9rlUZ3W25R/0r34S9XJPVq/5NH+YJeoTwq9uEj+ZZlqrzxy
O1oy6bm8F9s/dDwiMS6PSmc8xMx3U56q7v8rRUPH34+zpLJ6ccGWAZsabRqS
3bXrjb1eH95dY7bk2FEasqk3jkyw6MfllWOBHr40lLj67MYGu36s+PROtYM/
DT1MEVou4taPOwr5+wwDacijWjnPw7cfByQWZkiGUfdfrdXZxurHSS6S8ndj
aejgfIOy0oZ+3DRYz/9WQENXh8gE7g42Xss5ubOhiIbK45ZG+VqzcXqX+jVc
TEPMzM8BfY5s7N5yam3eAxqi+YZsfH+IjQefax07UUHNN+Bjan6ejWkXL3XL
1tPQ7Jhe/ZJKNrZR3fnRpI+G2ObZEaDLwcGsVzfc2TS00fUoLVGfgzOnDY+c
49JQUfgx89ZNHNzftkbw2QANLY2VfmxjxsHn0pT110zSUHjohM7fQxxcLD+Q
tlCSjoK1GzpfZ3GwmFDavhltOtra9Xf4izgX6x6n6SxYQUfjxfb/1slxsW1H
3MSGVXSkFFN9KpHJxVlV4Ukn9OlI2THtns4iLl572vsVZzMd/SR5vyU2cfGB
UUPNNks6enHOWsDhKBe/6O0iH/vT0Rll71NatVxc15x5rDSAjvIf3NLd8I6L
m6schgoC6WixqIoyfOTi/rS60RvBdLR7gUD2pjYuZu64Nx15jo6M6mLXdfC4
2Dc/UNIqgY7clB96dxM8rHJEcGlvCR0dGaTLvd3Dw8vsn+X9LqWj6gCp9zN7
eVgPndBqe0hHd3K331zuwcM7FXt0Gh7TEYt/4rz/UR4+WV+v96iSjlwdsnRz
w3i4QSsJnftAR4cvzltYm8HDp9lqbvNIOpqnYSz6tpkab5HnummAjkTRCtlD
LTzMLFnhum+Ijg6w2psn23j4foChS94YHRVNH0gR/8PDHRN7nNfP0ZF9q+SH
6r88vF0s1d5RnkALzR+ZFUiQmDiiYh9GJ9AD28GnWJrEv97m2N1kEMj7S/6X
RjkSn7r8yLZ3PoEM4kXmfWGSuIjZtDtYnUA6Judvh6mTWH6x9K60NQT6LPZb
ZcN6Ev+ITrZ8pk8gAfK93FsDEhf0Kln+Wkeg9COW2babSWxSpGWhuYlAHz01
7lkiEp9cY2r2xIRAmXfcV/8wIzFK+bCzfRuB3mXNV9axJLHsmP3OOVMCBS74
eue4FYnzKg7uMLUgUHXRu4geWxK3QeT2FjsCbfKcDDziSp2/I7F9yoFA8k3a
uif3kjhQOGmbmjOBCgICzoTsJ7FM3c2tXm4EQl7s354HSWxk9cJ43JNAQ6Wi
Oe1HSZzjNrFlXjCBLs/45a45RWL7zZXDCqcItEBLnp4VSmKxBefzFcIIFOZx
Ql3wNImPtsrRFc4RKFZ/8fKysyTWs9XsZsQQ6Cir/VtVFIm7V/PSGZcINJ5m
vGfgPInT5B/tYsQRyKujNUzxAomnGrY8JRII1GHoc9v+Iolf7XCIo6cRiJZ0
3u9kPLU+mspATycQXnx/wJtFYk3RPyO06wRaMcimOV8mcdwr3720mwT6b1Xh
KrVEEhve0SNotwkUbfhcd5zy3/DJN/LZBDr/eLruTRKJbbdEr5bPI9A8r43f
bJJJLKJi3iNXQKDc8c+WMikkfjIlf12uiIp/bus+THlBxQ1hufsEcnH2dpFP
JXFD2oEK2QcEsg7O2VpM+VzQMj/ZRwTS7L351jiNxJ16ZS0yTwj0bKPpPcdr
JL5KD42XqSCQB79YrIWy6aARknlGoLZX5nO70kk82SgyJv2CQMJ3BJOrKBeV
vCuUriLQlpDH1csySOzGSton/ZJAuwUtL8dSlvNxZEi/ItCFz8WjXZRfmqnU
S9UQqNilemL9dSreWp1npN4QiPnjZFoU5SXiBWuk6gl0N6i8idpv45Yev17J
dwT6oHosT/gGiS/V6N+QbCBQak7q/I2UN+XwrSUbqevvL1hymDIvEotINhFo
Ix5+f5nyTfcL/0k0E0hvJVO+hPJusPCX+EIgxRUhZA1lQTX6YokWKn5vFA5/
pfxopqVV/BuBON+5p6n/D+z5PZMl3k4gJe0JHer/A8975mEs/oNAz7dtCKH+
P3B9uta42C8CXU0v2fuBcljI3yKxDgIRPnt/V1DWdSzfL9ZJoO3tFjOZlH+t
DWOKdROo70d4eSjlJAZ6K9pLIDsTIQlryibDoudE+wl08dHPcRXKo03v9UQ5
BFK+rxbZRa1HXumVPhEegXYmfM7Lpuyc4JQp8pdAP6NljrhQlvJTtREZpOol
83uNFOUXFl2iIsME2vfUvrKMWn91yWPHhMcJZIuzIgeo+AnKWqnwJyj/bDof
TbmTtuLtXz6BnHSjfAjKOYpcjfZZAglmNnIVqXyIVnn38eM/AjFu5UZfofLH
U73wTK0gA3GuBQoLU9bUOtzyQJSBxgZOlTVdJbG4run5PHEGCvky3a1LuX/V
0tWZkgxk/Z/4bCSVr4UbumIvyjLQnl3uf+ZR+a27Y/+WfQoMlHxpJpybQPUT
CyOO3XwGYvnkcOQo/7VSvWamxEALdC226FD1VOr4fXCtKgPJJoXesKLqT8/L
6a70UgYK3fLUGFH1SRxdbyO4jIESTlcNa8eQeMRPYW5ci4Eafe5dlqPquTzo
s1OnLnV/dbOol1T9b7hgLf3fWgZavjXY/yPVHxRjV1bcX89ALsmRwZFnqPxn
yR66a8BA6SY1R3WpfvLs6vuqREMGEukzUPKj+o/h3R2BXtsY6J2h0bWMQBKr
FmgudDNloI5iJynGcRLP3RNtsNnJQHFdXr4XjpEYl71eusWSgcqYvXP2vlT8
X0Mbw56B0i6ZHLl1iMSL69RiJB0ZyNK6bW8H1f9E3s/q/XNioMzGpO0LPEhc
2/ycxXFloLBb88lT+0i8s3MDqj7IQPmc9oI/jiS2Elyd73+CgdhpIZsPmJJ4
MOznp4QgBtrQFvRRcBuJU0bjZu6HMBBMPVl43ZjE3/p6bAZOM5BBwfOJh4Yk
PtB4Y+ZYNAPNzh3KOKdH9bcb4rbHUxloXPbmDpYKVQ8Kj89cucZAqc8Ojhco
kfi/BI/8hxkMJPXfAb/KedT7RlbODGUxkMdhh6cfaCS+eOREfmAeAz28VNMc
L0Li6+t+z5x4ykC/tHJ45zg8bFjKWnb1PwZSqR6JUezj4d9am2zLnzNQhk7N
RGEXDy9RSc0fxQzkuLrOvfwHD5cIWdgG1TMQfVbS93AjD7/8+CQ/uI2BHuvc
t9zxgId7vBNsQ6cZKFJw8bcxPx72dQ/TC5ploAe8092t3jw86uhFHP/HQKXh
CSOPDvGwyDaj5iPCTPTOaFzVntoPaKj9tXGWZqLsirqXJpY87N68y2aDMhNd
WfVRp1mLh9s3ye4e28REDsSMa/UPLvZYw181ZMhEt80c2mtbuZizrEeeNGKi
47cdw183czGfWfmx24SJXi4yNimq52LFAV/rL+ZM5P/zVuPSci52yGmwKnNh
or9Re9RaYrm4SZq163gYExn8WPhtyWouVjpleu/aGSYa3C0a93k5NV+3gGTV
OSaa27b8YNhiLh57EVQjdZ6J9tVEJz+Yx8UL/PdvvhvPRD3Rx5XwDAcfatJb
3prJRIbyNf5edRw8dbVNZAtmIsed8zu5jhy8VG3ZCwkRBST25usF0/1sfLN0
ir5UTAFF6LlbrHNi43nGjYeNJRRQSnGOkCq1XxXzDGKEySigP9jVutWIjXsL
Xx/lMhWQ+89ldyZU2ThvnbtS41IFpL/Jbjm7vR9r7coITtmhgD56Pza/bd2P
tc9Ir1GLV0A/3zwRYy/pw9GMxDF1yXko7Fmc3ceybrxD+cGK11fmob2+9eU1
ZX/wPreAx7b0+ajkWzrbf/NPrMkO3eqeMB+t1nkkl1fZgp161bfLzlNE69Yu
dO3NbsQ/VQ6n5V9VRPls58htFi+x41LDnh9pimhqy4BsuNRL3LSCvpbIUERZ
XtN+3ikYvzJ6/ulMliK61CPgujipChe4y8va5imicbuKIq3YFzjw7tPzM08V
kc3oy8oboRVUf5M4bvNdES15/Vxpo8MDHLH2J475qYjYWyPkonNL8ZThI7kX
vxXR6teB21i372PeLrdizW5FtPPC5n8RacW4+diDvmmeIjoWKuwpElWAM8uc
9+XNKaKm16WJFU63scKLFSXfBZSQjKRqY9HdmzihRmiGJqyEqj9Ja37PyMSR
X4szTosroYV236w0otOx14TA1900JVQ1vXbY1TkJd/z7ujiGUELOpb8eVFxn
4T0S9wKfM5XQqp3Xah9EX8KWSg40TSUl9LtO7HW8cwSuXaS931VZCe0pr7Dt
jD6FjbT/lSSpKiF2hWdernMArtD7MlO7UAmpjPjP1jm74zWbCy2mFymhj3or
PJzbwqv+B2twdjI=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]], 
        Line[CompressedData["
1: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
2zStogD//37h/wA1pP+/
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]], 
        Line[CompressedData["
1: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
s1FZQeU02DeW19dO2XeFztIdz2nQen3dmxh1EhdeDrbWr6FBmdLA4nYNEreu
ZryVrafB5/nr6Yc0SfxztHLH3yYaxKykpQpqkXjlRlpQWxsNgr9coKlrk3jX
dNHM804aDLz1iLtHOSp7W8w9Dg1Ep3bHqS8icQPP3evH+2iwhO+ymLAOib8W
22juGaTy0RCTcoSymOdIod0XGowmWN18T9lINMl8xRgNeNKztYx0SbztuWmt
8g+qHj5kG8ZRPu5HbhaapMF/L/QquijflI9mf5+hQZ2+SrOqHolfvtLZx/1D
g5InR9z2Uu4LbhmrXaCBxVFZ/3TK/OohYYX8dPjNNzPXQVnnHYPvmjAdzK5J
SPAtJrF9xMuLp0Xp8HHEIUufcpD+foa/JB0ubS5+uplyEoeW5SxLh4up2g4H
KJfFFRtYMejAXfzAJ5Iy28Tl6SIlOqjyrv53gfLcp99rJdXo8Op2NyOVskry
3ZZZTep6seOPqP0DBrR+xycdOiz/rvguibL3t5H+N/p02HS4IeAs5fhbSQfL
Demwy/bkuaOUC+zMZu4Y08GpYrWuB+V3M2T0OTM6NGXJbrCiPHE/WixkFR2k
dwt8UaAs56J73WMNHZb2MUVGqXjN+d5qrLemQ/M9j6JnlN1LQgoNbelgXc5p
P0050otpzrSnw42i9DCgnCFWVcPrQIdjj5/fmaPy/erF/s2jTnTQOrl6QzHl
4QN0dqcrHRJsLYM9KC+tdxnL9aQDq2zKLov6PR2Pzh1P3kuHf+kfZi0pH9PI
4D3pQwea0s3FrVR9vIgcVXAIogMZ8lPqE1U/vUuSM82D6XCKt6lxL2UewsxA
I5QOE+f7eUiq/mzNYtZORtChhL5/7jlVn/6Dui29UXRQU5WqUKN8MeXt9sZY
OiQHXvh3iqrn9+PMgzcv0kGR75yEPlXve3IfXoPbdEgyXbbDmOoXobU/lU9n
0EFX+/YBZ6qfigiTey+z6XDS4CYngOq3OfEXD1cV0cHK27ErlkXi1GN1TSZV
dPiStcXOk+rfVRLCW4/W0uH9uZ7tQPV3f65dV2kDHRzFreuVZElsSL7rN2yl
g82JnvoKKRI3reXO6fXRYXs5e3cG9T45RCpF+w3SQW/X1UhbERLLh3oJ53yh
w9iR2X+DNBLvyxuQ1Zqg8suPDEWFSDwvMW6gwicCuslm9vMLBDbq4dstrS0C
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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`]], 
        Line[CompressedData["
1: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
+x/5zjCS
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]], 
        Line[CompressedData["
1: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
CUheNFR68QXBVabSxyQNJECnqcjpRBFbb+ncaFFzCeifUFCTyWP7caA2/z8P
CQjT0o6WTSXYWNZnw8qDEuB8lfI2SCa4Nz3ndeBhCSibMNF1eECwXvvytp/H
JOD2+kH/oASCa9aajA1fkADXnQ6/L11n8zfTUbProQSonBLyCTtHsG+SIv3+
kQSIJ0eePRRGcNeKZqruqQRYvxneaB/C9lNXh4HCIglI1F8qJ32G4AuZdlnR
1RJwfOYlL5MAguUsrJeZDErAIrVZNVluBM8PskCJWpKw40KASzx7fYyTo3Su
LZGEXEft0tblbH5TXs67pCcJ/pX532l9gvtrzIWOrZYEmTahF6FL2HzPWkes
LSXBpjdTZrY6wcufmWyc9pSEDMu4Jbbs9XrD8Gon13RJuCO2607nOwYbH7y+
Nj1LEnw6fDQNmhisN/hz6WiOJFTYr3kSWs/gWV8yqX+fS8LEI/s6mVcMHupR
eZ5XLQkPhxKN2wsZHNUmNEd6RBKsI37/crnJ4LfVVV1FelKQvWXHh35HBldZ
ar4WWyEF8x/XZQbZMRi/Ci2yNZSCgjWOybJWDE57aRT7ea0UcJsYadV1DD7B
z14nv0UKlm6w6Pyjx+A5RTFpB45Kgcyfh09uSjN4b8a2Q7xiKWhYfPXmuRd8
/OzIF0ubUikIkAltPFXIx9SaY5oRjBQs368T7Z3Lx5mv4zpHa6TApc4tzTiD
j0dH6+3q26Vgv9Fb94Q4Pg5F61dETEsBL9pr53YvPr7ftExgzFQaZCLwozo5
Pv40JRVT/0oa9Gbvzh2yLcdTZXTLi1pp+LtdwXpqYzmeFT5/XlaDNAQ0/zoj
aV6OHSSNsi+0SEMHh5NEry7HFVyvKtMv0lDs3bpoSrUcZ+i8EsqjZODPzuPH
x7+VYX+38CPx62VgqWft6Sz2/lms4q+DG5GBcAkN+kxuKZ72/mda7+0MOCxV
pSzjVIJtmA3zfQ7IQrXPkP/gzEJsO8fitelnWTAqrfOaCs7FxX3dw3mHZsLo
ti3Rhoey8ckvKtuVhmdCyDoj+7VySfjB9vE1SoFyMM/g5dpKgWg8j+PjI/xL
Dnbq7B+cfekIshLUST10RB5KdG/Y3Da/iXo9r9gd/yMPCyt+/cgPSUP1kpc2
+55QgL41HrLxrjlogYpmMSWiCOa95sXZt54hrVOSuioXFaHn34EjY9uKUJh8
5Ng8jhLU4A+im10wWj/78WJ+tBIIuLpKL4ktQ5uUX3uVXVWCoUhJx9ybZchm
zkg6jlMCD3YvufxeGXKeq61RHK8EG2Z1f9XOLkMH1NNU8u4pQe/7trjel2Xo
0qLEGak5SrCMFxUbMlGGGg2jvv/boAQ7KIeAXdvLkev2w3l2M7mwfXK2gbMc
H0WHpA2ay3OhIGoyK4HLR0xap6qhIhfsr1690cXuH7XGbK6o87jg7NpZso3d
X45f1vUYnccFYy85DQUjPorCP+hrOlwQurV1a8ZePipXCzjVYs2F2WHwxeUJ
H41ZZD2pteWCxb+BaEY+Hy306e0vs+fC90inTyVFfHSlaMuWDCcu5KQ8EJYm
fOTisHzJyZ1cMHJye+D3jo9Gw8c/Kvtwwaxvrsu2P3yk8eX42l1XuFD+2cks
FjFodvjZ8TNRXCC7fwhTZgySVY14eCeGC77JdnKBFgz6zzlWvvUaF8b+eimZ
sDGsqczu3pLAhWsNkfExbgzyS+sO3fiYC2KfrE+rhTHohcdmZnkjFxpnS90Z
LmfQU2GHY1uauPDOdN9gWgWD0hK2afu/Zedv1LzHtYpB0e88YnM+cKElorIu
v4FBe9eH7NXu5oJJPBye38kgCc18EbVRLpxULxHo+cMgp75566SVaCDLGtPG
lhCkN+2eLU7T8EQjCpXpEiRFP+QKzaIh3NU2NUKfoNINBgO/5tAQ1qf5WWQ1
QQuzNkR2LqBh10F/xTIzgn4f8Wt5akBD0oOlt9BWghov5Ztmr6Dhn+GjP/Nd
CMpMnnyYtoqGaJWzcotcCdr17tyZO2tomJzyui+4h6BXq2+pR6yjQa3I8D+f
gwTdFGS8t22hweujsbDtGYL8Z3HeOTjRcMvMOyTgLEFWy6zAeisNTYY7cWwI
QULu7+XMdtBgXXDyMP8cQV6VQ/mL3Wmw6N1579MVgowiFYUEA2iYcHeqn3eX
IKW0bV5/AmmYJbLh27cEgr6VJjSNHaOBR2+sKLpHUNKPf1IHTtHgLF0WY5LM
xsPReFNTGA0X44PuSWcS1K7scS01lgbdka7VqQUEOS4w6m27RsNusdnWVs8J
ql88U18unoblX2YzI0UElRsXNZy6Q8MhtzN1szFBabtmSNul0FAWvMdJgxCk
6tnjEpFGg8IS3703Ktj5+xZmFGfQsKHhfJ1wJUGXQ/ZYaD6ioXNCuaCiiiC/
pPzQyXwaqtUMmydfEzSYealR9zkN2SlDL1Y1ELQ3b7eqRzENAfiA0OFGgpwq
JHFDKQ2xJxziKpvYePTvnEh5RcPmRWKf/mkh6Nk3/Q1t1TTwDZdH6n4gaOl/
nBsz62iQ1Dkaq9dKkJpErsGpRhqoY6P357UTJK5N+dq20iCmUf0ys5Ogs/rt
+Fw7DddK3TSCPhE0YfREpvgjm0//hhbLLoKGNm/P1OihYfzDGuO6boL2Oer+
cemj4e5pMhLeQ9BHVzHL6H4a1OmVP5f3svXj8/jznyEaNvlS42F9BG08Fr5c
9ysNLXsEfql+Jog5uy1833caDJ5xLQpY50eLqDeM0fDU9GtPfT9BOjdbfMV+
07B6fOtS+y8EZdzPLjWcoOGIwKqaOta3nzq7pkzRcGM/nswZIEixeHFWqwAP
xP9VjeINEnSFEZqUFeaBcbh3wAnWVO07S3NRHuxqDM9sYh3cnBl/UpwH5T+s
DBYOsfNtD+5/zOHB38OPZgSw9u9zXNEnyYOvnZGGRayHRxadmy3DA/LxQ8EE
633jAs02sjwQVDgdsex/z+unm9XPyfHg7GL3VHfWW6mHfkUKrHtD6WjWjbJn
y74p8eD+VPWHPNabeFtkNXg8+G6mN/KGNVHV2ukymwe9l7PsBlkba01nRc3h
wd6C5RR7f48K9JomyVweVGRWyvzv/YGuYfrGP6o8+P/3C/8H0Xv6Gg==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Beta]", "mean"}, 
      AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, Epilog -> {
        Text[
         Style[
          Rational[1, 8]], {1.1707963267948966`, 0.8522374025897782}, 
         Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[
          Rational[1, 2]], {1.4707963267948965`, 0.7014979976940614}, 
         Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[1], {1.7707963267948965`, 0.41595317446024377`}, Background -> 
         Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]], 
        Text[
         Style[
          Rational[3, 2]], {2.0707963267948966`, 0.1503534157065272}, 
         Background -> Directive[{
            Opacity[0.8], 
            GrayLevel[1]}]]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{30, 6}, {3, 20}}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 2 Pi}, {-1, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {{0, Rational[1, 2] Pi, Pi, Rational[3, 2] Pi, 2 Pi}, 
        Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.32748177777777776`, 0.4504702222222222, 0.6309315555555556]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.782864, 0.5431475555555555, 0.12626755555555558`]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2865465555555555, 0.39416144444444445`, 0.5520651111111111]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.685006, 0.47525411111111104`, 0.11048411111111112`]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.24561133333333335`, 0.3378526666666667, 0.4731986666666667]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668]]}, {
        Row[{"mean ", 
          Style["x", Italic]}], 
        Row[{"mean ", 
          Style["y", Italic]}]}, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {0.65, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6627400531507053`*^9, {3.6627401892710657`*^9, 3.6627402334281178`*^9}, {
   3.662740264992367*^9, 3.66274038738064*^9}, 3.66295145447609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "8"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"Covxy", "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"0.1", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
          FractionBox[
           RowBox[{"i", "-", "1"}], 
           RowBox[{
            RowBox[{"Length", "[", "hv", "]"}], "+", "5"}]]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{"Covxy", "[", 
            RowBox[{"\[Beta]", ",", 
             RowBox[{
             "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "]"}]}], "}"}], "]"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.662734775662026*^9, 3.6627347820781603`*^9}, {
   3.662740112301833*^9, 3.6627401136719522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
oPn3t5ImkrT2/g/U1gah
     "]]}, 
   {RGBColor[0.4697671111111111, 0.41833244444444445`, 0.623423111111111], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVmHc81f8Xx7lGmfca9xrJSCEqJKHkvNsaZhGSZESykqyQVKIiJCVC9nY/
n3boXSKl8ZWMKNmyR0hG/D6/f3g8H5/7fp/3Oa9zznsoOHiZO9M4ODgqqD//
/8+F+T93a180OP383M3yvkMv5VnySrK3jkPrB+Y9z+0b8XRbrHFLvBf03P01
sG37Dtyx/X3Xk/gLcFz1ZQDvdnPceLa3KDv+Jpjd6DvmiRxw3Y1JkfvxaeA8
GdipYeCDjZKCqu7GlwIthzFvpB2Ob8i9vJ8Yj2HtPX3OXpF4PDjDu7T9bB0I
+cnw0DZm4CVFoyqdW3VgHR/OUDbPwOKmt6LWP6yDV63+jXo+GRjy5MSlJutA
dMtaQRUyAydY6a4d9/kCpdyOhKJmJjZ4fupQqk89nLm6ZBCsloXjgj7mzp1p
gN9nOq63MHJwTo6ox3hcAwQbOm4P3JCDy+utNvYRDcDqu9dEO5iD+1R7y79M
NID/N0fVrxE5eMv3f1/yzjTCW/G2nc7zObhnq/qC5Zkm0Fz8NKzdkYt1/8WZ
PvT+BgL/dRx6cycfbwl2u7M89ht8t+Vc2UXk463zO34eK/0GbW/idvZ/yMcG
s5Onl49+g3TXg7sLlvLxzmmLq8dOt8BJrZMnaScLsPGI1MtlJ1vhieLadyPr
C7Fz2wM126M/4AsRZC9QUIRP2gb5EEE/QIrH1OrXqyLs+t38Oe+9H/BI7sfL
3OYi7NbCtZf49gMSr/0Oa+Quxt6Nzg68lm1QFv0zuOtYMQ7+tDaJbfoTJBkc
taX8Jfj9T6tLNMUOaPPu4I0yLsWWH3WZnJs6YNMVMfppx1Lc81wyd2lXB0yu
4C5ZG1CKOW5/q1042QF+3Xnm+g9Kse4BK9GZgg64wXeHeDRRinOeHnkwtLET
7n98Qx/bzcabsnW0Bnd2gobm60AwYePKeInq/sOdcPauQ0iIFRv/9Gju7/Xr
hKptE8qVbmzMXH1Eo+NFJ8iscB9yj2Hjy7GWuGFHF4CJWhDUs7Fo6Gazr4e6
gJbE+96plY3TT7O6vzh1wbMd18X9u9i4fE8T738RXXCpTC/E4TcbTy5YGL+v
7YJ1jLDkQyIEdjhl0VZh3g3lbOcrdw4QeNxS26vcsRvaeNyiIs0JHLqLyVnm
2w2++jG0k9YEvifXuPpZYjdUXzHT7jtJ4C+Nh93J1m4YCLZ6PxdGYLTj8HyO
Qw+08/618iQI/JelonPJpwc87606XvmEwMTQvM/x8B44ke/8j7ucwKtuZw5K
ZPTA5mtJIxZvCczV/7slsrMH5q9uZii1Eri8/C3TeaIHvsSo7R/9SWDfuHtm
2zl74eEsnsrqJnDPlh3vZ+V7wfmKWVTbMIHfRsc9c7PvhRO++RvPL1Lrd3Ce
2uPdCzrj5NknNBLr6OhpKIb1wuexjbQOXhLndXTkfk/rhdzqAzP/hEl8TUvj
zsF26rtb9lcnWRLvWM79VWWsF3xoJSKiq0g8/6NZmGepF85JHAstXkNi94gL
ERWyfaBYE99Yso7ERi2fz22w64PQGE+Z73ok5i3JIPg9+6BgYIf3rD6JX4b7
jfSF9IGpsvE3HkTiDetkndPu98FsrFxL/24SMy54HGa09UGnzxrjZlMSvzu0
PXZ4uA+yuYsnnQ+R+KIK8+O7hT5oqnG402VB4t9fyndelPkFoyZZ/2XbkLhh
taDW76O/QG6f15tDjiS+Mdvu+fn0L/gc9EPK3JnEuz8/LCg4/wtQ2HdbAxcS
P/E/usox+RdkLYg86HAjsedBdTso/AVRtk9TE91JrKTAdW9F2S+47Vx7cYsn
ie/UFog0tP4C5q9vEwfOkNg0LdSIPfgLhu/UnX/uQ+LlvuZRN+Z+Qbbzhl5x
XxK/MlSqduXvB8+JlHV250gcsHKOY7d0P+QUfzO97Udijd+f9BVU+2F1e6np
C38SD7x9EPBPrx8cUmlqnwJIbOO9b/yxdT88Np1yKw8isfxkrHSfWz9MOVp5
FZwnce+5b7tYwf2wyQ/kLgWTuOCvnNee6H5Q8y8N3BNCYu/zLkl+qf2wa/pt
yBTFmxdL3uSU9kOabIVqdCilZ9ifkaZX/TD3uvMC4wK1Xi4DyWX1/RBmcj84
lOKIiCs7dLr7wbfFW76Z4oN8n9xdpvqhWvyPm3QYiUVuiN+5wzMA4dbtRw0p
bhK2fV3DGgDdzJnf9hSnxGUOzSgPgFrcKg0nih3Eh5gqegMQcNJWzJxilTsb
kdX+AZDmf5GiSvGoVJBb5NEBqOc99XGEsvcw5XXCM/cBGL9WmpFMcYAcH+4P
GYBlrsNymyg2yDAdkLw5AIGid3Y9pfzhXnNXbF/6AEylg8gaimtz27cFEgNQ
/SEmIoTyP1ZV2TW/krI3vDv7FRUvi2LP+JavA6A4b+A5SsVTWuNJOV/vADDj
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
Af9c9Yc=
     "]]}, 
   {RGBColor[0.4110462222222222, 0.36604088888888886`, 0.5454952222222222], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/pM44rYLtmikHZlVlkNckaL//39X63/lkSEw
     "]]}, 
   {RGBColor[0.3523253333333333, 0.3137493333333333, 0.46756733333333333`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"covariance\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    RGBColor[0.368417, 0.506779, 0.709798], 
    PointBox[
     NCache[{
      Rational[1, 4] Pi, Rational[5, 256] Rational[15, 2]^Rational[1, 2]/(
       Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
         Rational[7, 8]])}, {0.7853981633974483, 0.6542702931464649}]], 
    RGBColor[0.528488, 0.470624, 0.701351], 
    PointBox[
     NCache[{
      Rational[1, 4] Pi, 
       Rational[1, 2] (
        Rational[-1, 48] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]])^(-1) (12 ArcCos[
             Rational[7, 8]] - 8 Sin[2 ArcCos[
              Rational[7, 8]]] + Sin[4 ArcCos[
              Rational[7, 8]]]) + 
        Rational[1, 144] (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
             Rational[7, 8]])^(-2) (Rational[-3375, 4096] + 
          9 (Rational[-7, 64] 15^Rational[1, 2] + ArcCos[
              Rational[7, 8]]) (4 ArcCos[
               Rational[7, 8]] + Sin[4 ArcSin[
                Rational[7, 8]]])))}, {
      0.7853981633974483, -0.023260525607782565`}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{30, 6}, {3, 20}},
  ImageSize->220,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.662733259495392*^9, 3.662733301027742*^9, {3.662733347120714*^9, 
   3.662733361847672*^9}, {3.662733417471547*^9, 3.662733421643958*^9}, 
   3.662733521957333*^9, 3.662951457361637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.25", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Covxy", "[", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{
         "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<covariance\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "hv"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "hv"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"0.1", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", 
      RowBox[{"ControlActive", "[", 
       RowBox[{"9", ",", "Automatic"}], "]"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"\[Beta]", ",", "x"}], "}"}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
           "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"\[Beta]", ",", 
             RowBox[{"Covxy", "[", 
              RowBox[{"\[Beta]", ",", 
               RowBox[{
               "hv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               "]"}]}], "}"}], "]"}]}], "}"}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Varx", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "\[Beta]"}], "=", 
     RowBox[{
      RowBox[{"1", " ", "&"}], " ", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734763726993*^9, 
   3.6627347726223*^9}, {3.662740096621563*^9, 3.662740105088088*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
9t7LXkofCbx7lVljT6UEmrn2M/l9GYEDbzD/c6uTQL/qnapzvhFYVWsf62Wj
BCrnZ2Ox7wT+1DTaMfGH1MuttGNfHYH5t+1w9uuWQOmPVT76/CYwp7c/HfdL
ILq/rY9LM4F3Pg0fpoxIIDdlJ5vdbQTZz3devjctgU5uUvfP7CYw34ug65HC
NCR7PU/78Cg53n5DcYM4DV19qV0fMEaOF2/kU5CmoZd3Mh5HTJDjnTXus5fS
kNslt3XuMwReLV/7pUuRhmqlrST0ZwlcUupHW7uKhvIdrk93zRGYqvI1/IUG
DZ1pUmqdWSQw67tX/ZgWDf20l/99nJeLjQNWLNXbSEPK+scbkilc3KZddsxX
n4asb12ub6RycUCze0KBAQ31F1B/jPFxsXKwfBuPEQ3ZVXyu+v97aLFB8eqd
u2jIYzSlvFGAix37nc/c3UdDme1RhcmCXEyJWZJaYUpDp3LTnh8X4mLW3vwB
cUsaej8tGz1DsvHUSS0LGxrKeahxzU+YtE+Ie4Tb0dC3bxZ2XSQHWOW8qren
ITKvtPVESPvU/6aWOtGQWrfUgivJxVmCW+3P0FDYI8mSR/9//3R44Zd4nobU
g/pvPiGZl3YEd7jRENMiTu8GycwCXor6ZRqyrNHvPEQycknded6bhpY5jN2X
ILll6aG7z/1oSKtw6ZoXpP0b5bPlozdo6Pnype/1SVby5ohtukNDW+V8zJP/
/56ramrmfY+GrN79alwg1+vwYyI07xENJV2iOBiQzHM7vnYhlPRXpaLFgdSH
qbNH1jiShlbSNe1dSP1Q6/CROzE0JDG2vcH+/++hj5/GlcWT8f2x4ZA+qf8N
Q6NmUTYNHdO3qZwm46U02LvSLImG6HP0fUwe0n5s2MmwNBo64TRdup6ML89M
e6/cKxoaFa76wUPGn5n0UPPYWxpam3bi7M5/BEY2m9wS8kk9Mw/yu00T+EZ2
4LjKRxqi3kk77TNOYCVHLb1z5TQUejVG68hfAr+X/OmTXklDtsvbRZVGCLx4
Yc2iTh0NXZN/I+TUT2Bnhln6ukYaOnckuVSkl8C1hZePqP+hoQyp/Pq4LgKn
0t5nK3TR0D7zhfHrrQS2yrI5KzRJQ2YOgS7G5P4pPOJHp/6joc2XH80ZkPtr
DYVVPD9PQ0TX/rGVVQS+nuIVPEORRLIX9q1MKyfH/yvqGRKRRD/3cxpz8wh8
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
V8oj/Udpob6v9xj+Dxfq+I8=
     "]]}, 
   {RGBColor[1., 0.733528, 0.10356295000000001`], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
8U0=
     "]]}, 
   {RGBColor[1., 0.646929, 0.0801709], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVmHk4lG8Xxxkk64xlxpKEFKWQKEqdOxSFSEhS+SkUQmQJlcraIiFaZKns
u5nnSYU7IlKpRGmxZMu+lJAs7/P+M3N9rplzzn3O+d6ropOXlTONi4urgvr4
/zcPFmzs1rm4HV91k1PWtKtUYCmslo8/Ctt2BfiwNDfhP22xe7/EecFl+4s7
v2nswp07XnWRcRfgvppyd5KGLW7x7c3PiLsBpfVdvB3qLvj9td9i9+NS4XD1
cu7V6/yx+Z2gmttxRbDLwE/qoGIEvrai8n5iHIbvdT/DLaZu4cHpJYs7fN/D
h4yYAweWZ+LFleY1m+Pfw0Gl80MnjDKxpGV89Hr2eyirQruPu2diyF4hKfP7
PbiNvn4p9SQTJ9jprhn3+QDGNs9iTu3PwtufnNyf4tMEAZp7X5RezsY3g95k
zZ5uhvbao+rJH3JxZqb4qfGbzbDGX9H9/p9cXN5kp9VX0gya+RdfXJbJw31r
e8s/TDTDlOC/zYuOeXjLt/kP2adb4M/St6YFo3m4Z6vGnO3pT5BwVe1gHW8B
1p2/acn2boXaeaEi2rIivCXELWlpbCvsejP/pmpLEd76z6D9cFErXJ0b/+tk
X4S3//3tvnS0FZbF5/Gb3inChn9sIg+7f4GHq7ZafxYsxntHZCr5Xb6CoFwT
v01YMXZuS1dzOPQdWJWzItbuJdjFIcinJOg72IW7m+qeLcEnvlk9WXL3OzBU
V9cLRZZgty88xiWt36F65eU9oQ9KsHeLs9MS2zZwGMvjSWktwSFv19wptmyH
voZqnvQdpfhVu91l2spOaNnhcdlzCRvbvtFlcmt3wqfBt6YrJNi454l01qJR
J0w82nLj6Qo25rrV2jDn0glzK9z2Fuuysa6pnfh0bidonR9YlXSSjTMfH0gf
0voBWy2dTHbVsbF2xuaNg4Y/4NzFs2a3m9i4Ok6qtt/6B7jfu/37Yxsbt5/6
3N/r/wN+ch2Y4Z9kY6byAc3Opz/gat+WC/+t4OCwWFvcbNAFIx7RE+9Oc7D4
+U37Pu7vArxV5hQZzMFp7qzuD8e7IFSh7014OAeX7/q05F1EF6TbCIt03Obg
33M2e181dIHesJRjUCUHO520aauw6oZtqb/UTPkIPG6r41V+rBu25j6efCpC
4PNGTO5nZ7rhUeDCnDiLwHdXtCiXJXZTegjPDF5N4A8t1h6lX7vhQXeog/ou
AiMD63+ZTj1gKaqSIXaRwDMs1c2XfXpAKqY66GokgUuG/vkcvdQDLnk5quPX
Cax06+Gg1IMe+FOwd/LsXQLz9P/6EvWjB9IV1NNiSglcXv6S6TzRA3cvvLt2
pIzAZ27e3beDuxcKq6sVZSoJ3LPF4NVfhV4QfaChvvcVgV9ev1nm5tgLw7uL
dR+3U+N3cp7c5d0LVY++NX7rJvDmzXqaK0N7wWTL/a7BfgJnd3ZmfUvthVAa
y6v+F4GvbNRMMuvohUjtnluhfCQ2WMr7UXWsF+YqNsbNCJD43/fPonyLvdDk
mtlnL0pij4gLERXyfSCj8i6inUVi8y+NfupH+sBHvFHzx2oSLyl8UCLo2Qdw
eUdQ3loSV17yH+k71werysl/R9VJrL5O3jn1fh9496jdjtQhMePCKWtGWx80
Eomf3huQuH7/jtjh4T64b9V6fngniS+qMt/Uz/UBh8/a6JcJiX99KDe8KPcT
pMfWLyvfS+JmZeGNvw79hAi5G7kmB0l87W+HZ6P7T/iD1Ec5h0i8s5Gdmxv8
E8x40/SEjpCYDDikdOzeT/jn9aPdz4nEnmYaRyDvJ2yVs9e+cpzEqxV57i57
9hP8fKejolxInNSQK9b89SfYjXeoGLqR2DL1vHnx4E/IZVz0XHQn8dIzVtHX
Zn9Cb/Ov/IxTJH5usrr2hGA/gG3iDx0vEgcun+XaKdtP6bFLsNibxJq/3uor
ru0HlW3HVCR9SDzwMj1wXq8fEhSf6Tj5ktjee/c4cbAf9t/sUSr3I7HC71jZ
Prd+GA+X8WjzJ3GvX6sRK6Qf9CLT63sCSJw7s8Jr1/V++JhltrkpkMTewa53
/FP6Iadv6eOMsyTetFD4IrOoHzQ0u3YdDaL6GTo18ul5P1w4SutboPg5z3Zp
/qZ+MIGS+LBgEkdEhBts7qbsr1hbjFNsJvDWw3WyH3pHvKQNQkgsdk0yKYlv
APqWZIyepfiTqENVHWsAnjqzPyRRnHzz4dC0ygB8vBZYdY9iJ8khpqreAGhO
jFWEU6yapIXs9gyAy6xWnQ3FozJBblGHBig9nm0TopidXJVQ5jEAz22kuLOp
+IErBHD/uQHQ17qotZbi7Q8sB6RvDIBdnbFPHDV+3lW3JXanDYCijmxVJ5Vv
Q1bHtrMlA3Dxau0KJsWxa1VO5FQPgM0r7RsaVH1sCjzjvnyk7L95MzSp+slq
kuUCvQMwczftEYuqb2fpfJ/e1AD8e7PUvPsMiTN1doq58Q+ChIKwUCLVH/ey
a1vvSg/CJjW1TnWqf5pbm50b1gzCuDtvYwHV36mKZbGzWwYh0Mj6kzjV/3J0
7Olas0F4+ndy9jClj4svcnvsDw/ChpL2bTco/Qi/0tN7dmEQbonxqDxyJXGT
6cVjQ7GDwNr/4kOkM6W/xvrryx4MwpPqzw/3HSOxUvOBruCaQZC8almfROm5
3zZVOL9lEMxk1yhIOpC44Evfpu99g+C4fXuuPzUfdDv8ruoLDMEvu73/je4n
8cJ/FYSH7BCo47wEnn0kftHD25msNgROcYL8i+Yk3jsYrz1vPgQFrq1ktjGJ
nf+UtFXEDcEJIiKvTo/EawP/8o8+HIJb2ya20zeReHwWackTQ1DjHKi5TYvE
IVzvI85/HgLmbDKYUfM/TmhUA+SGoU5tJnazDIntYnTsvdYPA8d3Q1KpJImX
i50LS90+DBnR/EqSDBJns4S/LDoOQ0jn369XllDrh+LaS88zhuFHzGl/Y2q9
mn275VQaOQxeyi93MkYIrBNkahdaNwx3ft0sef6TwPlNHupoYBgigk39W78T
+N7loq943QiEHrBz7KklcGCv9kbMHgFbzxkv33gCc27ulE+tGYHzas+WPLlG
7QfbbAUutIzA2rvyGX3hBHZNDOjYPj0CV6z1pWYDCGxr/PRq5ZZRwNKf8miH
CLwxB3oqqkbBYufF2nQ5AnvaWL673zQKfqE/UtwlCZzL/d/Tc92joEpn88kL
U+u//aXYbXxjwHubSNP/x8EMoVr9CpMxSPHWZTq1cvCox55b5e/GIJvGumUb
w8HWt9c+bPMch9DBNpbmABvzd+WfKvcfh8lf/ZHt7Wz8VE1D9975cZBbKKs4
28zGCnjjW7uYcYgJmE71x2w80qs//bFgHK4Fqxy+msDGERstTBuGx2HJmej+
NVvZuKzR9zfpNgFWLp6eUUGl2F16quKWzwSkcrcc6DlViuWdAqPOBE3Acy05
d/X/SnHYn5DlWlcmwP16HLpuXIr3yUUYF+RMgP6KNzwBEqV48OTtew/7J6Bo
Y8nSJdkleBlfhWGsyy8wla8+5llTjJtXneWT8foFSnY8XSc4xThml05desAv
WPkr/7Dlo2JMiyrYw476BSduxif2XS7G/YIp+z7l/gLL9lZJLYNiTDIuHJUb
+wXt/rZn8vyLqPg7grMDfoPB2wq9IlSAIzfWlj6PmgTOWtLuqm823mm8xzEz
YgrezI1LcL1OxrXRk6vDgmagOfP3GsVj5/DgdcnyjtuzUDC2/3PM0Vj4L6Dk
xnjcHJh/fG6jUvUARKv1Gi7dm4OZ9hRW//ADeCpczct8NAc8L/nl46UfgviD
prN6xBxM1YnpZnk9hJo3v49d+kzZ5zxZWS33CFSVNulKys2DWtytsCSfDBh7
87Rzc8Y8IO7AE+5C2ZAsZbisoWAennff72JqZ4OJ02sbB3IePpftSXjkkA1p
098aQuvm4cZ2hZ5TBdlgpTTPeTUwD3HLl6/OM88BMgCiD6kvwAPDNKXsqFw4
p1Sz4cLjBWiTEj7n8zMferhLzAbwAoCVq2CaUAGY/bjvur9+AdYFl/kVaBSA
bFrAfZUvC/Dfjk+7XAMKoGy5msD72QVI0BW5YMVXCJPScZ0K2xfBKuf4il7Z
IvCgO96orlmEZSFudTO3iqF51Cx33dtFGHfr1ejPKIatjXq1iS2LUFrosb6W
KAbB6xL/3PoW4fWvi+nGLcVgHX6MLcDLhXYvPx3pIVECv2hSK0pXcaGvLk2H
VK6VgPrCuSnaSS5UOTorNOpZCvmupz3HPLgQ51KdWWRwKah9ON73zZsLjdk0
14hGlYLqI9NPnEAupFUfsbY/rRQU98iQLlFcaDZh9vyLD6Ugmcjxa8jiQuSf
47LimmyIW8waIfO40K3Iw3ujt7JB7OQ954dFXOhAcgvX6C42iOpfsgl5zIU2
bAghLhxmA3+XhY56HRf6vCCh8SKaDbPrhyZv9nGhPxck11a1syEwqd3j/CAX
qopq3C00wIZprqYet1EutM5dcofBbzZMfixrNpziQj43+W7483Ng5GwE5w8f
N9JL/3RnWp0DnbWKZw6u4kYRldIb9wdxoO6w3W+F49yI9/v6WC0aAfWl/S5O
J7hRaHNWfKEgAQ38Z78+9OBGAezWWnEJAhpL7lSt9uNGrPfBsfErCWjm+3Zj
XQQ3unY76JmfIQFdBYfX6WZzoxLDZVmc8wT00EZTz+ZT9kKxh4vCCeg9cF7i
WTE3ejYb+vjmNQL6uVNntz3hRsdv1m0SuUvAmE1nvWEDN1p/OvxGO5uAuXkn
Z4thbrT3feXJni4CFqx+t8aOc6OkuEsjNv0ELGZdNmua5EZejtIZhSME0Kwe
bbSZ50Y75NKTmDMECGT2ch8SpSGtppSfZUIkCP7z80sWpyG5I5kuxxgkCFsu
GWhj0dDT72uGJyVJYMyufu+4goZsX4pNvVlOAmvviRQXTRoS8I0LtlQnQfrh
jFi2Ng1FzXc+1NIiQXYmKnxAl4b++brk/9MhYfmDHA+PHTSkp0Q3N9hGgvy0
XmfBThoypE19x4gEBbOG/WO7aUhE9Z6+shEJylODW3ysaCiZ+eNQ+h4SVpsG
F7JtaUg8eY3kU3MSVNKElP7Y09D8yIXrTyxJWLtnnUDgMRrald9BeNiSsCHl
1OdzZ2gIhZ0Of+hIwsJwEOEfSEO8xlr/vXYioWFrVLxXCA1dEylb03acBKcv
Dyz+C6MhN3IhsPIECeqqxevto2ioT2L433U3Ev75Vwjtv0ZDm72mjxl7kJAg
2VpnlEBDke+Lvwd4keB4rDdj220aItl6g6PeJKwr/XV5UzINaVolfrLwIWGG
i8tJI42GJjPc0u76klBrIYJUH9HQ9xDvXe/OkBCXIiuvmE1DPWcD6kb8SDgy
ojInk09D+1jOSlP+VH76Ol/Fi2mo9oG2bX8ACVNXDMqEODRkbDL9X00gCdVf
LBJ5y2honUCz0ZWzJMSoHj4z/4yGhqr4F/SCSLAPcLOawjTUvqb32keKVV4G
aI69oKHRj83jtsEkTEqGi/bX0dAaDZs1NRQ/PxY33Pmaql/krM6yEBKulaY2
fHlHQ+O8XiwHiu24C7KbPtKQQ6FPQwTFypZPI15/piET12/7qPMmjKfUHa/5
RkMwkZB/h+LykWaDig4aKh5K+3qR4mj9LgWym6rvR9b3/RTbXh1bKPz5f//K
JXSKlb7Ofc8aoqGgx0L2BDWeUVXBZ2ljlL64VT4bUfw0QOrOnd80JPOpR7WS
yifipXJA3DQNYd4GC0WKrZhaNlf/0ZCi3mkzT6oe8sdhY9giDVnPXlmRQdVr
qNRM7BwPD9LPbXtVS9WzjNt+zI+fB+GwnWbvqXqHWbq+9RTiQWMpnKwaqh9y
oxejHSV40Dv59hE3qn/9+jdcD0rxoILuga9yVH+Jq8k7rZbxINNHqRllVP/3
rnnMbbSSBynP3PtScIqaD4E1HfoqPOi/yK6d/JR++l5+qNBR40Fn+D/e2kPp
68Lx4bMqG3mQDSf9Z4wLCWbsvwcUNvOg7D3qIzcofUrT+DfJbOVB2ulVbUGU
fotTFX8JGvIgcsokSvQICSGj6u95jHnQvbg7ux4fImH3Nv3CuT08aJdy7szu
gyR0fbV1G7XiQegee8d6axIK1xw3+WnLg2SEH7ed20dCUODp1Z32PKgx7EZA
2V4SJFjXuj448aDdPi+KhkxIMNpXZU/48CDBDEbYHn1K/1fdtXkCeJAewwAe
6JLQXcsU3RfMgzIf/4NObRIubXGrGr7Mg7LeX1tJX09C1UoJVeVbPGii1HRS
V45aT45UcPvc4UGBrRIOL6So+XPb9Ru+z4Nct/pqaEuQwCVSHnMokwed7dBS
fyVAwvap43/iHvMghwuvV1f9ISBGk/6u8xkPWjISH35hnIA2tyfZ6s95UFj/
yXPKQwSEdIg4NNTzINu7a/YpdRLwrJ6s5v7Kg+L0P2wbrSdA997SWO85HpRz
8LrW21sERLWUnqzk4kU58Qf3zMQQ8Jl+2FCYjxfZqKzwEIwiwD+sZCpLhBfV
3GwY6T5LAHHK/nCHPC/K3XHkg4cDAVoof+3eHbzoYHck0SZHwKUgW97knbyo
bibM85wkAR84XO0Du3mR7twezCtMgPcam5vhVrxIvivaomGWA4XiC9Plx3iR
IDgbaX3mgFqvRa1aBC9KOcLMPn+VA60n191wvsKLrCpLZhsuciBidOnB1Bhe
FKlm5MYVSO1f01XD4km8qPy87JvVxzmQIKgtOZvFi4Z3vGpy2sqBOQ3pY/Wv
eJHZBmHuB71saAzq5HIW4UMhRfOZcWvYELxY3pAixoc8bu3Nk1nOBtWwOwmt
TD50rSvP/iqDDZeuW6mayfMh18biX+rTpbA5rcZiowYfWruUlRj4ohTSarNT
uPfxobE3IyeU7ErBh3FaPyWBD0lXlIxt8SmBwZgG7xu3+dCmR7KTm46XgJOI
ckZoMh+qc10qqWRbAvsEP4sce8SHfhfottXqlYAm77YOFQ4fUnPol9rJVQKj
00svlXzkQ0S+bbD6lWJw60irqxFfglpcFvRXKRfBscL3VkOxS1BpzV3ehcFc
OCJdd2nDrSUoq2P1Fq+aXLC/VFEacGcJ0lhW1lF1PxcsbXPFeR8sQTMOJWrC
lrmgv3C5SY69BPX/Xniox84Byb2brfa2LEFM/pWnVpzJhpqR+/tKZPjRkkLf
hgM/MmD1enfLgAf8qPZO98UB3zSIlzcaaUtfipKKm29V+0SAY1ZRIkoWQA/8
9jG6ToVjLjFbla48QfRB4eTho51p+PQjpnRrkSBK3cIrkyKQjrs2tyxtZAui
g19NFN5opeOaI9aDT54Joq64o95/wtJxdL5Vwc3Xguh08dHiQNUHWNzEYuOO
IUFU2DnKkfd4iJUvmEDaWiHU7Npe0tyTgXePbDlwJEcI8edsEI+Oz8XbPZIM
cwqE0PgNYZOTT3Ox1tBvjckSIWRcnUSs/ZGLZQfyl155KoReaR0Mt1TPw8M9
8k+J10LoiGKS/Mq6PBz7nbZcZFQIpeVr9Ff8ysefXjd0PdMSRjJ6JyVTNYtw
wx6Vd0s2CyPXK8wEq/1FGL+6/GzfVmG01ZmHq8uvCGfX6Sf8NBRGd9OS5uOf
FuGgF4U7JWyE0fia8hUKisV4+bO4bLcAYfSyRGLSNKMYH8+195QpF0YbmE/C
5VNLMOk7sMfyuTA66Xn75JuCErx0W6BKZI0wUnGtKHApL8H57251Tr4RRupt
UizHLyV4cvK91fs2YSTLvJ15XLwUXwbjzZGLwiiFXiaUFVqKHzRv5PpjIIJC
7tkVZpmz8eT96u9qxiLIpEO658VBNt7luu+Jk6kIehcmltrgzMaDfz193u8X
QflCR7ySzrGx1orcnrzjIminWajA+nw2rj6p8MopQgQlzS7+1ufj4B8LwnHv
X4kgpfuRKvcyOXihSvpL5VsRRIQnL1gUcbBsuLJCwQcR1MYr/X38MXW/FNIv
jP4ignxauKOn6jn4pZR7g8GACNr+jfmSMcjBuZqvaMRSUXQt90n/WVUCv/zd
vPuhsCjave3jiSENAneTnbE3GaKIt17R12QzgeW2zch7Souiw8pcgrU7CXxj
t8pWFVVRpLEYeb7uPwKfcQr3vWMsiiakt5YO3SJw7KqbTyNNRZHjrvd54skE
LuhP5va3oOLtXFOn/IDAfZ6cG1YHRBHRUGcqWEhgu+DuPCFXUeTtFD3ypYby
t33s1183UdTz8JLNwQYC3+T+p9fvKYryEm6UvnhH4IZI8foaf1GkwBbZfPAr
gbcl7Og5FyGK9Cw0vkeMEtj+gLmaxxVR5Gv35sjh3wT2lz3oYx8jikQO/iiU
nyFwcZo31+ZEURSdsCbjP24SKxWkyo1nUPbn8jz7xUm83TvvWHuOKKq4N9Ep
KUXiQxsf574poPL7vWFBbRmJE5406uYQouib9sAa2ZUkXvJy3tqpVhQd887/
/mcDiTPPZCZlvBJFxiP+gtU6JN610uJr/1tRFP5WePGMHokjQtOOen0SRQ/T
BtRuIBKv1tj9oPSrKComVjhMGZL4ZdtEz592UXQ7eNHAyJjEfFsN3UJ+iiKz
lZ9WJZiT+NHAUD4eEkWZ3emyiZYkNrqdMEYbF0VKslWPz+8nqft875noGVG0
WamzjecgiXmLoy4kCtDR7Yt6YW1OlP2RDdVfROiI29fbWdKZshf5yrtcnI4K
KzifN7hS9m5qVx7K0lF7ap+zgjuJlWWa3/TJ05G+1OFzEx4krqkLoa9dSUfp
+b/kcjxJzLOqMaFYjY5GBV4Pvz5N4gcf/T//1qCjAcnzMpt9SWxwaYXsZm06
UqrXrIs6Q+IuzXqHIF066n50bPK5H4kvdXinVujTUaUSJ7XDn+pHjEwX1w46
Uin5Xvf/99Bq/Wplo53UeMo47u8DSew05OYauZuODO9rXnlwlsS0uxK5DeZ0
FFHxn9KhICq+SfmwiBUdEX7+G2cpNpg+rrHPlo7yVzwtvxBMxc8Q8Umwp/xJ
3KoYoviSNcn5fISOluRe09keQsXnOTote4yOSvQMlQMori7h33LElY4yZAOj
E////ulYHJLuTkeaGfzOyRRz0w/iHi86MtMaIqMoTqvgpqmeoaOcZXoXDlGM
PHKN3APpKPaZcqUkxZ2y+yMLQyj/Hgu+HCp+6Kt/ryZC6ag8emP6FooVAh8J
64TT0YTH3l1Z/3/PXW1uERhNR35eU8dmqXwdW/7cfHadGk//2OxGirnCUpoX
btLRmvVywtZUfdK0jKUMEuno7/Wzt+2p+qEfYwfD79KR3oGV6cb/fw+9cTu5
PoWOeN7tU1lG1T90+44OoYd09Gej/boWql8KIwOKFll0xHlWWOLnQ8W/F3c8
Lo/K72Z72Zw3Fe9v94A0h45s4+7vrzxFxcu6ts6hjI60G78NzlB6QbY6Xqnl
dHTrzH4hWTfKPzticlUtHYmYXx2nu1D+nTQ2n3xFRy/7fzzpOUb5Z7SezX9L
R4yKFGbafyRePLVmUesTnTovEzENDiR2Y1nkr/9KRzfHFda52JO4ufLMQdV2
OlqwCs0dOkDiXPpz9vI+Oorp4LLmWJHYusT2xNIpOrrCL/NIn5o/lQdDmDyz
dESG3ItTMSLxGtqD6vl5Oqq6ygyco+bfhRz/mL80BnJYclP7+BbKfraqf1SQ
gS4ovH2vto7E0Y3WMCzMQBl29z66qFL+Hvy8NSDKQIu6rf1XlSl/piKGPeIM
tGA/dTBBjsQL9+zuf5FlIOuY4ZcpQiTO3ja2r2YtA82dmoy/30vgNrFL2VXr
GChFqIkM7iSweJ/kYqU6A2UH7tlo9I3A52K25D/RYqDIxjrzhPcEtuoIX1K0
hYF2271M2fCUwHOhcs/u7GGgI7+tM5yjCbzBpkgsyYyBjrMl5oYuEdhljcGJ
hL0M5BbLK3A4hMAfPrgyb1gx0N33kUcXPQmcqcT2CrNnIK2Mf0927iewZc1u
ZS83BiqmX0IdUgTmVPzxcfJgIF40WbyVQWDpx+lVNp4MpDOkIxO2lMCdOX+P
6PswUIdi4mjrDAd738i5IxDEQHf6ps7Ht3JwrL0A/VE0A8VADt/+BA5+P17/
tzWbgV4jtXmdeTbWHjxj8iaXgXCEtbDibza+3a2QhPMZqH3ytNLffjZ2/BSo
nVnMQAWcbVe8m9l4/Jmql28ZA0XITNmfy2VjRmRUj0g9A9074NYktZ+N9y03
eWfwk4FiNQ0M7iaWYv9r1fccBxjoP+nBj2rRpTj5n/6J80MMpKw+/zA7uBT3
f9nA/XSMgZYZ0/SPO5bi84nLNm6YYaAbAj0zPaqlOJ8+lrhCQAxdaqc5yJIl
eAkt8cjcWjH0oOuVeF1VMS7v6x4hPMVQyOXWFJpRAa5rSvYq8hZDlw+8XL1N
qQA3VdpMZPuIocBkH5NDXAW4P7Fu8p6/GFrkgTaD8nwsaZz37+J5McQFG8er
tfKxR5aPwN4YMcTrf0vzkWweljvBvaqvQAy1xZsqf/+UjYMH5B1YI2Loq3Z4
xezSR/ihw/Q2lr846grVWrPP/iZWEPDy4pkSRyd8LudrC5yBvdyaWZ6+Eqh0
dYFAxsO70HsyxursPwkUW3NnxxvFbPBwDNLym5dASujUeWfjbJi0dRE/vSiB
LCxTPvd5ZAOv0famEzySSL4j3jT9cTYoyY/usxOSRH+fHNo0YZoDjk3m+zYv
k0QlA0dM27xy4esWEcs/WySRCtdn3ZGH+eC04a/GhL4kenNa+qjRy3wYVOml
j2yXRJrh+3Qu9OfDX8mKdz0GkmjFOxH31HUFID3mYdG8RxKdVrm2P4JdADYP
3+xl20uiZ4YrdT48K4T3QtfMTwdJooxD2YwK+2KQCdyVlxQiibRMxZP2uBeD
Uw+XQOV5SbTSOUe5NrgY/pT71QhelkQLRqYCF5OLQdbz6NZHVyVRy8rsfrG2
YnB+r7Xmc7Ikil8X/DrSvgRmE77wbsNUPkISmsa7SsGIO8HpWJUkOjn695SV
dSlcP7X3efQLKh/1+XMmTqWgsOtF8Kc6SXTYZPDj5LlS2Dmd/8vrvSSyHX52
x4xTCrEHQzsf/JBE3SZ5E4NybFglr1K+lJeJRjb8UQ5uY0NK0azYqiVMZGl+
/ltMPxtYOxpddyxlohSDaudrv9mw5LifRJAwE13Svl9jJMCBvpwXbkOSTNTm
OG+fs5EDmTqOMo2rmChnwvDx5jAOyNdt9BpUYaL5VytWdl/nQKIdf+2StUwk
vRifG5BE3e+CC71BnYmKGCU/DuVywLVqrq54ExOtf2r8hv6OA6rmd/zjjZko
UzzjhRx1v0xr93hTtJuJ5AVaFGyo+6e0N1J6Y8pE2mHTs37KBCyN//mW15KJ
nkvPcJ/WJqC/VWeVvx0TZcx3HTPdT0DO8aaPdieZSML+LfPKNQKUpjLW+LlT
v4t7b9sVT8DdyLMXbp5iosaKa4cH7xBwJVdBreE0ExUWlZ0czCTAbdzz0tYg
JkpKtx+oxwSsDRHaIH+VibI+Lbv7d5i6X19Zrs+6zkStxxVEvkwQ0Htbw1j0
BhMtVYzZ+nCKGj+x//BCHBN17VUtm14kgDl2L7r9LhMd+XmanSZGgs98QcKn
ZCo/hT1hLUyS0tfz1MYUJrJQzxuZlCHhimoPUfmAiYplFYN+K5LA5bSuKyWX
iUweS9PHNEk44r19JDGfiR5zd+sGapPw7LzlTEwhE82ahbcNbSbB/94Z0Qul
TGSozXclbjsJzTkRMgEcJnqb6X21dgcJG8puK3uRTOT99t1slxEJw83lW44+
ZaJ/L9yk2vaQsKe7ceeBciZqz/pW+cSchKyJTkuLSibyPZVbH2pJgpMonytU
U/pZWTrz1oaEz8bm8SsamEhwlXbY8aMkaNseTZF6w0Qf3V9Px/9HQtzx0zn0
RiZ6In35acExEswu3sKLH5gobMZwVZorCbk3shqmPzKR6uDZV4EnSeBPedIy
1sJEwi/WEFvdSah+2jbU8YWJGGq6DqGeJCi8Gpv6/I2J2J3ukjRvEs595qa9
b2OikrcvRDxPk/C1V0KkvoOJDml17KrxIUF3cpX08x9MFHHMp5L3DAmJNN2V
Zd1MVPd6l6+GHwm/GXvUi3spfQxvOW7kT4LlCge97J+Uv6MGsYYBJBSu9zRK
G2CiyM/OU+sCSRDWD7W4PcRE1QovbnGdJeHknjj72BEmalK6fqqS4pd2j5yj
xpjodafQOZcgEpRdSe/QCSYSCkp+MUPxRb/64MDfTNS3tgT5BZPQfvlrhPcf
Jlpl/uH3N4r144ZvnphmonN2d76vCyHhTtpCsuNfJvrd9XTWleKpQka23T8m
Uk6fM79OsXWFEttynolCXbZ8os6DUPJau9JkkYncVznHU+dFEP266xXiZiHT
sUvhQRR79Ns16/KwUNhkYb4Jxa+m3Do0+VjIIUxGgJvi1XznBlX5WeiN8NJ7
D6nxhEnc+KMgwEI7ZFucNCl+mOR13lCIhQrkDFvuUvlUL7PkdxFhodCZ5Nwh
Kv8fqZqxUXQWytiZ261EMZeymEyeGAvda7C4iKj6rcieSH8rwULHgm+EGVH1
3b6uae04k4W8A6NG1an6Hy4uZYtLs5CFSMDzRapfIdrx+jqyLLSziPOP9CXh
Xplv7QE5Fnr173G6NdXfp/rWe4PkWegtKclppfQwY8R0xEos9HnbM+WEUyRI
vfrT/0OZhSJ2VEa8pvS0yfzTaV4VFmqQv+4wQOnNzybp8m41FipatsOj1ZmE
hC8Bwh7rWUjQuj43h9Ir57DdrRgNFpKNO+ryH6XnX84yWR83slDKaoOjYQ4k
iA3+1ZjSYaHDStIPxg6SoOn5tUxal4VYJyRO7ThAgqf/vYbD+iyU6taYdXsf
Cddng/eHbmehXZNc8il7Scg/7/D9AWIhQ/vta66YkjAYsXz0pxEL+fItCLN2
kuCSlCrmY85C/H+7fOY3kRC+LPRuggULTWT9/rt5IwmPUh1XPt7HQrlnjHUO
apDQlaWoM2dD5TsS+NVChVovyh7aRRxhoQM9cf+Jsqj5oh/2I9uRhUyWXxK+
QK1Hyc+Pu712YqHOrYpxn4Sp+VO/KoThykL7214abOEhwfZLVupdLxZ66HWg
pXmUAL/DUaoVp1ko6eOj8ZABAhJ+nCjp8GWha2d1JYV7CGgaWPNCOZDSz4Fl
1ztaCdg7m9dXGMpCH+ecZg9VEWC8rHj9i5ssdNPBp6b4OgFmcu/cq+JZyGnT
LV+DSAIsl4/m4FssNDmwtaoylAC7FetWl99hIUdlIasAX2p9XpktT6RT8aXp
vAMHCLimlkbPKmGh3yu/VjVT+0XsOmyewWah/sV3NySYBNxa3371IcFCUVB8
apsIASkackvTnrDQcx2XQKt5DhRtvM11p4qF9igXZF/6zoGmrbETVz6w0EGp
sGIatX990i/SiP5I/V9th+UUtb9929Z4KrKFhaLfSUe0UPtfDwgPXv7CQtKy
Xq22Phz4YxjVFfKD0tfJCFkXMw5Im4V+9JxgIXubSg88x4YjDt6ElZgUsrx/
Xv7RXjbcvJQ9tEtCCsXVHqk9YMiGmuxOxa1MKTQofVTg72Y2rP1jGbNSRgrt
e7olgVeRDdPXN7hOKkih617RA+gXtd/jX9KJmlJI8lm1h93NUqhW8gv5YiGF
BqIbVGyqS+CPSUHp231SCBpbXzZxSkDVq7e/ar8U2nTkxAXIKoGYZzY2uQek
kNSHMe++qyVwyHqTevBRKSQ+51jjbl0Ck+HTHXJelH/28KejXcWweuCsoWOM
FFqsunswuacIloWHTp+PlULJvJ6ao9VFwFCMzLsfR8WzHzogl14Ef+0SJL4l
SiHtKIENooeL4E19YbdNqhT66nZ1m9nHQvDJ7r5sWiyFjO3ojfufFEClq3nN
piYpRDMXlsjxyIMDfQo7RVjSaI/EPr1HZzOhTc41MStBGu3tiLsRf/k22K7S
7/2eKI2+NKjrTK+8De/Xi2mL35FGuoLTHttqkqB6+7MPIfelUePqv86+vEmQ
7UgXscqURnJ8n3fHXb4FPo8eX557LI0umtdn0M7FAf+6paf3fZNGjEALw2Yc
BaHabTiiTRoJqAsvFfgXCbP6paLlHdKIr/NrrMKmSBg2d8hf3SONpAQXC//l
hUOTV/HPf8PSaFNTt0tI4iVIZtsdyVyQRt3Bq3onGwOBWb6+4BuXDHqyzOHS
bYMAiKmhzTF4ZNAB1rmaFaQfXGzJvxPML4Pcp0ZqOpN9wGWaq8WSIYNMSMtN
L5pOQOdiy8oIcRnUbH0norDMGQ4uzfN5JimDCmg0hwspTmAmY8NYLSODwv5N
nar6aAe1imuPHlomg86U/Hd3IsUKtq9dLIhdLoMOh0ursJpNoEyrea52hQy6
6Po6x6ZZFzZszTH9pyiDiE7F5cqadtv/B4ULDAU=
     "]]}, 
   {RGBColor[0.9849815, 0.511505, 0.0562295], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
o+67YMuetKP/lOXQK5Gi//9+V/N/63sgOQ==
     "]]}, 
   {RGBColor[0.969963, 0.376081, 0.0322881], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
dWKoe9s2l9tyJN6uZNPS947KR2Xye9dyEocFpR3y/iKGZjvHDHetJvFqDYt0
TosYWpwcUDi+hsRvWn93Tf4UQ9o7NGSPrSMx31Zjj8BeMeSmIGsjr0nizP7B
QjwohvrbUMiXTSQ2uR87ShsTQ/I+j9/46ZDUfb773M2/YgiWku5++iTmLb1x
JX4JHbkvi3/rZkqtP7ixulmUjj5FqSocNaPWi7bwykvQkVfhlLuNBbXeY+2t
jKV0NPi08PtPSxIryza97VGgo8vhN7lDrEn8qiaQrqZER5ofbktL2JKYZ9X7
2NK1dDTvKiTab0/i9E++X8c16EhLwap/424SG11bvlRnEx35yRqVuDmQuGND
7X5/XTrikwg/cNmRxNd+nU6t1Kej5oXRP1f3kHhluGwH1zY6UpLY9v/vQ6v1
q5VNTOnoTvm598Z7Sew66OF+3YLKN/O+BM2ZxLQHkvn1VnTUXd60JY/idPOK
IVF7OqpWPWm8ZR+1//QRDTtHqv69T9ZzKO7IEvWJdaajS/80ZyX3U/vvLiO/
HqSj6OmTuQcpXslzaHqpGx3FhYhpR1NczRbQO+hOR/pSbRnF/3v/6VIa+PAk
HRkeeP77f+9Duel7cZc3HV3Zm7c8neK0Sm6a6jk6ktxeok79vsXIM9/kpB8d
KWdwyW2huG3pruvFgXT0n1bPQDuVT1DdbN3vIDrKm69+cJZiRb9Mkc2hdHTd
XGrdCFXP89VWNn436Qgnn0m1o9jl82TUs7t0FFtzZzKZ0oMrJKVpIYqOjjds
1PhE6ZWmaSZtFE9HjdxmVr8pPVH76N7QB9T/d761/fu/96ER95NqU+joht5P
vT7KjyDDbb+EM+hop0CpyAvKL8Xh/hU2OXQ0FBJVc20XtX9i9JHoAjo6pjLk
qU75y/Wvs1+GpKNvlZsvGdhQ++XcWbf/CeVvjv9guhW1n+Nm79QKOgpI7trx
eycVnwibWPWa6p9H413m5lR8Vw2dE3V0FLbjuZL9dio+49vFwnd0ZPWOa7+J
CYkXT61Z1PxCR7JbLKs7gcQeLJtC9RY6yvm7RP+pAYmbqs7tVf1JRwy5d0X+
W0mcT39OyPdQ+r3Ye+2FNol3sx2PC05R8cWSNQ9R81O1N5DJM0NH2snCJbHU
fK2hpVfPz9PRnzQvnTJq/q7k+Yb/ozHQ/TVXL1QqUutnXvSNCDHQ5ieaS1ol
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
zds5u0IWlQxpyTB7HQz/Dw9y38o=
     "]]}, 
   {RGBColor[0.896046, 0.24915299999999999`, 0.018122], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
IhLqetZIEzZszdvzd7kcStW+yJrjWhj+D4Zo4jY=
     "]]}, 
   {RGBColor[0.822129, 0.122225, 0.0039559], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
IeA7pPpGPo3AnU8X+3f+HQIZ9bCKvBQCZ23fL+K4chimNWQ6Re8S2KkkYhdb
chjMTavkLEn91Hc1n6tVGgaGtf+t66S+f8ulGXM6wyDTaS8cQupfhs6+VD42
DNpK7984k/1x401ur9V/w7D7sEi6Jtk/AjU7d5ZeH4aZ6bKhM1EEbjp64+wI
Yxgm9j62qLlD9l/9+0jp9GHo78xaFA4n8Prmk93+VcNwWMPyLwoi8KB5qkBe
yzB8lKsxUgokcH5r/44f/cNQVZ8zPkXOg3aH5x1d3hG48b2Ia6MXgZfOlD9z
Xj0C/3mU3ox0J/CbXu7OZJUReKPVb/rVhcDHh+O2LRqMQN/IOJeAA4HPTRe0
l8eOwDK7RHDOjMDKPrMrxzNGgIdad/+8MYEn55CG7LMRyH63/3nhMQIHcDSE
XPs6Ao36e05P7CVwLP/4FlgzCnserDUc20xgi6jtVq6bR+Fz5mYTa0UCy4hc
DU7VGwW1HQuLj9cTOIcu0LpsOwpH2NqO03Ry/VinfPP1/VEYn0k34yXXq7mP
OpfSikdhl6GSYuoMG2/3O2oR+G4UQp6lz9On2DivyVkNDY3CGY60yrweNiaC
Hrdh1TE4+fB85uV3bOzTt00TF46BrKRchUM4GxfF7JdNrRqD9t/2J9bdYOPJ
3ea811vGoOz7RcdyHzZ2SPDu0JsZAwVdpWN3HdjY/ODLO690xmGI58fIgj4b
az6A3vKKcUjK7L68b4aFXcyMPt1tGofRy84zymMsnMt55uXVnnE4p3M06083
C6+3usnYzTMBV+4m5m+tZ2Fh/mrd8kMTkJBkmXMig4XHnY/El32aAHE/s/49
h1jYNEk5o91lEs7fO/V8/dUkvLI771KZ1ySkie/6dNktCb9U2aJNXJsExYUR
eHA2CcthzY8WUZNQtNH8v8bDSXisT3fmc/4kjHuYDq6kJeEQTcOjtaOTUK9z
J1wqOxGX1F/5Xew4BWvuiHdvfpmAnST/lse7T8Gj79df38tNwLJ2PmEeflOQ
7/L70TI7AQdPB8ho3J6C6S+R/3z9E7DxmpCD+Q+mwDbJYeTirgQ8fDGJyBic
gqnz0vP7nsdjaZ5yfcb5X7DFSsvMMpWJmzf58ki5/oLhvH31mXeYOOrA9nf3
vH9BTXBd3zdvJqaE5R8pDPsFKrFBR+YNmXiQL8X4S+4v4In64aCyHIeLha/b
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
     "]]}, 
   {RGBColor[0.6454355, 0.0611125, 0.00988975], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1:eJxFzmlM0nEcBnAED7zBg2ImQiYujBZmWyszz5kVhsy8IiUzmzVBseW8Zqaj
Wqb41zHd1FYmZmqajmyT1Apqvilq0TEjTUWzZHN5NUGotvz+nu3Zs8+7h5Ep
5p/D43A47t/+W8KI0+vpfRVhuP+hU+hMWn3G4U2v6GXxnzExeDJibOoxVg7W
FRi627FasLZ6idyC3QZzm4rVjVgvuNpvuEWOjYB/rNlbIwq04P0bdbyBvE/g
sa8plXj/SXB4ZKJJkTkDTsuLW1SmfgcPM1hXR9sXwImNrDa9aBHsY/c0Spb9
C3xtr6Z/9PoyOCb2qFAhXQVrbiwzq4p/o7+3vFQTjevgM4WPahcxM7hsu5pT
PmgB77aUreJzcOGbfnU6ZYmeZQPmtOZ+LLuEB0cnPEtTSgjgIMMJTZDUFiwh
5Ye2NtiBzz7U8n/K7MFM9kVe4V0HcD0t2qi/QwQLO3rl4c2OYBw5KXCqywkc
ZzyQnN7pDM56kCaiqlzA3ywumHbMFWz/ciMxU+MGtubutAZ/cAfz1HE7xBdI
4ATfI28i55BVs9NGpYgMLpmnCShG5DbB2iHKZQ8w3VEsJqwix9vs6RAVeIIN
OTX8IhOy1rmam1/sBQ6gBaqItt5gVqkzh3YTucqzdoXuSAHH+vSxX9Qhpwvy
lHzyFjBzvihKWIOcPEuPcaVsBeu3nZd3NCAnBYQavsiRtWxyiEcT8vOwobel
Lcj3he6ufAWy5N5gpXkQ2WEXMT9hHPlKiH5EqkdeD+13U00gL3AF3cwZ5Hfi
vjnTAnLzQEq6woLsrWL3jOOo4Bo13kwiIFfouptKHJCz13A6Hgl50qrzl3og
pxK7JENeyMepJ0lMKrKGwco45YMcxrL2yHyRnwS/N2v8kDkHO4+ZGMh/AHU7
CiA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"covariance\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["1.1707963267948966`", StripOnInput -> False], 
      TraditionalForm], {0.25, 0.07735175385618573}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox["2.3707963267948964`", StripOnInput -> False], 
      TraditionalForm], {1.25, 0.18644891492901555`}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{30, 6}, {3, 20}},
  ImageSize->220,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.1, 0.1}}, {{0, 6.283185307179586}, {-0.1, 0.1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.662733700853341*^9, 3.662733924458366*^9, 3.662734058534129*^9, {
   3.6627340939747753`*^9, 3.662734117854842*^9}, 3.662734177901001*^9, {
   3.6627342256114073`*^9, 3.6627342680878277`*^9}, 3.662734325865237*^9, {
   3.662734378113369*^9, 3.6627344163712893`*^9}, 3.662734500109329*^9, 
   3.662734538562728*^9, 3.662740106506262*^9, 3.662836712523353*^9, 
   3.662951460123067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.25", ",", "2", ",", "0.25"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6627341356158237`*^9, 3.662734169467423*^9}, {
  3.6627342445826*^9, 3.662734248139041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.25`", ",", "0.5`", ",", "0.75`", ",", "1.`", ",", "1.25`", ",", "1.5`", 
   ",", "1.75`", ",", "2.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.662734157738402*^9, 3.662734169862015*^9}, 
   3.662734248459066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", 
    RowBox[{"Length", "@", "hv"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662734463626368*^9, 3.6627344863565063`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.662734460409738*^9, 3.6627344869909887`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"1", ",", "4", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.662737714794441*^9, 3.662737722316408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.2`", ",", "1.4`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", 
   "2.2`", ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8`", ",", "3.`", 
   ",", "3.2`", ",", "3.4000000000000004`", ",", "3.6`", ",", 
   "3.8000000000000003`", ",", "4.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6627377226713657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Mean", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Pi]", ",", 
       RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
      RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Meanx", "[", 
         RowBox[{
          RowBox[{
          "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(x\), \(_\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Meanx", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "mean", " ", "at", " ", "h"}], "=", "0"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734606196453*^9, 
   3.662734645344198*^9}, {3.662734724148766*^9, 3.6627347251648083`*^9}, {
   3.6627347852861853`*^9, 3.662734882680832*^9}, {3.662737507940373*^9, 
   3.6627376306413794`*^9}, {3.662737692117481*^9, 3.662737710261557*^9}, {
   3.662737826227929*^9, 3.6627378906333714`*^9}, {3.6627379481755466`*^9, 
   3.662737973727108*^9}, {3.662738011090568*^9, 3.66273820227133*^9}, {
   3.662738582147222*^9, 3.6627386102500067`*^9}, {3.6627386565494556`*^9, 
   3.662738675730899*^9}, {3.662738735220784*^9, 3.662738743725926*^9}, {
   3.662738801751446*^9, 3.662738803326022*^9}, {3.662738894290978*^9, 
   3.662738904788496*^9}, {3.6627389639501534`*^9, 3.662739160753665*^9}, {
   3.662739226020411*^9, 3.662739241707203*^9}, {3.6627393045579443`*^9, 
   3.662739369430656*^9}, {3.662739431441307*^9, 3.662739465112954*^9}, 
   3.662739588444475*^9, {3.662739980093663*^9, 3.662739998145885*^9}, {
   3.662836828171074*^9, 3.66283690615473*^9}, {3.662951887646001*^9, 
   3.662951890883883*^9}, 3.662956646545596*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
ASqKDdcaEvX/BBZMQ3Y=
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
lPgMMfdTaT/9D+8yPWM=
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
CMGz8OzHUQKpOv8ApcZFfA==
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
hNgcIQQPGYNDU1LxB/4DKyg82A==
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
+E7I3lbqlJtsSdD5H6PJR0I=
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
BF8+tRM00Ug+9C/3TEL+
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkHk41fkCh20jx3StbTMjDTr2tcmSyseoLJElSpIlQoqicG1lzXBvts4k
TFkaoaQRyhayhNTB4cSRqJC1QTqWQb/vdf94n89/7/N8Xhm3i0c9+Hh4eM6u
8/8V0O7LCXGzhrJ47c0doRysEVl1ru9J1JaKa7H+zUGoR4VTxT43KNJLWdGB
HPhr8k9rmfqAazcoO+bHgaY7M5qhEYwixUWBYi8OksNLLQ/KxeE/ed1te49x
ANq9cqntN2GdYmPnpMnBLauscaHMPIg0V/9ZMtaHF2Pxsa80n8CKFaJjYNKH
XdlhnWzHejAGMtxqS3uRq/Cbzvj9ZjTXXEGsTC8ehGwwEZZox8C+L9resW/g
a5oX0LG9E2KhPqm759lIF1rzf3e4G3qjQdP6dmwMTx2p+9cKGyvOwazcqh4k
fK+eIRrWh2zGZOOwUg+07k/+vnPXW2yZvpCbkNQNnWu/7BCueYeJPWpOghQL
ci70OhXd9+if23NowI8FmuM/BiXcD8gOjVEz5nThEV1hrFRnGC0H6yZCDneB
/ahxez1jBD850wQG3Doxo1Pq4j01CuVXmqw63Q7oDE1MrCqNQVGa7+NWWSbI
gUS+9NhxxDflxfstvsJiW7C7VNsEKFbfX7of2uG7sdvugfwUjs6O7PUtf4l+
ywjr3qvT8I7fFD6S3IbLJZcZU/WfwdXoP1MU2YrErjeeQlIzyB2rpCefakGv
aESUyOlZSFG+aDzyAsIKBrb9VnNwqp9z1jJuhve9r2ola3P4nFHgmqDcBJcy
C9XVO1+QNiRjtm1nI27mvJtvt5iH0fFfo82EG3AoMa3Oe3ke0g5M3pm5eiTS
uMXh6V8hdtHQMGmpFps94j02GXPBq7w/lNNfg93Wzw1/nuCiv1bMKHmsCkx9
WZnVuAW40gsdE/krkS9Q8/LkL4sI33+xTJ88wRbnpZvq7EU4S1ereNHL0ZJ2
Tvm36CVEyjgl7FQrhYhL1LAtfRnFLld8Jl1K0CXfmD3bvAzTnRUfDc2L0c3c
Qxe79A/KI4eydufdx3mBYx15kitgCD5fWrTLx8EfC1DXuIKydrb334N3ka4h
9zT/wipM60e7DmhnI4ZtZM0vugYm+w03xisDj05klI4+W1v3s81OBDPg58PQ
03f5hmmme6d0wXU8jKhocqa+IVbBtvV1UAyCpgW8xXkp+HWIEWWbGBjaHxVp
5qdw0H3TpzsqMWCr/31CiUahSrFKvPFDNNYGZWe+SlLwp9qtBC2iYb4vaVuC
EoXHXfLCN+SjMLV8xrfMjkLr2FmPZ5wrULwksVWoiEJDnn5KVlQgNH1mrl8v
pmC1zYsWaxwIPc92PvESCgrXGsQzvw+E2cnomR+eUKi2X2CdSAvAOaP5Fyr1
FOgRr40VH11GsUR3gFUPBZcgC5iP+2NXWWp32ioF0eOqGW78vtAv9jX9iaJw
O70m7VymD4wKzOqyeQhuqHmqjWv5wPYP3geF3xFkmAgp/ep2HgEx/lHVogSL
DikiSW3eqLC10RySIxi90nT2wENP7OOKJdEtCM7kWAvc7nVF3PDDJa4lQU5A
UlT+ZVd0dpmebrYh8MsKdfAWd4VbceRud3uCEPMXnQZZzoj3nHub40ZgOUjZ
fVfgCDanU0EqhMBdg5L5xn8c0q3nU6fDCO4FSijQ7I/B68mG1eqrBOliGszX
RXZYSUWHQyxBS2RKfOpJW/xs/lfArWQC5mS4YRXTGj61SQ0S+QQRK1shJmOK
p0XKKsOFBNq+ph02AiYgGS2/Py4iyBSzFp6bPoQbQZSX9WMC4w2KYWltB1Cp
cUEk6dl6jwguVzUA4JMWDnaqJziW37E57tp+mG/M/6jaSNAtWemnnLsXQxOD
5a9a1/+1mDFOLetC4O4RR1oPwVJuxkyVuhYsUyabOW8IpBljPfbaGrh19Zp6
IYfgfQorWUlBFcqOtbwmQwRHayX1bpySR4CZw/ktHwnWGNMbL92VQ63uAvvT
yLr/T57rQ4IysN6kVhg7SfBux/aFBvdtyOR7KW73maCeX9F5YFkSI3NnwuRm
CdoFl4zTnopC9T3Pp/kvBFs3VzatyQohiHnbspFLQFOlRQSb8OJ5jV5l6hJB
2F7xw1sCFw2EH7BlTq8QzFqlhy4HThjYpfv9V/MbwYeIgvJDliyDO3EbFwgh
IFz+H9/ei9z/PxZjN6A=
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
CiEEbX46j1zen/nmP4s+PJA=
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(_\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["0", StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1, 3], Rational[10, 81] 5^Rational[1, 2]/(
       Rational[-2, 9] 5^Rational[1, 2] + ArcCos[
         Rational[2, 3]])}, {0.3333333333333333, 0.8021095556782352}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[29, 51], Rational[2117, 397953] 4234^Rational[1, 2]/(
       Rational[-22, 2601] 2117^Rational[1, 2] + ArcCos[
         Rational[22, 51]])}, {0.5686274509803921, 0.4705622356383907}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[41, 51], 0}, {0.803921568627451, 0}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[53, 51], Rational[-18179, 397953] 106^Rational[1, 2]/(
       Rational[14, 2601] 53^Rational[1, 2] + ArcCos[
         Rational[-2, 51]])}, {1.0392156862745099`, -0.28517786540193163`}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox["\[Pi]", StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[65, 51], Rational[-4810, 397953] 2405^Rational[1, 2]/(
       Rational[14, 2601] 2405^Rational[1, 2] + ArcCos[
         Rational[-14, 51]])}, {1.2745098039215685`, -0.280546021625542}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.9993999926510196, 0.9993999926510196}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662836844192978*^9, 3.662836907515709*^9}, 
   3.662956648449175*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", 
     RowBox[{"1", "/", "8"}]}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"padding", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "20"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsize", "=", "220"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meanx", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Meany", "[", 
       RowBox[{"\[Beta]", ",", "h"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]v", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "4"}], ",", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", 
       RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hv", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
        RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
      RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Covxy", "[", 
         RowBox[{
          RowBox[{
          "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(xy\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Covxy", "[", 
             RowBox[{
              RowBox[{
              "\[Beta]v", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"max", " ", "covariance", " ", "at", " ", "h"}], "=", "1"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6627332328397427`*^9, 3.662733258193494*^9}, 
   3.662733294596212*^9, {3.6627333311479607`*^9, 3.662733360241383*^9}, {
   3.6627334036847363`*^9, 3.662733420559772*^9}, {3.6627335196717863`*^9, 
   3.662733556838071*^9}, {3.66273369807651*^9, 3.662733699407941*^9}, {
   3.662733877649763*^9, 3.6627338826891117`*^9}, {3.662733914929722*^9, 
   3.662733923285177*^9}, {3.662734051771472*^9, 3.6627341144917917`*^9}, {
   3.662734177162188*^9, 3.662734267686912*^9}, {3.662734320792296*^9, 
   3.662734323864609*^9}, {3.66273437616984*^9, 3.662734415893503*^9}, 
   3.662734499027409*^9, 3.6627345378529787`*^9, {3.662734606196453*^9, 
   3.662734645344198*^9}, {3.662734724148766*^9, 3.6627347251648083`*^9}, {
   3.6627347852861853`*^9, 3.662734882680832*^9}, {3.662737507940373*^9, 
   3.6627376306413794`*^9}, {3.662737692117481*^9, 3.662737710261557*^9}, {
   3.662737826227929*^9, 3.6627378906333714`*^9}, {3.6627379481755466`*^9, 
   3.662737973727108*^9}, {3.662738011090568*^9, 3.66273820227133*^9}, {
   3.662738582147222*^9, 3.6627386102500067`*^9}, {3.6627386565494556`*^9, 
   3.662738675730899*^9}, {3.662738735220784*^9, 3.662738743725926*^9}, {
   3.662738801751446*^9, 3.662738803326022*^9}, {3.662738894290978*^9, 
   3.662738904788496*^9}, {3.6627389639501534`*^9, 3.662739160753665*^9}, {
   3.662739226020411*^9, 3.662739241707203*^9}, {3.6627393045579443`*^9, 
   3.662739369430656*^9}, {3.662739431441307*^9, 3.662739465112954*^9}, 
   3.662739588444475*^9, {3.662739980093663*^9, 3.662739998145885*^9}, {
   3.662836734011841*^9, 3.662836752471727*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
XCuuN+r+D6FLpRM=
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
jsrn9zfOUhQFfTN7x/bKhX74H9/qjSU=
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
Uo598T9NA2/e
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
NA==
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
DJcUNQyu/h9wyoil
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
0pI3
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/wGytEyP
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
4UMb/w9QB70A
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
RScN/g8+JQK3
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
LTxUTsrkxPr/Aw4d+RY=
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nk4VWsbBnDzkfSJqEihkIMknJLkllPGzFQ4GogGU4UQIVTmypRSSiEy
xNqljk5IIsoQilRU5m3vbZvKlP29/trX77rXuvZ63vWu53nlXHxs3Hi4uLhk
uLm4Fn/5/uq4G+RihdaMk6Z89QqY56xXm/RyxG4X/47wq1twzu2p81NdF5xm
MI7Y7dDGaXXekS3Gnuj2Clv6otYA6q6NEcmbA9GimsTPFrTClRDKYveGS+jR
e9O4zNAZWJLzWHptKjZV3JBeU+OB65aZg4I3szF2sXqD2NtzeD0QHfVW/QmK
XLNf6ffFQuNOcHO7UyX2T3QkNfskI2vj5a2D+TXg5c28uoP/Bh4G/WEkJNaA
wBapsc9VmfAyzvZrWtsMfXawqstAFtIF509/MW1F3K6/GiUCs/GDbl6xbLYd
d46KxPC35SJmqdoNkeAOOEq55+3tycOW/OEUeY0u0CsD/YxZD7H1oqaM0PMv
+Bk2pbuPVogNhxQqVLb14PGkgZaEWTGWOM3olUx+A3dntGb7l0coVtg4QG39
gfNWJ0xb0krQXly9tjK5F/drzl3K1y4Fayt16AS9D32lUgKPqksRJ9qRf2y0
D/Z5Cz2xNaVQYsxNuE32gW60K8OtthQuWXuiXRb68PrQxJNVDaXoWPqpxEms
H384XAjxfl+Kqm8cbgudfgjNzFsP9JQiKdY8WyO2H2FT8bqcuVJs7R4amvtz
AF0nHAU61Ck0+lg6uG8eQJqheUSCBoWj3GX1LVoDkL9+sNhAi0KSfOTDHAwg
8e/JlfnbKIyeXOtpaT+AO3JJyu56FPJ+WY/eCyfXD7UezjKjICX6fMqkYwBt
szWa0m4UOH8n8KRHDYL/77dN8ikUxMaXi+fGDKJm1c4Rn1QKindTFB4nDuJW
mGffv2kULOYzjFvSB7HNW9LL9AaFzMcPEwWLBtHGZ9DpnElBV+GNVNCHQcwJ
XpayyKNwToBX01FxCJ98JP3tnlNIfHxp93GVIdB8X2kG/0fhnovQvrPqQzCw
72q++4JCQ4VoUJLOEA6qud0dqqQgGSBb2WAxhEDZhPsnayg8G9xptiNgCHWl
0tu0Gyn8fBPoKv1mCDfWHn8+85UCn5peRlrjEKaMvCtFe0g9ybxty9uG8EVe
zkfpGwU150QD/u4hXBMueG/9g4Lb2H051sQQzg2tz04ZoNAu2dxTKTMMDxvj
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
sfP/6kfgTw==
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
n2GxWOid3jO6Rzbk2P8BfT39lg==
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV1nlYTV0bBvBmCiGKEkqDKEml+qRuEhKlpFeDpBIapNJIpNBAQrMMUaSi
ubPzRiMNiiZF8kqGptPZp9OkKJ1v9de5fte99z7rWXuvZy1Zx9MHnPl4eHhW
8/LwzP4KbP74INDRDJpf5DZdLViHae4a1bFTNrDseVA6XayJs87FdsVbHWEX
PBZiEb8VXmr8g5uM3MHuEzUYUtgFNad3obEbA7AqM/+hFPMAbgQVmBrKheFH
Ou/pwR0OgPDjIumV8aj8fD/G+KgnEvff75ub/Ahbs9Wd3icHo7o34nKDGgOe
B6UKw5/fgHrKuaY223Is0D1w7gidgIdrw7X6Ml+js2p7QdCle8gKnLNbRKwe
lHltm6VcKk4ZPfJpXNkEV8a+zcYrHyNp7rTXf8atkG7/V1xKIQPfmSZlC/60
Ybv4mSNmrCxEzlO9vfDcR9gHX+gt/ScbmzIH4uTVO9E6xyL48OtcaF3RWC3y
4j/kh1orO9F5kLNXKFPW/ordTfd0vn7Jh7Dtb/28sW58z0u1b6kvQI7C2t4C
re8o8Ti03/dWIdpyqlaWx/7Av0/Oy9ubFYGtVWDvwvyJsoSIjg2jRbi2+GPm
iaGfiDkRoWg/XgQl1tSo89hPGJSfWnNjogiOD3dGOM78REXftNzgVBE+zvuU
ZyvWA8Pa56axAgxUdHN5Tbf0oM9SZPcjcQZirpo8Ur/aA4GYhN46LQa0uvr7
p9b14mVhB/8qXwbend5vfXxjL/JN5uvL+TNwjJd606zZC3XhBSzFQHK//KWs
x+hFRvuttHXnGRhyXem+37IXj6fcQ6SvMJAxYT6UerEXlT/jZorjGJBa/GJ8
z8detP9KVaspYIC74zpf0uU+2P8IXLCdyYDYyKKl6ZF92PnvWErtIAOKD+IU
iqL7EKr6tXMfzYDp9B2j5qQ+7NGUNrbgMHC/KCt6bnYfynr6RM1+MbBVoU4q
sL0PPwcPaQvzUTgrxK9ho9gPlZI8tbPLKUQXhRmeVO5H7JzIL+2SFFIdRf7x
U+tH+L8pGmorKNSXLQ6M2dKPypbUz90rKUj6y5TXm/ajXqJkhboched9ent1
/fsh0TLHMW4DhV91AU7Sdf1QK7isZbWdgoCq/p2Ed/2QXJR4KdWAglgs//tF
7/tREqSDwR0UVO2iDQS7+pHG3csXsIuC83CaLHu0HyfGcp5f2EuhTbLpa/nq
AWhl6LK3WVIocFU47OQ/ACGZyRdJJyhUNDFjvwQNQNfmBCvvJIVGzbyGQ6ED
mJSIjKp1ocCc2aK77/oAhuKEpTluFGRjzaQ2pw3g74hgoKonhZsvznUINQ3A
2VFT42gAhVPzWw9mKTKh5xo2mBhOwa+yQmCeChMyojoTgREULvrlFrltYqIs
SivUJpJCXHfU0g1bmViXCIll1yiUFO1uyzVnInlTpPaFaApz7UotGEFM+IYZ
nBCIJ/WLPeOXCGWihHejeyOxdG1yoV84Ew7reYYTEihs3BSwRCeGCVcR/7Ny
SRT+EdR4X/KEiXcp1dfX36GQlp1xoKKVibaek2WcBxSeOSbyyXYwEV2tUpP6
kAK1LKwg5AsTd228TC1SyfsLcRLb0c+Ei96j7tw0ChzLVa3Vf5moEqydfyid
gv5MrHmD0iDmzKuIsntK4ZNpsNmHC4OIDj/mvbeIwlGZaw87Lw0iR/gj/Zq4
dzhhpCtiELtkHkrrMSiMxOXE9cUMYhXfkbh1FIX5n790TKYPYq6MCz1STGHb
ia0OK5oGkZhmaLL7BYUaHaOC1W2DkPpXne8ZsYnIQX75T4O4/JnXbeFLCjbZ
bo9VfgzCa81xq1biM6PJA3oTg+i4rJtmVEYhPfi319HVLLybaOCZqKCgYi74
6pg8C/PX9E/sqqRQuGbxUpd1LHif9k6LJ66oVqK8NFjI3TK+bGMVqW+e1Z/Q
3SxYteX4H3hF6vvitDd8Hwux0F6SRNybc/ruNXMWtpX6Ov1HPGIerh9ny4La
xv+tcXhN6kuiQh+fZuFvUIekbTWFGJeq95k+LIxzFh5OIJbUbZTPCWSBttpl
0Uys2NVTQ11iYV9Z29FtNWQ+5MXn1SWyMPAm8PeiWjIf4zKH395loTQ76+d2
YpNalezmhyyst5O/4kVs42q4/9NTFoIPLut9S3wm70wss5yF1ZM863zqKIzp
VIrYVrOQb7qNc4/Yp1I0tKGeBR0HCY2aWbdmej5rZ8GznlIWe0Out5nok/7M
QofW7W+biX1/GNpf72ah86rBEitiv7GvJh6DLJSbSzETiX8Fbaju4rBQJuRw
g0HsL3hu6/5fLOiuTclrIZ68XldYPsWC1vduExZxgISEshovDXl39ROC9SS/
75T6QIjGAm7KtDRx4Np8ycXzaRR0bhbVID6rs2/uiASNb2Hz0m2I/1TcDnaU
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
58kHCc04X9H7Pz6eFZM=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(xy\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[1, 3], Rational[1, 2] (Complex[0, 
           Rational[-1, 12]] (Rational[-2, 9] 5^Rational[1, 2] + ArcCos[
             Rational[2, 3]])^(-1) (Complex[0, 
             Rational[74, 81]] 5^Rational[1, 2] - 3 ArcCosh[
            Rational[2, 3]]) + Rational[1, 36] (Complex[0, 
              Rational[-2, 9]] 5^Rational[1, 2] + ArcCosh[
             Rational[2, 3]])^(-2) (Rational[2000, 729] + 9 (Complex[0, 
               Rational[2, 81]] 5^Rational[1, 2] + ArcCosh[
              Rational[2, 3]]) (Complex[0, 
               Rational[-2, 9]] 5^Rational[1, 2] + ArcCosh[
              Rational[2, 3]])))}, {
      0.3333333333333333, -0.05432001776242282}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[29, 51], (Complex[0, 
           Rational[-1, 12]] (Rational[-22, 2601] 2117^Rational[1, 2] + ArcCos[
             Rational[22, 51]])^(-1) (Complex[0, 
             Rational[264814, 6765201]] 2117^Rational[1, 2] - 3 ArcCosh[
            Rational[22, 51]]) + Rational[1, 36] (Complex[0, 
              Rational[-22, 2601]] 2117^Rational[1, 2] + ArcCosh[
             Rational[22, 51]])^(-2) (Rational[151803769808, 17596287801] + 
          9 (Complex[0, 
               Rational[35926, 6765201]] 2117^Rational[1, 2] + ArcCosh[
              Rational[22, 51]]) (Complex[0, 
               Rational[-22, 2601]] 2117^Rational[1, 2] + ArcCosh[
              Rational[22, 51]]))) Cos[Rational[1, 8] Pi] 
       Sin[Rational[1, 8] Pi]}, {0.5686274509803921, -0.05508000295159438}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{
       Rational[41, 51], 0}, {0.803921568627451, 0}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[53, 51], -(Complex[0, 
           Rational[-1, 12]] (Rational[14, 2601] 53^Rational[1, 2] + ArcCos[
             Rational[-2, 51]])^(-1) (Complex[0, 
             Rational[-181958, 6765201]] 53^Rational[1, 2] - 3 ArcCosh[
            Rational[-2, 51]]) + Rational[1, 36] (Complex[0, 
              Rational[14, 2601]] 53^Rational[1, 2] + ArcCosh[
             Rational[-2, 51]])^(-2) (Rational[280243682768, 17596287801] + 
          9 (Complex[0, 
               Rational[-36302, 6765201]] 53^Rational[1, 2] + ArcCosh[
              Rational[-2, 51]]) (Complex[0, 
               Rational[14, 2601]] 53^Rational[1, 2] + ArcCosh[
              Rational[-2, 51]]))) Cos[Rational[1, 8] Pi] 
       Sin[Rational[1, 8] Pi]}, {1.0392156862745099`, 0.06309818232714853}], 
     Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{
       Rational[65, 51], Rational[1, 2] (Complex[0, 
           Rational[1, 12]] (Rational[14, 2601] 2405^Rational[1, 2] + ArcCos[
             Rational[-14, 51]])^(-1) (Complex[0, 
             Rational[-176582, 6765201]] 2405^Rational[1, 2] - 3 ArcCosh[
            Rational[-14, 51]]) + Rational[-1, 36] (Complex[0, 
              Rational[14, 2601]] 2405^Rational[1, 2] + ArcCosh[
             Rational[-14, 51]])^(-2) (Rational[222569282000, 17596287801] + 
          9 (Complex[0, 
               Rational[-30926, 6765201]] 2405^Rational[1, 2] + ArcCosh[
              Rational[-14, 51]]) (Complex[0, 
               Rational[14, 2601]] 2405^Rational[1, 2] + ArcCosh[
              Rational[-14, 51]])))}, {1.2745098039215685`, 
      0.07785935181866135}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.09077599397167077, 0.09077599397167077}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662740021793724*^9, 3.6628367170050373`*^9, 
  3.6628367552055397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "h", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Varx", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*SubsuperscriptBox[\(\[Sigma]\), \(x\), \(2\)]\)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Varx", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662739478354604*^9, 3.6627394872880487`*^9}, {
   3.662739574862118*^9, 3.662739596046834*^9}, {3.6627399745660887`*^9, 
   3.662739993954824*^9}, {3.662836762825493*^9, 3.662836781382839*^9}, {
   3.662952181216199*^9, 3.66295218469453*^9}, 3.662956602321707*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
fw2Mggw=
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
Wqsk8nhzxKvW/cNw4QWSJJGxsroOAv8Dyv2tjw==
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
LMkyCP4GBrokpA==
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
C+oZQw==
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IPgfNA0pcQ==
     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV0Xk41Wkfx3HbXGOJhhppyJqIEk0h4+rj0YKpOGGmfUzK7pTtMbZLKUmK
HpRtIiGRGFtROGRf4jb26lhGKlGSQ8k5fvdz5o/7e1+vf98fDeez9i5iIiIi
7sL37y+xfTAz2JkF2ZhfPfXXakNANQ3m2UfRsTpQfljcCCEuFScqzJ1hr253
cCzEBL6G4tNG1t6ILew1kd1mCcNTnRcStwSh7a5mSZGaHa6Hldru1opC91yr
hXXQcUDqbrnKupvQ14puMFb1QrJdxlvJtBzczJxlwk6HoOlNdGSH4UPItEdl
adAYbL0dSvqO1SKkTkLNYTQRd3QuG7/Nb0Tvp7DlJrk03A/+1kpaoR0Mp7nR
5Egm2NY5AV3rCDTXiz4S88xGiqTAl/tzD4K1O3kJZbkYnzrAkV3qAzssft/r
iXxckTFIXRk6iIQEzZfBgw9glP/uxvqtL6Dv51hWIFIM40s/qklXcRF3ruyX
gcASaDlpc/RNRpElqxy3ZrwUUse+7iyeH0N3Wu1eB/dyFGnrvCk1HsfjG+ya
l90P0VdUv6428RXUR28O9DtUYMa41MljagI5rOy+uY5KGI9MTvI3vkH4XoV9
HjpPQHfFiqVEvkV5xvGcultV+NwadEqldRJrK4tV6UI12Ct6HO9vmMKS347a
AncOntueYw2ET2P/hdu+O/6uhX+xf+JU7XtEl/894XC9DrHd/a6SKjMYXI5V
umz5FAMrz0XInfyIaM76NK/Jp5DW2enw3G4WnianUuqv1MPjLm9zsWAWquqs
id9NGuBUtn8TP/0TgoJUQpSHGoQ7cefa98/BN8bN6mNkI/bEJnE8FufgrGQQ
gc1NiJWaLwxL4UHiUkmVTFsTvneJdlm9dx4ae54lVvg0YxurzkJ9ch6lNdk/
Sa1oQaeZpgY/agHnpVf/pZfdglyJqrajP35G7oaJ8NE9rVD87ctNg77PEO03
bTjLbUVzkqfe5QtfUB+ca/RTeBvknCLGHbQXsStmhDO2qh3dG+pvf2xcRKLd
diW1u+3o6dyh/Z3fV3DHTtIeiw54SfzSlbNqCdlbbC7pdndg9w/3wKlfglve
8xsf3J8hZYvWo9wzfCSR8eFm/jNc7LNkia8UQGBZ99oqohNFh1NLJ6oFCDDX
OWwk2wUf70RTM6dl3IkXnB2+0oUH5yoafmOW4adHWNcFXQiclvCQF2UgybNv
8Ga6YHHIXq5RnIF1zn/9bUQI+gw+HN4oxWAsnXtZRIJAMKw5w1vF4FnaH04u
MgT7zOOUrmxk4PdHcqnkDwRTi6fZZY4MGLfM6AfGBLp+CmskCxho7jY/L88m
MPSeuXatkIFuWiJNOkNg6touJl/MoK5me4iyD4HN0Qszax8ySL/Te0TDn8DT
cq5Jv5bB6byL19SDCQoVegLsehlkV8sLpiIJtpbF9yTxGSg5ckMz/yQwK2Rb
KzMMqtpcd4mmE1jes+HcFqEY6m2q/j2DwOFP0ft531Dw98Q9Vr5DEHDRN+LJ
SgrNrMLoiFyCCoeDhiNaFN+/PF8nVUJgPv9dnPZ+iuFbok95jQRR4w++zNtS
RIVdjbJqJiDd1icbD1LsXmOvmNpC4Fx4ftupQxQzH64FbW8niHadfZHpTJGs
2xxsT4Q9h4iOSjBFmNnYYcXnBKotXvHToRQZ5h0Ku14QuD38lv8knMLPaEKO
/ZJgKR5dRyIpHPPdsiqHCdT3/RWQfJ3Cf3aQt2mcwLsm7qlCLsXPRRqPw6cI
HhXo6Y/nUew0W8wJniagqc03SgooWt+vmfV5T5AQyLixSihSXQ84Os4QVG45
IxdXTXHctPTd9CcCMVXpoBO1FJ2x8GyZE+67IvefTfUUXEWnqxk8gpHJ4fKO
ForZ8oKtWCCQyDpwTKqX4onhr7p7Fwls//eucaifotJ8oG1J6OTwSwZ5Q8Je
g2rt+V8J9I7ViFqNUCy6uy0uLAn72xzxUvyHIqa/NT2BT1BjstD3+hWFNLcq
VldAwFq9OS/ynbBHXn7bzmWCNLE2ecf3FBYy/9HjCP1q9nSo1keKwCB/3jaG
YNOoyOu5TxQKac5uWUIHdt6yrZ8X7mEgnvANJairMq2M/0KR6HJI94TQ0vf7
NE4uUUxoy1neE9oxxeeq4TLFgRr3pDGh06NWLFBKoSgnvEL/H3UEX5k=
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/wKB99Ak
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
LvSjwf8LAg97
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IgtKLjFzONFPwvjmWSzsnyQb/gj4P4435ic=
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubsuperscriptBox[\\(\[Sigma]\\), \\(x\\), \\(2\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["0", StripOnInput -> False], TraditionalForm], {
     0.3333333333333333, 0.007675038528780972}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "8"], StripOnInput -> False], TraditionalForm], {
     0.6862745098039216, 0.057703959859499984`}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], {
     1.0392156862745097`, 0.16471963993832694`}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], {1.392156862745098, 0.2517905251066118}, Background -> 
     Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], {
     1.745098039215686, 0.26266758462221196`}, Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {0., 0.2719426837689907}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.662740027646262*^9, 3.6628367866128397`*^9, {3.662952159817923*^9, 
   3.6629521867278748`*^9}, {3.662956604749318*^9, 3.662956621001997*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Covxy", "[", 
  RowBox[{
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "4"}]}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.662734657605571*^9, 3.6627346578820257`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.662734658548483*^9, {3.662734699297*^9, 3.66273471348697*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(xy\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Corxy", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662738832252561*^9, 3.662738873442569*^9}, {
  3.662739507538682*^9, 3.662739527495575*^9}, {3.6627396059975967`*^9, 
  3.662739609213725*^9}, {3.662836796049951*^9, 3.662836805320606*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkHk81PkfxzXp4aglOoVK1rqPcqS2els/P5NIU2xtWcYxyJVEfo4ejkit
opFr9NtCYVFKhH3QzLsVSlbEOLKoHOM20rjH9/Pr98fr8fzj+cfz8XipuQee
8qRJSEic/7b/U9K0KyfcnQGRWmPRFWIhiskeA1HAOfAtOT1cuizECM8q56pD
7vBs5/Tmx4tCDDJaO7H3qD+kcgctH4iEaOTRfDXVMAx23EtMSpoU4u0rZfZW
6gkgEuzOZfYKEWTyn6uopsPFXcNPvtQIMfPE/RHpu3nw8GaRcnOEEOsFN+Kb
jCpgLFZu5cjkNO7LjmzhOyH8eCV7e4znNOZqXjcbKaqDLHfPhq6PU1gcLkWX
VXwLpqfTV7cdn8KAo3kh71Rb4FpZx+HQ2knkSIuDeo+1ge66LRlMnUkcGD/O
+26ZD6Vq2R+0Uyfwt/UGWfKRXeDB7LTzlpzAvUVjad/v64FkOoNW6T2OZteM
d8nW9AJD5cTSg/YxVGdq8HT3f4Rep47ZBosxlHFaOlIq+gRih4S0uOxRfKKh
KSgzGwCZ0jT7A1KjyH9Sq4qpg/B4h9yohusITpuVMX3GhwAcvKS2VQvQrH90
dEVbAOfaXzJZqgIk/0qiceJHgK/3fjIgaBjn34R5qLwZhdWzXFPpliEM2NDm
WPzDODhKl+oQlSH8YB/N6IyaAO07qS9U/AcxuDQ4dRwnQZ7DDvuxfgCTWju8
pFWmwSNW9MFabgA75aNj5dyEcD5pS+Idt88oq3nE4cOJGXi+11Q+rvIT+uR/
1S8Vz4ArV9l43fxHZJbb6a3c+wI214PYCWn9mJ7TO/vWbhZKFbY15yv04b+T
Mng+i7NQ25NnrXvnH0ySEZVc4XwF1UlajYt2D27xvOG52VoEjyx+jRfc70YT
xkuL3aMiuO2s8mxItwubD+5RW0mYA0rLcl8PtwMLJGsazxnPA02mvYllwMet
LgvpBvx5MPSKsFmoasOGDF+d61cXQFoqQalm93uUY8YOOGgsgrm98e+F9BZs
/aE2W1i3CGodMTwJ57+xrfmAxsZLS7DyIiCQbtqIfpI/v8vbtAy89clB5fQG
tNrxB/Bql8Gkk+tqrv4KOYbqlQUXVuBQ+OKMk9JLjONbMtbKiwFbc1r0C6rx
yS9ZZUMvxMA4by7ubX2OF/1TzQ8yVyGD2mBRtP8pPo6ueuVCrUJir0FNT24+
hk5I+iisocAms3x+LjwfLc6ckqtbS4H1aQFb7VQ+8g2mftGWocCt0sOmmJaP
4r490183UcDrq3oaz8pD20PJ23/TpqDBt/HIZd2HOL7ICih3pGA/W+6w4usc
1LqkuE36EQVcVnbXsXAOGvlP37pVQsHy5ctmtuYcNPd6S1MopeDAmXb2fxYy
0ebc1WmlCgr0lO9H/Byaib6Ws/W6SMGeXFctw9AMLFFsCznRTkF3s5VHflQa
7itPactYoSDNh+NhUsHGgyUBR5UpCqjJ9IesCDZa/mHDy5YgMFQVptoMbHT4
75riwnUE4lYLbFMybmNIXFBstTyBWZ5+jLAxCascThr1qxO46W1U40hPxEOi
jckadgQetl9YWM2Lw4SBxwsiewK7FCyCO43jsKX1qFvdSQJFUdXJ/q+uontJ
jInHGQIMPYeJnqFYvOE105Pj/s1LhLpI7o1BfneLpko4AaWpyuq6z+G487Vf
ykQkgem7ld1ZSuHoXSG1Uh1FYGuc1AErhzBcToF3Z+MJXAzMPGP6dyjutn0a
knmbwBtP/VyXjmD05yb/pVhAILmtbukfjj9WPtLRHSgkoNJEl15v64ckqyHt
2SMCAsM1AxtpvngnlPJmPCNQzxr5SzbaG/80vCCX/IJASJpL+3iVO9J2yoY5
I4GpCIMOcaob2m4o+KxX+61X6fzTwGVX7B/te970msAtZpxqVuavKPnguJNM
O4FNPaqjBYmOaM8eq+vuIOA012R2svgUZkZdMyjsJrCeXl+y0M1AHSfuGno/
gYDarVWspmMYYnPWb+tnAuN5LGv3RDpy98/xhwcJ7HSoPa0YYIWMzfqF8WME
dKhwE23bw3iX1qjgOEmA5MkspUiY4+AMK1JdSECBfTKQqWCMeh8lhme/EGBe
MjgukNXH0Obf7WtFBLYHh/n1NX+PL2vM/0xZIDAfGthiIaeMssV8NbdlAloj
EZGiK9+hI+fiTaPVb//bfV346ZOIdy9hwxwhBN67aY1pauVx/weHknm/
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
QQB/Z3ntUx7/iv8Bkh6ScA==
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/flfNWskBGyYJwgC3F1ldU85fNT/B8RlPnA=
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVj3k41IkDxoWtMDuSsm1LQhIKpSTJay0bORKK+EmuNOMqIffVrHTQTFRq
K2qdI0ckLRvSyBWKybGFDDmHQeMIzXf9/nif93n/+Lzv8yq4+dt4CgsJCfmt
6P8uuq8zPdTNGtEpzIY+Lg/LhKIG39cRtIDIq9r9PIR5ljmX6buhcOxZNv0D
D+e1RMZ3m/rAP7j8N0olD1ruzXHJmiFQve6UTafzcCOi2MpYKR6l+hQVpg4P
EMt8Jit3C/4ppnU5VyZx5+jD4bX3MuBsVhGmaTqBJLltW1WmM/C/w7Fp7w9N
IH4818HENBM7c6ZIEdoTCL5c2hA7l4k7Keybo1smcKLqbd6iTTZ0JXXXbJ/j
YoPmkj9Xgol5F7XqzVlc0MkOC62RhThto7cvV4KL2qEEWpNWKUKpCv0m42PY
kxbeynaqwvB8esBu8igeqVzWGc5loaHlgZdPyDCYoWsOi69vBLv62qTS3Bf4
mmYEtsi1Iqdygd9TOojUtcvnPx1pQwxrzXG5qAFwxiwrf1xk48LjU3tdKBxc
kdC4KxneiQLy9GrRyH7szh1N2bbnX5CSDr2oon+Gzh/a8uIVn9B0sfdTZEIf
lFyUK9X39+HMoNWeCKleiDl9Myjif8a9c8aCj8mfUKCsMlSsw4FGiIouzfgj
2AU1clXJA6hrv/mmm9uNSZ1iF8rYIFI8KbXq+V3Q6R0ZWVIdgudqrooEoxPE
b4nCqbRhdIdsI0VSOzBXH+IuWz+CTFKq4Sr3D/Altdkxt4/hL8vt0vnWbHRb
RVt3RI2j/6zpTIxlOy4UXUgeq+IibnXv/SH3NiS++3BmrewkNgW1Sxb5vUeH
ZHQs2ZWHXoOB93/S30FcxcC2++gUcqaZmyJCW0HJ/LqraHklzy68rvi7GS4l
FjuXHkzjsnFK9BbFt7iV/mmm0WIGln5pOrEBjTBJvF1JWZiBU6dZsjq7Holi
/PyI1K/ooT0f9DpZh42eCZ4bfuejs/Pm8dNvarHXutpw6wgfLcEfa3vsWGjW
U1RYip+FxqKDZtRUDbJEKxoctedw6kQHm3/hFWROzd/SYM9hfuBBspdMNd7c
pqpdjptHWLtXT6jRS5BdYjm2ygvwCXqtvi+lHO+216TxWAtQkwqypn4vQ1vz
AeV1Ad/QRtlydqNeKbxFj7dkSC9CcYfTwatPi2G8ORuVNYuIbtnR90qoCKma
Ss+z/JaQ1tY6n9/NxCW2kbWI5DKOWLL69+/KQoHD3eLBf5ZB6f9r+vmRRzjn
k6yr5/IdAYbUreVDd/Ekuuz1KcF3hG3qa9/MYyB4XJQitUqAqYdX05eaGTC0
tyGzRARQknc0G3vCAFtjwkFVTABqRmDcNJWB5R7Fya/SAjC6H3Fyh+kw10/a
dEVVAMn5cOG8uhsYW/DwLbETwFui0S+09Rp2BKz/aW2eAPkls2TGYRq0fCav
X88XgDwtk1UgRYPumUZhqSIBEnazhqY+XoKZY9zkz6UCkCyO+QyeuwSq0Uyt
epUAv478PJp0Pw7569sCj7YL0Kgr66u5FIM9JYy220sCSBPKkRGF4dDL9zX9
RSDAfcM5VRGrcBhlm1WmCRH4GqxiOMwNg+2fq5g5PxBwtpluaFQPQ+Cl87Hl
kgQyf3Ad3lgQgjLbY1q9SgQO+cU1hdcGQZ+/LknZgsDNKEwc/f0c4jlP5vlW
BBz65K/Iv/dH6ztTV9YxAiG0srxuGX+45cfsdbcnIKxo/4iU5YuEM1P/prsR
SH9RMtXTTgW7q1VFNpTAOue0h+TznthS580YDyfgZUm6daDJA16la5bKowi8
5Wf4jW73wCIDLSdpK7w68wKP44at5oWBd24QaE3siDfxOw2fl0mv1mcREBe5
qMcussfzPDV1Tg6BqxX1jqb3T4C4+yblaR4B7ezTHZXXjuNmsMDL+ikBdcOo
cPGLtnih6UdO+odAIb0iOV7kKIS3iIc4VxHYrTQS0SFvCXNSVv/OmpX/Rswb
zSbm6B3pedZUR+C2mSKnpvAwRB9bOom1E5DRfJJHEf0VVvRRVtcHAmkBMVWL
XAPcifpDI6eLwGPpLo250YNQc3q56nAvgSSWtH3cHh0Emp30luknIFnArfGO
0cbL/bPsLwME9imcbR4e14L1hl05tFECsqxB4zjjHbgn3CBlx13Z517XtuMo
YWDKI1yJt9KnUX/g7zvy2Nkn9GVmmsCkUWSTieQmBDfft6rhEzg44GHxk74U
qit0XzDmCVjL3HL9QlkNcSZbwXWRgOFMkF2N74KBXeq5a1rfCez6yPtma95v
8CCeNEsQBD4bUHe8K6Yf+g9lH3wN
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
GfaTiH76wf8Bllk4pQ==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
qu+/OtQz+PT0/wCnrUjF
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
E7LD81teELds+vf/Auw3Urs=
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
HCEE753VxlTVsg//H+m6Rb8=
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
vI/jnH3u/x3oSio=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IQQL0SIizq+L/v4/X2xLJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(xy\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{0.3333333333333333, 
       Complex[-0.8761991844522272, 0.]}, {
      0.3333333333333333, -0.8761991844522272}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{0.6862745098039216, 
       Complex[-0.5939060564767621, 0.]}, {
      0.6862745098039216, -0.5939060564767621}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.0392156862745097`, 
       Complex[0., 0.]}, {1.0392156862745097`, 0.}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.392156862745098, 
       Complex[0.24428690815648155`, 0.]}, {1.392156862745098, 
      0.24428690815648155`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.745098039215686, 
       Complex[0.1176389027169478, 0.]}, {1.745098039215686, 
      0.1176389027169478}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.999657067065967, 0.999657067065967}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.662738855715088*^9, {3.6627395272771606`*^9, 3.662739532345084*^9}, 
   3.662739613459598*^9, 3.662836811086557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]v", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", 
     RowBox[{"\[Pi]", "/", "32"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hv", " ", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "/", 
      RowBox[{"Length", "@", "\[Beta]v"}]}]}], " ", "+", 
    RowBox[{"1", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{
        "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", "h"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"h\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<Correlation(X,Y)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<SolarColors\>\"", "]"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "\[Beta]v"}]}], "]"}], "]"}], "/", 
       RowBox[{"Length", "@", "\[Beta]v"}]}], ")"}]}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\[Beta]v", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Corxy", "[", 
           RowBox[{
            RowBox[{
            "\[Beta]v", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "hv", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.8", "]"}], ",", "White"}], "}"}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "\[Beta]v"}], ",", "4"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.662738832252561*^9, 3.662738873442569*^9}, {
  3.662739507538682*^9, 3.662739527495575*^9}, {3.6627396059975967`*^9, 
  3.662739609213725*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1., 0.820127, 0.126955], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7793745294117647, 0.11594697647058824`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.7386220588235294, 0.10493895294117647`], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkHk81PkfxzXp4aglOoVK1rqPcqS2els/P5NIU2xtWcYxyJVEfo4ejkit
opFr9NtCYVFKhH3QzLsVSlbEOLKoHOM20rjH9/Pr98fr8fzj+cfz8XipuQee
8qRJSEic/7b/U9K0KyfcnQGRWmPRFWIhiskeA1HAOfAtOT1cuizECM8q56pD
7vBs5/Tmx4tCDDJaO7H3qD+kcgctH4iEaOTRfDXVMAx23EtMSpoU4u0rZfZW
6gkgEuzOZfYKEWTyn6uopsPFXcNPvtQIMfPE/RHpu3nw8GaRcnOEEOsFN+Kb
jCpgLFZu5cjkNO7LjmzhOyH8eCV7e4znNOZqXjcbKaqDLHfPhq6PU1gcLkWX
VXwLpqfTV7cdn8KAo3kh71Rb4FpZx+HQ2knkSIuDeo+1ge66LRlMnUkcGD/O
+26ZD6Vq2R+0Uyfwt/UGWfKRXeDB7LTzlpzAvUVjad/v64FkOoNW6T2OZteM
d8nW9AJD5cTSg/YxVGdq8HT3f4Rep47ZBosxlHFaOlIq+gRih4S0uOxRfKKh
KSgzGwCZ0jT7A1KjyH9Sq4qpg/B4h9yohusITpuVMX3GhwAcvKS2VQvQrH90
dEVbAOfaXzJZqgIk/0qiceJHgK/3fjIgaBjn34R5qLwZhdWzXFPpliEM2NDm
WPzDODhKl+oQlSH8YB/N6IyaAO07qS9U/AcxuDQ4dRwnQZ7DDvuxfgCTWju8
pFWmwSNW9MFabgA75aNj5dyEcD5pS+Idt88oq3nE4cOJGXi+11Q+rvIT+uR/
1S8Vz4ArV9l43fxHZJbb6a3c+wI214PYCWn9mJ7TO/vWbhZKFbY15yv04b+T
Mng+i7NQ25NnrXvnH0ySEZVc4XwF1UlajYt2D27xvOG52VoEjyx+jRfc70YT
xkuL3aMiuO2s8mxItwubD+5RW0mYA0rLcl8PtwMLJGsazxnPA02mvYllwMet
LgvpBvx5MPSKsFmoasOGDF+d61cXQFoqQalm93uUY8YOOGgsgrm98e+F9BZs
/aE2W1i3CGodMTwJ57+xrfmAxsZLS7DyIiCQbtqIfpI/v8vbtAy89clB5fQG
tNrxB/Bql8Gkk+tqrv4KOYbqlQUXVuBQ+OKMk9JLjONbMtbKiwFbc1r0C6rx
yS9ZZUMvxMA4by7ubX2OF/1TzQ8yVyGD2mBRtP8pPo6ueuVCrUJir0FNT24+
hk5I+iisocAms3x+LjwfLc6ckqtbS4H1aQFb7VQ+8g2mftGWocCt0sOmmJaP
4r490183UcDrq3oaz8pD20PJ23/TpqDBt/HIZd2HOL7ICih3pGA/W+6w4usc
1LqkuE36EQVcVnbXsXAOGvlP37pVQsHy5ctmtuYcNPd6S1MopeDAmXb2fxYy
0ebc1WmlCgr0lO9H/Byaib6Ws/W6SMGeXFctw9AMLFFsCznRTkF3s5VHflQa
7itPactYoSDNh+NhUsHGgyUBR5UpCqjJ9IesCDZa/mHDy5YgMFQVptoMbHT4
75riwnUE4lYLbFMybmNIXFBstTyBWZ5+jLAxCascThr1qxO46W1U40hPxEOi
jckadgQetl9YWM2Lw4SBxwsiewK7FCyCO43jsKX1qFvdSQJFUdXJ/q+uontJ
jInHGQIMPYeJnqFYvOE105Pj/s1LhLpI7o1BfneLpko4AaWpyuq6z+G487Vf
ykQkgem7ld1ZSuHoXSG1Uh1FYGuc1AErhzBcToF3Z+MJXAzMPGP6dyjutn0a
knmbwBtP/VyXjmD05yb/pVhAILmtbukfjj9WPtLRHSgkoNJEl15v64ckqyHt
2SMCAsM1AxtpvngnlPJmPCNQzxr5SzbaG/80vCCX/IJASJpL+3iVO9J2yoY5
I4GpCIMOcaob2m4o+KxX+61X6fzTwGVX7B/te970msAtZpxqVuavKPnguJNM
O4FNPaqjBYmOaM8eq+vuIOA012R2svgUZkZdMyjsJrCeXl+y0M1AHSfuGno/
gYDarVWspmMYYnPWb+tnAuN5LGv3RDpy98/xhwcJ7HSoPa0YYIWMzfqF8WME
dKhwE23bw3iX1qjgOEmA5MkspUiY4+AMK1JdSECBfTKQqWCMeh8lhme/EGBe
MjgukNXH0Obf7WtFBLYHh/n1NX+PL2vM/0xZIDAfGthiIaeMssV8NbdlAloj
EZGiK9+hI+fiTaPVb//bfV346ZOIdy9hwxwhBN67aY1pauVx/weHknm/
     "]]}, 
   {RGBColor[1., 0.6978695882352941, 0.09393092941176472], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1., 0.6571171176470588, 0.08292290588235295], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.9946993529411765, 0.599132294117647, 0.07172099411764707], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVi2k8FfgagO0h15bhNGQs6VyRPUzXeCUjJEs0yZJslWyJtDBM9gYnriyn
JgpJRCJpsrwSyhZxsjTZs5cjjp3zv90Pz+/58jzy7gHHvLg4ODjOfef/5tnf
e++quw1Uq0k9nFpm4iZRUGP5OYJbTT23wzcmXvOqdKk0cIc/25zy384yMVCD
e1bTzBeGKm2ZJcNM1PBoj0xVvwI0j/d5tBYm3gwrszJRjIWMNE8dehYTQeDB
M5ldacAyeFXHOMzEDOusSf7bebA20mZdmTWHjRPx0a0aFcCV7Zf11PgramWH
djCcEBYoa8KO4l/wPjVOd/JRA1S0+qpsrM5g4dVthwXFW2BRIVf1r75p9DPL
C363qwOoCeFsWv8UZvJvBn6y6AKtQsPsrq5JHJ05WvuvdQbIy/D+bDwwgTe2
q9FFQnuB1+h5mALXBGo+mr61W+sj8NHfOB2VHUfdGO2fBKs+QX+9l/Gc7WdU
dFWqVdEbgifFvG1FyWMo4LRmWMoahv3jfuP6TaNYokSdKNMdhZTkNKU4kVFk
lNTvwtQxUH5SuFpkPYJzumWu3jOfIcclhiZIH0bdwampDeUJ4ObTH2ueGEJy
KIkrM3oSqJNxYd3xg7j89oqHzNspuFjaGnHIYgD9hLrsC/fMgNsv/zFRWfsH
+60ibHrCZ6HRQKanuuIjBpUGpc7gF1hdCpTRpPVjUueHM/wyc9CcVyC+ateH
PSIR14XdmPCLgG3PqnYvClIN7fqt50FqdnrRXLYHvR8s7ivdnIeAK3BtYImB
ruWWqht3v4GF75NG//FuTLv3aaHFcgESuy37Peq78Nek9Frv1QVwvmx1P7vg
PSYJsIrDMhehJ516TfpBJ/7gFe8lYcqC2Zxt6uKyHahjU2ckN8WCfzQfnxuS
acf2AwryG7FL4J5HV6WotGI+T1Wzo/Yy7N5/IvypRDNKnlpJU2Msg8TC/RYX
6htsSj+/Ny5yBVSEXxTZSTaisOv1UTulVdBZnjo9sO81du6pz2Y2rILZVkpl
kP0r7Gr/WUn04hpIWdpma5XXog/P8Xd5O9bhffH5wZ0iVWjy40OorV8HhruE
R41aJWaqKz7P998AQ/I4kXmpHKMYxjbcIpvgmPP7TyhRiiUO9LLP1Ztgtp0v
74bkI7zgm6p/wHULBEXKhS+15uDjiMrXp9hbYNN2NFyW/zaGzPJ4i3Gy4aTg
127hPjoanTgm3MDNhjX3Xeo7CujIUPvqoCzAhpvNjAAHMzpuDijMLe5gw6J4
wO99NzLxiAGNckOZDS+FODtbRDNwZtXTr9yeDcmrlcPn1G/hvy+KS/EXsYF5
cmdL6oUk1PCdS0wsZoPvZmqus0IS6p9p4RIrZYOow7VcR0YimjtGzu2sYIOX
v3P6in4injdeaFRBNhjVsfjqeBKwWLwr2LqbDT7G5ezP+fGoVZ7Slb7BBlcj
a890SjQeKPYzk2azwU2fI7DnfRQaPzSvzeYgoH3o2EHHhCi0u8NZWMBLgOLs
EaROIjE4KvD6SxECudSDcXIz17HSzlZjUJEAz76Bg7Z3ItCAJUpTsiQQWm1X
EX7vMsaOPl5hWRFYFIps9KRcxo5OM7cGWwJ652a2q6eEoHvxHzoeJwj0pvS6
hMZcwvgz8x/vuROoyH89ZnI1CBl9HVSZqwRMR7ou9ckFoOwbn5TZ0O/9ccoo
RcMfz1Zs23gZTsColtKTdNAP11Pg3cloAuYKnKV6Pj4od+RJcMZNAkXdpr0J
H8+ibw3tlXg+AWem3PBpLTd8XrRXZbSAwO62RZ1c79NI6E23nhYRsCjwkbh7
2BX/G8I+a/OUgOjfR7LB2BlfqPsL06oJdFps7tCO+g25ZAWvuCCBP43K+ii7
j+MRofwR1XoCml173Dna7HBwauBZ6xsCiSKtAXc0bZEn56iTQDcBmbB3z+Oe
maFV8nRD3wcCP4pLz324aIoZ4TFqBX0ERi1lx5UPmeBepxrOw4MEmkQLSz7J
GGGw+UkfyZHvPzOKMmRtgDV6S4zxMQKX2a35i8n6aCOxryB6mkCz2n6ptLua
eJurWcz+C4H8mClJ7kFVHJv3DFVkEqDStm01ze1B1SGO8YVvBF48Mj01HyKP
Ie1/WdWzCFgXKXK78O7Euir9FykrBMSN+BTFfhVFwUKGvNs6gaw/DOJiqzjR
PvNCgsYWgTZpvS+h0tO1d2OFlgghoMEd8YOYYWbN/wA0MWyl
     "]]}, 
   {RGBColor[0.9876318235294118, 0.5354033529411765, 0.060454452941176476`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
QQB/Z3ntUx7/iv8Bkh6ScA==
     "]]}, 
   {RGBColor[0.9734967647058824, 0.40794547058823527`, 0.0379213705882353], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0XssFAAcB/ALW1xCUm3trLjOFTnn0SUzWinWOFe0mltuTqcp5NGMGJFX
a6eH17FEDXmPq7Dh6LoMjTOd50ztGOcY4jjccdXWfr/f9tt3n39+23c/K+7D
Gzw9AoHg93f/pcG5sfJELsuT8H+0OmuaKjII/JjXeqfVnQuOoesvOvpEgOmh
A+l5DgngF8lCphc5C+xpVPmJZFkALvJ/O29YUgH+NpeT8Z3+GexUliSVsbvA
76jZjPkaCbg2cb830bwfHOlT8WjQUgoWGGpjpq4Ng+VKP9HBHRn42QFasWnS
GNixZiH/lNMkmJHpfILYPgUmcygiu/M/wUbsbY8m1S9wI4U6J2TIwbJGsWVX
3gx4mSHkhCtn8f60QqE5MwfWXebrCTLmwZu9CaGkXgX2Mx4OrLVRgieYqazR
lEVwXFNcnrJrCcwfGgkzJC2DR01T00xCVsBEqkfAhP8qOLxy3b5Ji+Z89D2r
Kf0NLiifWuv3XQNf4ReKwrfQfCNVQ7JgHXyEl8OzuKoCu7C6L55UoAfcrK00
WRvgKoP2viDnTfDRYHUBTYbuKbxvm52uBptw0uQBlC3wkI24bEWCHh64QDGL
3QY/MLg5WHF4B+x1/IOnSIwWOJBbqqI04KeySyx9Uy3+93axcLYDHR2R5+rG
2QXXp7Z+Dd5Dn441P2ZYtwd2V5nlUnx14Cx5vVrFREuHfEIk19HchicuobfQ
OWGrk+VctGxcSiUloiM6c7+YV6Fb6mzt5NVoXXFPfnMd+nX83j1WM7rNIcok
twNt8N6PbfQDzXy5IBkfQRelZNKqx9G27M593tNoloV9dcYCukSv71DgEnpm
9W4SeQUdP/CGKVahu9td216p0cRamVXIDjpQEP2cvosuzTLe0OnQfwDTtj/N

     "]]}, 
   {RGBColor[0.9525707647058823, 0.3462155882352941, 0.0289549], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/flfNWskBGyYJwgC3F1ldU85fNT/B8RlPnA=
     "]]}, 
   {RGBColor[0.9177862941176471, 0.28648476470588236`, 0.022288500000000003`],
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVj3k41IkDxoWtMDuSsm1LQhIKpSTJay0bORKK+EmuNOMqIffVrHTQTFRq
K2qdI0ckLRvSyBWKybGFDDmHQeMIzXf9/nif93n/+Lzv8yq4+dt4CgsJCfmt
6P8uuq8zPdTNGtEpzIY+Lg/LhKIG39cRtIDIq9r9PIR5ljmX6buhcOxZNv0D
D+e1RMZ3m/rAP7j8N0olD1ruzXHJmiFQve6UTafzcCOi2MpYKR6l+hQVpg4P
EMt8Jit3C/4ppnU5VyZx5+jD4bX3MuBsVhGmaTqBJLltW1WmM/C/w7Fp7w9N
IH4818HENBM7c6ZIEdoTCL5c2hA7l4k7Keybo1smcKLqbd6iTTZ0JXXXbJ/j
YoPmkj9Xgol5F7XqzVlc0MkOC62RhThto7cvV4KL2qEEWpNWKUKpCv0m42PY
kxbeynaqwvB8esBu8igeqVzWGc5loaHlgZdPyDCYoWsOi69vBLv62qTS3Bf4
mmYEtsi1Iqdygd9TOojUtcvnPx1pQwxrzXG5qAFwxiwrf1xk48LjU3tdKBxc
kdC4KxneiQLy9GrRyH7szh1N2bbnX5CSDr2oon+Gzh/a8uIVn9B0sfdTZEIf
lFyUK9X39+HMoNWeCKleiDl9Myjif8a9c8aCj8mfUKCsMlSsw4FGiIouzfgj
2AU1clXJA6hrv/mmm9uNSZ1iF8rYIFI8KbXq+V3Q6R0ZWVIdgudqrooEoxPE
b4nCqbRhdIdsI0VSOzBXH+IuWz+CTFKq4Sr3D/Altdkxt4/hL8vt0vnWbHRb
RVt3RI2j/6zpTIxlOy4UXUgeq+IibnXv/SH3NiS++3BmrewkNgW1Sxb5vUeH
ZHQs2ZWHXoOB93/S30FcxcC2++gUcqaZmyJCW0HJ/LqraHklzy68rvi7GS4l
FjuXHkzjsnFK9BbFt7iV/mmm0WIGln5pOrEBjTBJvF1JWZiBU6dZsjq7Holi
/PyI1K/ooT0f9DpZh42eCZ4bfuejs/Pm8dNvarHXutpw6wgfLcEfa3vsWGjW
U1RYip+FxqKDZtRUDbJEKxoctedw6kQHm3/hFWROzd/SYM9hfuBBspdMNd7c
pqpdjptHWLtXT6jRS5BdYjm2ygvwCXqtvi+lHO+216TxWAtQkwqypn4vQ1vz
AeV1Ad/QRtlydqNeKbxFj7dkSC9CcYfTwatPi2G8ORuVNYuIbtnR90qoCKma
Ss+z/JaQ1tY6n9/NxCW2kbWI5DKOWLL69+/KQoHD3eLBf5ZB6f9r+vmRRzjn
k6yr5/IdAYbUreVDd/Ekuuz1KcF3hG3qa9/MYyB4XJQitUqAqYdX05eaGTC0
tyGzRARQknc0G3vCAFtjwkFVTABqRmDcNJWB5R7Fya/SAjC6H3Fyh+kw10/a
dEVVAMn5cOG8uhsYW/DwLbETwFui0S+09Rp2BKz/aW2eAPkls2TGYRq0fCav
X88XgDwtk1UgRYPumUZhqSIBEnazhqY+XoKZY9zkz6UCkCyO+QyeuwSq0Uyt
epUAv478PJp0Pw7569sCj7YL0Kgr66u5FIM9JYy220sCSBPKkRGF4dDL9zX9
RSDAfcM5VRGrcBhlm1WmCRH4GqxiOMwNg+2fq5g5PxBwtpluaFQPQ+Cl87Hl
kgQyf3Ad3lgQgjLbY1q9SgQO+cU1hdcGQZ+/LknZgsDNKEwc/f0c4jlP5vlW
BBz65K/Iv/dH6ztTV9YxAiG0srxuGX+45cfsdbcnIKxo/4iU5YuEM1P/prsR
SH9RMtXTTgW7q1VFNpTAOue0h+TznthS580YDyfgZUm6daDJA16la5bKowi8
5Wf4jW73wCIDLSdpK7w68wKP44at5oWBd24QaE3siDfxOw2fl0mv1mcREBe5
qMcussfzPDV1Tg6BqxX1jqb3T4C4+yblaR4B7ezTHZXXjuNmsMDL+ikBdcOo
cPGLtnih6UdO+odAIb0iOV7kKIS3iIc4VxHYrTQS0SFvCXNSVv/OmpX/Rswb
zSbm6B3pedZUR+C2mSKnpvAwRB9bOom1E5DRfJJHEf0VVvRRVtcHAmkBMVWL
XAPcifpDI6eLwGPpLo250YNQc3q56nAvgSSWtH3cHh0Emp30luknIFnArfGO
0cbL/bPsLwME9imcbR4e14L1hl05tFECsqxB4zjjHbgn3CBlx13Z517XtuMo
YWDKI1yJt9KnUX/g7zvy2Nkn9GVmmsCkUWSTieQmBDfft6rhEzg44GHxk74U
qit0XzDmCVjL3HL9QlkNcSZbwXWRgOFMkF2N74KBXeq5a1rfCez6yPtma95v
8CCeNEsQBD4bUHe8K6Yf+g9lH3wN
     "]]}, 
   {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
GfaTiH76wf8Bllk4pQ==
     "]]}, 
   {RGBColor[0.8482173529411765, 0.16702311764705882`, 0.0089557], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
qu+/OtQz+PT0/wCnrUjF
     "]]}, 
   {RGBColor[0.8013415294117647, 0.11503529411764706`, 0.004654], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
E7LD81teELds+vf/Auw3Urs=
     "]]}, 
   {RGBColor[0.7181916470588235, 0.0862764705882353, 0.007446399999999999], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
HCEE753VxlTVsg//H+m6Rb8=
     "]]}, 
   {RGBColor[0.6350417647058824, 0.05751764705882353, 0.0102388], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
vI/jnH3u/x3oSio=
     "]]}, 
   {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
IQQL0SIizq+L/v4/X2xLJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"h\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox["\"Correlation(X,Y)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "4"], StripOnInput -> False], TraditionalForm], 
     NCache[{0.3333333333333333, 
       Complex[-0.8761991844522272, 0.]}, {
      0.3333333333333333, -0.8761991844522272}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{0.6862745098039216, 
       Complex[-0.5939060564767621, 0.]}, {
      0.6862745098039216, -0.5939060564767621}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox["\[Pi]", "2"], StripOnInput -> False], TraditionalForm], 
     NCache[{1.0392156862745097`, 
       Complex[0., 0.]}, {1.0392156862745097`, 0.}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.392156862745098, 
       Complex[0.24428690815648155`, 0.]}, {1.392156862745098, 
      0.24428690815648155`}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]], 
    InsetBox[
     FormBox[
      StyleBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], StripOnInput -> False], 
      TraditionalForm], 
     NCache[{1.745098039215686, 
       Complex[0.1176389027169478, 0.]}, {1.745098039215686, 
      0.1176389027169478}], Background -> Directive[{
        Opacity[0.8], 
        GrayLevel[1]}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.001, 2}, {-0.999657067065967, 0.999657067065967}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662836819026228*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1094, 519},
WindowMargins->{{41, Automatic}, {Automatic, 33}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 3455, 117, 198, "Input"],
Cell[3858, 132, 410, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[4293, 146, 571, 18, 46, "Subsection"],
Cell[4867, 166, 475, 15, 46, "Input"],
Cell[5345, 183, 159, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[5529, 190, 776, 22, 58, "Input"],
Cell[6308, 214, 529, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6874, 237, 1230, 40, 74, "Input"],
Cell[8107, 279, 6920, 127, 248, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15076, 412, 912, 32, 54, "Subsection"],
Cell[CellGroupData[{
Cell[16013, 448, 1227, 38, 84, "Input"],
Cell[17243, 488, 976, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18256, 525, 1031, 34, 63, "Input"],
Cell[19290, 561, 3629, 71, 248, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22968, 638, 171, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[23164, 644, 1274, 38, 84, "Input"],
Cell[24441, 684, 145, 3, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24635, 693, 1714, 55, 58, "Subsection"],
Cell[CellGroupData[{
Cell[26374, 752, 1379, 40, 84, "Input"],
Cell[27756, 794, 1229, 42, 60, "Output"]
}, Open  ]],
Cell[29000, 839, 1151, 35, 69, "Input"],
Cell[CellGroupData[{
Cell[30176, 878, 1902, 65, 67, "Input"],
Cell[32081, 945, 1840, 65, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33958, 1015, 4202, 129, 172, "Input"],
Cell[38163, 1146, 8688, 155, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46900, 1307, 1229, 38, 59, "Subsection"],
Cell[CellGroupData[{
Cell[48154, 1349, 1512, 44, 84, "Input"],
Cell[49669, 1395, 1308, 43, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51014, 1443, 2804, 85, 110, "Input"],
Cell[53821, 1530, 12739, 222, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[66609, 1758, 409, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[67043, 1769, 1332, 39, 84, "Input"],
Cell[68378, 1810, 169, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68584, 1818, 2174, 68, 108, "Input"],
Cell[70761, 1888, 2584, 77, 117, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[73394, 1971, 457, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[73876, 1982, 1332, 39, 84, "Input"],
Cell[75211, 2023, 141, 2, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75401, 2031, 458, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[75884, 2041, 942, 25, 47, "Input"],
Cell[76829, 2068, 1465, 42, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78331, 2115, 4037, 124, 184, "Input"],
Cell[82371, 2241, 862, 24, 58, "Output"],
Cell[83236, 2267, 862, 24, 58, "Output"],
Cell[84101, 2293, 4006, 121, 112, "Output"]
}, Open  ]],
Cell[88122, 2417, 3844, 118, 147, "Input"],
Cell[91969, 2537, 8045, 226, 322, InheritFromParent],
Cell[100017, 2765, 7823, 234, 291, InheritFromParent],
Cell[107843, 3001, 7791, 231, 118, "Output"],
Cell[CellGroupData[{
Cell[115659, 3236, 570, 17, 53, "Input"],
Cell[116232, 3255, 99, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116380, 3262, 474, 8, 36, "Subsection"],
Cell[CellGroupData[{
Cell[116879, 3274, 2288, 70, 132, "Input"],
Cell[119170, 3346, 900, 29, 57, "Output"],
Cell[120073, 3377, 901, 29, 57, "Output"]
}, Open  ]],
Cell[120989, 3409, 92, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[121106, 3414, 171, 4, 28, "Input"],
Cell[121280, 3420, 381, 13, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121698, 3438, 378, 11, 28, "Input"],
Cell[122079, 3451, 209, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122325, 3461, 375, 11, 28, "Input"],
Cell[122703, 3474, 149, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122889, 3481, 632, 17, 28, "Input"],
Cell[123524, 3500, 6612, 121, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130173, 3626, 945, 29, 46, "Input"],
Cell[131121, 3657, 258, 6, 28, "Output"],
Cell[131382, 3665, 7326, 133, 232, "Output"]
}, Open  ]],
Cell[138723, 3801, 10460, 315, 530, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[149220, 4121, 344, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[149589, 4130, 35909, 761, 1306, "Input",
 InitializationCell->True,
 CellID->518614895],
Cell[185501, 4893, 64241, 1041, 550, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249791, 5940, 350, 5, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[250166, 5949, 22390, 539, 1027, "Input"],
Cell[272559, 6490, 104393, 1845, 317, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377001, 8341, 350, 5, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[377376, 8350, 18053, 447, 925, "Input"],
Cell[395432, 8799, 26375, 518, 315, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421844, 9322, 940, 26, 87, "Input"],
Cell[422787, 9350, 7249, 187, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430073, 9542, 215, 5, 28, "Input"],
Cell[430291, 9549, 1614, 45, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431942, 9599, 8396, 232, 423, "Input"],
Cell[440341, 9833, 168916, 2943, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609294, 12781, 5499, 148, 331, "Input"],
Cell[614796, 12931, 61395, 1032, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676228, 13968, 6599, 171, 318, "Input"],
Cell[682830, 14141, 105990, 1768, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788857, 15914, 274, 7, 28, "Input"],
Cell[789134, 15923, 258, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789429, 15934, 215, 5, 28, "Input"],
Cell[789647, 15941, 218, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789902, 15951, 159, 3, 28, "Input"],
Cell[790064, 15956, 361, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790462, 15968, 5632, 136, 250, "Input"],
Cell[796097, 16106, 42110, 740, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838244, 16851, 5664, 138, 258, "Input"],
Cell[843911, 16991, 102118, 1734, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946066, 18730, 3084, 85, 142, "Input"],
Cell[949153, 18817, 64354, 1101, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013544, 19923, 197, 5, 28, "Input"],
Cell[1013744, 19930, 115, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013896, 19937, 3021, 84, 140, "Input"],
Cell[1016920, 20023, 44810, 787, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061767, 20815, 2948, 84, 131, "Input"],
Cell[1064718, 20901, 44674, 784, 230, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

